{
    "type": "object",
    "properties": {
        "Modifiers": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "ModifierId": {
                        "description": "Identifier for your modifier, should be unique. Good practice is to include author/mod sub-identifiers.\n\nEx: `WW_POLICY_TEST_MODIFIER` where `WW` represents the username WildW.",
                        "type": "string"
                    },
                    "ModifierType": {
                        "description": "Use an existing ModifierType instead of specifying an EffectType/CollectionType combo",
                        "enum": [
                            "GRANT_STRENGTH_PER_ADJACENT_UNIT_TYPE",
                            "MODIFIER_ADJUST_DIPLOMATIC_ACTION_PREFERENCE",
                            "MODIFIER_ADJUST_OPEN_BORDERS_FROM_INFLUENCE",
                            "MODIFIER_ALLIANCE_CITIES_MILITARY_UNIT_PRODUCTION",
                            "MODIFIER_ALLIANCE_COMBATS_UNIT_STRENGTHS",
                            "MODIFIER_ALLIANCE_DISTRICTS_ADJUST_GREAT_POINTS",
                            "MODIFIER_ALLIANCE_DO_NOTHING",
                            "MODIFIER_ALLIANCE_PLAYERS_CULTURE_FROM_ALLY",
                            "MODIFIER_ALLIANCE_PLAYERS_ENVOY_POINTS_FROM_ALLY",
                            "MODIFIER_ALLIANCE_PLAYERS_RELIGIOUS_PRESSURE",
                            "MODIFIER_ALLIANCE_PLAYERS_SCIENCE_FROM_ALLY",
                            "MODIFIER_ALLIANCE_PLAYERS_SHARE_SUZERAIN",
                            "MODIFIER_ALLIANCE_PLAYERS_TOURISM_FROM_ALLY",
                            "MODIFIER_ALLIANCE_PLAYERS_YIELD_FROM_FOLLOWERS_OF_ALLY_RELIGIONS",
                            "MODIFIER_ALLIANCE_PLAYER_TRADE_ROUTE_CAPACITY",
                            "MODIFIER_ALLIANCE_RESEARCH_AGREEMENT",
                            "MODIFIER_ALLIANCE_SHARE_VISIBILITY",
                            "MODIFIER_ALLIANCE_TRADE_ROUTE_ADJUST_YIELD",
                            "MODIFIER_ALLIANCE_TRAINED_UNITS_FREE_UPGRADE",
                            "MODIFIER_ALLIANCE_UNIT_MOVEMENT",
                            "MODIFIER_ALL_CITIES_ADJUST_BUILDING_PRODUCTION",
                            "MODIFIER_ALL_CITIES_ADJUST_CITY_GROWTH",
                            "MODIFIER_ALL_CITIES_ADJUST_CITY_YIELD_CHANGE",
                            "MODIFIER_ALL_CITIES_ADJUST_DISTRICT_ADJACENT_NATURAL_WONDER_PRODUCTION",
                            "MODIFIER_ALL_CITIES_ADJUST_DISTRICT_BUILDING_PRODUCTION",
                            "MODIFIER_ALL_CITIES_ADJUST_NATURAL_WONDER_AMENITY",
                            "MODIFIER_ALL_CITIES_ADJUST_PROJECT_PRODUCTION",
                            "MODIFIER_ALL_CITIES_ADJUST_WONDER_ADJACENT_NATURAL_WONDER_PRODUCTION",
                            "MODIFIER_ALL_CITIES_ATTACH_MODIFIER",
                            "MODIFIER_ALL_CITIES_CULTURE_BORDER_EXPANSION",
                            "MODIFIER_ALL_CITIES_FEATURE_ADJACENCY",
                            "MODIFIER_ALL_CITIES_TERRAIN_ADJACENCY",
                            "MODIFIER_ALL_DISTRICTS_ADJUST_YIELD_BASED_ON_ADJACENCY_BONUS",
                            "MODIFIER_ALL_DISTRICTS_ATTACH_MODIFIER",
                            "MODIFIER_ALL_PLAYERS_ADJUST_ERA_SCORE_PER_CURRENT_CIVIC",
                            "MODIFIER_ALL_PLAYERS_ADJUST_ERA_SCORE_PER_CURRENT_TECH",
                            "MODIFIER_ALL_PLAYERS_ADJUST_ERA_SCORE_PER_UNIT_PROMOTION_EARNED",
                            "MODIFIER_ALL_PLAYERS_ADJUST_GOVERNOR_POINTS",
                            "MODIFIER_ALL_PLAYERS_ADJUST_GREAT_PERSON_POINTS",
                            "MODIFIER_ALL_PLAYERS_ATTACH_MODIFIER",
                            "MODIFIER_ALL_UNITS_ADJUST_DIPLO_VISIBILITY_COMBAT_MODIFIER",
                            "MODIFIER_ALL_UNITS_ADJUST_HEAL_PER_TURN",
                            "MODIFIER_ALL_UNITS_ADJUST_HEAL_RELIGION_PER_TURN",
                            "MODIFIER_ALL_UNITS_ADJUST_SPYING_EFFICIENCY",
                            "MODIFIER_ALL_UNITS_APPLY_MODIFIER_IF_PROMOTION_CLASS_MATCHES",
                            "MODIFIER_ALL_UNITS_ATTACH_MODIFIER",
                            "MODIFIER_ALL_UNITS_DISABLE_OPERATION",
                            "MODIFIER_ALL_UNITS_GRANT_ABILITY",
                            "MODIFIER_BUILDING_YIELD_CHANGE",
                            "MODIFIER_CITY_ADJUST_AIR_DEFENSE_BONUS",
                            "MODIFIER_CITY_ADJUST_ALLOWED_IMPROVEMENT",
                            "MODIFIER_CITY_ADJUST_ALLOWED_INCOMING_REGIONAL_STACKING",
                            "MODIFIER_CITY_ADJUST_ATTACKS_PER_TURN",
                            "MODIFIER_CITY_ADJUST_CAN_PURCHASE_DISTRICTS",
                            "MODIFIER_CITY_ADJUST_CITIZEN_GOLD_PER_TURN",
                            "MODIFIER_CITY_ADJUST_CITY_COMBAT_BONUS",
                            "MODIFIER_CITY_ADJUST_CITY_FRIENDLY_COMBAT_BONUS",
                            "MODIFIER_CITY_ADJUST_CITY_YIELD_PER_DISTRICT",
                            "MODIFIER_CITY_ADJUST_RESOURCE_HARVEST_BONUS",
                            "MODIFIER_CITY_ADJUST_SETTLER_CONSUME_POPULATION",
                            "MODIFIER_CITY_ADJUST_SIEGE_PROTECTION",
                            "MODIFIER_CITY_ADJUST_SPY_BONUS",
                            "MODIFIER_CITY_ADJUST_STRATEGIC_RESOURCE_REQUIREMENT_MODIFIER",
                            "MODIFIER_CITY_ADJUST_UNIT_DOMAIN_PRODUCTION",
                            "MODIFIER_CITY_ADJUST_YIELD_FROM_FOREIGN_TRADE_ROUTES_PASSING_THROUGH",
                            "MODIFIER_CITY_CORPS_ARMY_ADJUST_DISCOUNT",
                            "MODIFIER_CITY_DISTRICTS_ADJUST_CITY_AMENITIES_FROM_RELIGION",
                            "MODIFIER_CITY_DISTRICTS_ADJUST_DISTRICT_AMENITY",
                            "MODIFIER_CITY_DISTRICTS_ADJUST_DISTRICT_HOUSING",
                            "MODIFIER_CITY_DISTRICTS_ADJUST_TOURISM_ADJACENCY_YIELD_MOFIFIER",
                            "MODIFIER_CITY_DISTRICTS_ADJUST_TOURISM_CHANGE",
                            "MODIFIER_CITY_DISTRICTS_ADJUST_YIELD_MODIFIER",
                            "MODIFIER_CITY_ENABLE_BUILDING_FAITH_PURCHASE",
                            "MODIFIER_CITY_ENABLE_UNIT_FAITH_PURCHASE",
                            "MODIFIER_CITY_IGNORE_STRATEGIC_RESOURCE_REQUIREMENT",
                            "MODIFIER_CITY_INCREASE_DISTRICT_PRODUCTION_RATE",
                            "MODIFIER_CITY_INCREASE_GREAT_PERSON_POINT_BONUS",
                            "MODIFIER_CITY_OWNER_ADJUST_BUILDING_HOUSING",
                            "MODIFIER_CITY_OWNER_ADJUST_IMPROVEMENT_AMENITY",
                            "MODIFIER_CITY_PLOT_YIELDS_ADJUST_PLOT_YIELD",
                            "MODIFIER_CITY_TRAINED_UNITS_ADJUST_GRANT_EXPERIENCE",
                            "MODIFIER_CITY_TRAINED_UNITS_ADJUST_MOVEMENT",
                            "MODIFIER_CITY_TRAINED_UNITS_ADJUST_XP_BONUS",
                            "MODIFIER_COMBAT_RESULTS_ATTACH_UNIT_MODIFIER",
                            "MODIFIER_CONGRESS_ATTACH_MODIFIER_TO_MINORCIVBONUSTYPE",
                            "MODIFIER_CONGRESS_ATTACH_MODIFIER_TO_PLAYERTYPE",
                            "MODIFIER_DISTRICT_ADJUST_CITY_ATTACK_RANGE",
                            "MODIFIER_EMERGENCY_CAPITALS_GRANT_UNIT",
                            "MODIFIER_EMERGENCY_CAPITAL_CITIES_GRANT_GREAT_PERSON_CLASS_IN_CITY",
                            "MODIFIER_EMERGENCY_CITIES_ADJUST_EXTRA_ACCUMULATION",
                            "MODIFIER_EMERGENCY_CITIES_ADJUST_SPACE_RACE_PROJECTS_PRODUCTION",
                            "MODIFIER_EMERGENCY_CITIES_ADJUST_UNIT_PURCHASE_COST",
                            "MODIFIER_EMERGENCY_CITIES_EXERT_RELIGIOUS_PRESSURE",
                            "MODIFIER_EMERGENCY_CITIES_GRANT_FREE_RESOURCE_IN_CITY",
                            "MODIFIER_EMERGENCY_CITIES_KILL_ALL_EMERGENCY_TARGET_SPIES",
                            "MODIFIER_EMERGENCY_COMBATS_ADJUST_ATTACKER_STRENGTH",
                            "MODIFIER_EMERGENCY_COMBATS_ADJUST_DEFENDER_STRENGTH",
                            "MODIFIER_EMERGENCY_DISTRICTS_ADJUST_TOURISM_CHANGE",
                            "MODIFIER_EMERGENCY_PLAYERS_ADD_FAVOR",
                            "MODIFIER_EMERGENCY_PLAYERS_ADJUST_DIPLOMATIC_VICTORY_POINTS",
                            "MODIFIER_EMERGENCY_PLAYERS_ADJUST_GREAT_PERSON_POINTS",
                            "MODIFIER_EMERGENCY_PLAYERS_ADJUST_ROCK_BAND_UNIT_ALBUM_SALES",
                            "MODIFIER_EMERGENCY_PLAYERS_ADJUST_WAR_WEARINESS",
                            "MODIFIER_EMERGENCY_PLAYERS_ATTACH_MODIFIER",
                            "MODIFIER_EMERGENCY_PLAYERS_GRANT_RANDOM_CIVIC_BOOST_BY_ERA",
                            "MODIFIER_EMERGENCY_PLAYERS_GRANT_RANDOM_TECHNOLOGY_BOOST_BY_ERA",
                            "MODIFIER_EMERGENCY_PLAYERS_GRANT_RELIC",
                            "MODIFIER_EMERGENCY_PLAYERS_GRANT_UNIT",
                            "MODIFIER_EMERGENCY_PLAYERS_GRANT_YIELD",
                            "MODIFIER_EMERGENCY_PLAYERS_MAKE_PROJECT_AVAILABLE",
                            "MODIFIER_EMERGENCY_PLAYERS_YIELDS_PER_ENVOY",
                            "MODIFIER_EMERGENCY_PLAYERS_YIELD_PER_TURN",
                            "MODIFIER_EMERGENCY_TARGET_CITY_GRANT_LOYALTY",
                            "MODIFIER_EMERGENCY_TRADE_ROUTES_ADJUST_YIELDS",
                            "MODIFIER_EMERGENCY_TRADE_ROUTES_CANCEL",
                            "MODIFIER_EMERGENCY_UNITS_ADJUST_HEALING",
                            "MODIFIER_EMERGENCY_UNITS_ADJUST_MOVEMENT",
                            "MODIFIER_EMERGENCY_UNITS_ADJUST_SPYING_EFFICIENCY",
                            "MODIFIER_EMERGENCY_UNITS_GRANT_ABILITY",
                            "MODIFIER_FOLLOWER_YIELD_MODIFIER",
                            "MODIFIER_GAME_ADJUST_PLOT_YIELD",
                            "MODIFIER_GAME_TRIGGER_MECHANIC",
                            "MODIFIER_GOVERNMENT_ADJUST_SLOTS",
                            "MODIFIER_GOVERNOR_ADJUST_ALLIANCE_POINTS",
                            "MODIFIER_GOVERNOR_ADJUST_CAN_FAITH_PURCHASE_DISTRICTS",
                            "MODIFIER_GOVERNOR_ADJUST_CITY_COPY_LUXURIES_FOR_IMPORT",
                            "MODIFIER_GOVERNOR_ADJUST_CITY_COPY_STRATEGICS_FOR_IMPORT",
                            "MODIFIER_GOVERNOR_ADJUST_CITY_ENVOYS",
                            "MODIFIER_GOVERNOR_ADJUST_CITY_ENVOYS_MODIFIER",
                            "MODIFIER_GOVERNOR_ADJUST_CITY_MILITARY_UNIT_PRODUCTION",
                            "MODIFIER_GOVERNOR_ADJUST_DISTRICT_COMBAT_BONUS",
                            "MODIFIER_GOVERNOR_ADJUST_FEATURE_NO_IMPROVEMENT_APPEAL",
                            "MODIFIER_GOVERNOR_ADJUST_GOVERNOR_IDENTITY_PRESSURE",
                            "MODIFIER_GOVERNOR_ADJUST_GRIEVENCE_SCORE",
                            "MODIFIER_GOVERNOR_ADJUST_HEAL",
                            "MODIFIER_GOVERNOR_ADJUST_IGNORE_CULTURAL_IDENTITY",
                            "MODIFIER_GOVERNOR_ADJUST_PREVENET_STRUCTURAL_DAMAGE",
                            "MODIFIER_GOVERNOR_ADJUST_RESOURCE_POWER_PROVIDED_GOVERNOR",
                            "MODIFIER_GRANT_ROUTE_IN_RADIUS",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_BANNED_CITY_PRODUCTION",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_BANNED_POLICY",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_GOVERNOR_FAVOR",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_GREAT_PERSON_POINTS_PERCENT",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_NO_GREAT_PERSON_POINTS",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_POLICY_FAVOR",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_SUZERAIN_FAVOR_BY_BONUS",
                            "MODIFIER_MAJOR_PLAYERS_ADJUST_UNITS_RELIGIOUS_STRENGTH_BY_RELIGION_TYPE",
                            "MODIFIER_MAJOR_PLAYERS_ATTACH_MODIFIER",
                            "MODIFIER_MAJOR_PLAYER_TRADE_ROUTE_BY_CITY_STATE_BONUS_TYPE_MODIFIER",
                            "MODIFIER_MAP_REMOVE_CLIFFS_IN_DIRECTION",
                            "MODIFIER_MOUNTAIN_PORTAL",
                            "MODIFIER_PLAYERS_ADD_CHOP_YIELD",
                            "MODIFIER_PLAYERS_ADJUST_CHOP_BAN",
                            "MODIFIER_PLAYERS_ADJUST_UNIT_BAN_PRODUCTION_YIELD",
                            "MODIFIER_PLAYERS_ADJUST_UNIT_BUFF_PRODUCTION_YIELD",
                            "MODIFIER_PLAYERS_ADJUST_WMD_STOCKPILE",
                            "MODIFIER_PLAYER_ADD_BELIEF",
                            "MODIFIER_PLAYER_ADD_CULTURE_BOMB_TRIGGER",
                            "MODIFIER_PLAYER_ADD_DIPLOMATIC_ACTION_OVERRIDE",
                            "MODIFIER_PLAYER_ADD_DIPLOMATIC_COMBAT_MODIFIER",
                            "MODIFIER_PLAYER_ADD_DIPLOMATIC_MOVEMENT_MODIFIER",
                            "MODIFIER_PLAYER_ADD_DIPLOMATIC_YIELD_MODIFIER",
                            "MODIFIER_PLAYER_ADD_DIPLO_VISIBILITY",
                            "MODIFIER_PLAYER_ADD_FAVOR",
                            "MODIFIER_PLAYER_ADD_RELIGIOUS_BUILDING_MULTIPLIER",
                            "MODIFIER_PLAYER_ADD_SEQUESTERED_CARBON",
                            "MODIFIER_PLAYER_ADD_UPGRADE_MILITARY_FORMATION_ON_CITY_CONQUEST",
                            "MODIFIER_PLAYER_ADJUST_ADDITIONAL_PILLAGING",
                            "MODIFIER_PLAYER_ADJUST_ALLIANCES_SHARED_VIS",
                            "MODIFIER_PLAYER_ADJUST_ALLIANCE_FAVOR_MULTIPLIER",
                            "MODIFIER_PLAYER_ADJUST_ALLIANCE_POINTS",
                            "MODIFIER_PLAYER_ADJUST_ALLIANCE_POINTS_FOR_COMMON_FOE",
                            "MODIFIER_PLAYER_ADJUST_ALLIANCE_POINTS_FOR_TRADE",
                            "MODIFIER_PLAYER_ADJUST_ALLIED_WAR_DISCOUNT",
                            "MODIFIER_PLAYER_ADJUST_ALL_DISTRICTS_CULTURE_BOMB",
                            "MODIFIER_PLAYER_ADJUST_ALWAYS_FULL_RELIGIOUS_TOURISM",
                            "MODIFIER_PLAYER_ADJUST_ALWAYS_LOYAL_COASTAL_HOME_CONTINENT",
                            "MODIFIER_PLAYER_ADJUST_ANYONE_PLUNDER_FAVOR",
                            "MODIFIER_PLAYER_ADJUST_ANYONE_TRADE_TO_FAVOR",
                            "MODIFIER_PLAYER_ADJUST_AUTO_THEMED_BUILDING",
                            "MODIFIER_PLAYER_ADJUST_AUTO_THEME_BUILDINGS_WITH_X_SLOTS",
                            "MODIFIER_PLAYER_ADJUST_AVOID_RANDOM_EVENT",
                            "MODIFIER_PLAYER_ADJUST_BANNED_DIPLOMATIC_ACTION",
                            "MODIFIER_PLAYER_ADJUST_BANNED_DIPLOMATIC_ACTION_SPECIFIC_CIVILIZATION",
                            "MODIFIER_PLAYER_ADJUST_BAN_RESOURCE",
                            "MODIFIER_PLAYER_ADJUST_BID_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_BLOCK_UNIT_ENTRY",
                            "MODIFIER_PLAYER_ADJUST_BUILDING_FAVOR",
                            "MODIFIER_PLAYER_ADJUST_CAPITAL",
                            "MODIFIER_PLAYER_ADJUST_CITY_TILES",
                            "MODIFIER_PLAYER_ADJUST_CIVIC_BOOST",
                            "MODIFIER_PLAYER_ADJUST_CO2_GENERATION_REDUCTION",
                            "MODIFIER_PLAYER_ADJUST_CULTURE_BOMB_CONVERTS_CITY",
                            "MODIFIER_PLAYER_ADJUST_DIPLOMATIC_VICTORY_POINTS",
                            "MODIFIER_PLAYER_ADJUST_DISTRICT_ADD_NAVAL_UNIT",
                            "MODIFIER_PLAYER_ADJUST_DISTRICT_PILLAGE",
                            "MODIFIER_PLAYER_ADJUST_DISTRICT_UNLOCK",
                            "MODIFIER_PLAYER_ADJUST_DUPLICATE_FIRST_INFLUENCE_TOKEN",
                            "MODIFIER_PLAYER_ADJUST_DUPLICATE_INFLUENCE_TOKEN_WHEN_RIVAL_GOVERNMENT",
                            "MODIFIER_PLAYER_ADJUST_DUPLICATE_INFLUENCE_TOKEN_WHEN_SAME_RELIGION",
                            "MODIFIER_PLAYER_ADJUST_EMBARKED_MOVEMENT",
                            "MODIFIER_PLAYER_ADJUST_EMERGENCY_FAVOR_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_ENFORCE_BORDERS",
                            "MODIFIER_PLAYER_ADJUST_ENVOYS_FROM_LEVIED_CITY_STATES",
                            "MODIFIER_PLAYER_ADJUST_EXTRA_FAVOR_PER_TURN",
                            "MODIFIER_PLAYER_ADJUST_EXTRA_STARTING_POPULATION_OFF_HOME_CONTINENT",
                            "MODIFIER_PLAYER_ADJUST_FAITH_FROM_DISPERSAL",
                            "MODIFIER_PLAYER_ADJUST_FAITH_PEACEFUL_FOUNDERS",
                            "MODIFIER_PLAYER_ADJUST_FAVOR_REFUND_FOR_SUCCESSFUL_RESOLUTION",
                            "MODIFIER_PLAYER_ADJUST_FREE_CIVIC_BOOST_WONDER_ERA",
                            "MODIFIER_PLAYER_ADJUST_FREE_GREAT_PERSON_POINTS",
                            "MODIFIER_PLAYER_ADJUST_FREE_RESOURCE_EXTRACTION",
                            "MODIFIER_PLAYER_ADJUST_FREE_RESOURCE_IMPORT",
                            "MODIFIER_PLAYER_ADJUST_FREE_RESOURCE_IMPORT_EXTRACTION",
                            "MODIFIER_PLAYER_ADJUST_FREE_TECH_BOOST_WONDER_ERA",
                            "MODIFIER_PLAYER_ADJUST_FULL_ACCESS_ONE_STRATEGIC",
                            "MODIFIER_PLAYER_ADJUST_GOLD_DISPERSAL",
                            "MODIFIER_PLAYER_ADJUST_GOLD_INTEREST_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_GOVERNMENT_SLOT_TYPE_GRANT_FAVOR",
                            "MODIFIER_PLAYER_ADJUST_GOVERNOR_POINTS",
                            "MODIFIER_PLAYER_ADJUST_GREATPERSON_FAVOR_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_GREAT_PERSON_GUARANTEE",
                            "MODIFIER_PLAYER_ADJUST_GREAT_PERSON_PATRONAGE_DISCOUNT_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_GREAT_PERSON_POINTS",
                            "MODIFIER_PLAYER_ADJUST_GREAT_PERSON_POINTS_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_GREAT_PERSON_POINTS_REFUND_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_GREAT_WORK_OBJECT_NO_TOURISM",
                            "MODIFIER_PLAYER_ADJUST_GREAT_WORK_OBJECT_TOURISM",
                            "MODIFIER_PLAYER_ADJUST_GRIEVANCE_DECAY",
                            "MODIFIER_PLAYER_ADJUST_GRIEVANCE_MULTIPLIER",
                            "MODIFIER_PLAYER_ADJUST_HEALING_FROM_DISPERSAL",
                            "MODIFIER_PLAYER_ADJUST_IDENTITY_PER_TURN_FROM_NEARBY_GREAT_WORKS",
                            "MODIFIER_PLAYER_ADJUST_IMMEDIATE_TRADING_POST",
                            "MODIFIER_PLAYER_ADJUST_IMPROVED_ROUTE_LEVEL",
                            "MODIFIER_PLAYER_ADJUST_IMPROVEMENT_GOODY_HUT",
                            "MODIFIER_PLAYER_ADJUST_IMPROVEMENT_PILLAGE",
                            "MODIFIER_PLAYER_ADJUST_INFLUENCE_POINTS_PER_TURN",
                            "MODIFIER_PLAYER_ADJUST_INQUISITION_START_CHARGES",
                            "MODIFIER_PLAYER_ADJUST_JOINTWAR_EXPERIENCE",
                            "MODIFIER_PLAYER_ADJUST_JOINTWAR_PLUNDER",
                            "MODIFIER_PLAYER_ADJUST_LEVIED_UNIT_IGNORE_STRATEGIC_RESOURCE",
                            "MODIFIER_PLAYER_ADJUST_LEVIED_UNIT_UPGRADE_DISCOUNT_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_LEVY_DISCOUNT_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_MAX_WARMONGER_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_MOST_ADVANCED_STRATEGIC_RESOURCE_COUNT",
                            "MODIFIER_PLAYER_ADJUST_NATURAL_WONDER_RELIC",
                            "MODIFIER_PLAYER_ADJUST_NO_CAP_RESOURCE",
                            "MODIFIER_PLAYER_ADJUST_NO_OCCUPATION_PENALTIES",
                            "MODIFIER_PLAYER_ADJUST_OVERALL_TOURISM_REDUCTION",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ALWAYS_ALLOW_COMMEMORATION_QUEST_COUNT",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_CULTURAL_IDENTITY_PRESSURE_RADIUS_FROM_CAPITAL",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_AERODROME_BUILDING_CONSTRUCTED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_ARMY_KILLED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_ARTIFACT_EXTRACTED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_CITY_RELIGION_CONVERSION",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_CIVIC_BOOST",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_CONTINENT_DISCOVERED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_CORPS_KILLED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_CULTURE_BUILDING_CONSTRUCTED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_DISTRICT_CONSTRUCTED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_GREAT_PERSON_EARNED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_INDUSTRIAL_BUILDING_CONSTRUCTED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_NATURAL_WONDER_DISCOVERED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_NON_BARBARIAN_NAVAL_UNIT_KILLED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_NON_BARBARIAN_UNIT_KILLED_BY_GDR",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_PRIDE_MOMENT",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_SCIENCE_BUILDING_CONSTRUCTED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_SPY_SUCCESSFUL_MISSION",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_TECH_BOOST",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_ERA_SCORE_PER_TRADE_ROUTE_COMPLETED",
                            "MODIFIER_PLAYER_ADJUST_PLAYER_IDENTITY_PER_TURN_FOR_DOMESTIC_TRADE_ROUTE_ORIGIN",
                            "MODIFIER_PLAYER_ADJUST_PLOT_YIELD",
                            "MODIFIER_PLAYER_ADJUST_POLICY_FAVOR",
                            "MODIFIER_PLAYER_ADJUST_POPULATION_AFTER_CONQUEST",
                            "MODIFIER_PLAYER_ADJUST_POST_COMBAT_LOYALTY",
                            "MODIFIER_PLAYER_ADJUST_POST_PILLAGE_LOYALTY",
                            "MODIFIER_PLAYER_ADJUST_PREVENT_HARVEST_RESOURCE",
                            "MODIFIER_PLAYER_ADJUST_PROGRESS_DIFF_TRADE_BONUS",
                            "MODIFIER_PLAYER_ADJUST_PROPERTY",
                            "MODIFIER_PLAYER_ADJUST_RANDOM_EVENT_MODIFIED_DAMAGE_OPPOSING_PLAYER",
                            "MODIFIER_PLAYER_ADJUST_RANDOM_EVENT_NO_UNIT_DAMAGE",
                            "MODIFIER_PLAYER_ADJUST_RELIGION_BUILDING_DISCOUNT",
                            "MODIFIER_PLAYER_ADJUST_RELIGIOUS_TOURISM_REDUCTION",
                            "MODIFIER_PLAYER_ADJUST_RESOURCE_ACCUMULATION_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_RESOURCE_STOCKPILE_CAP",
                            "MODIFIER_PLAYER_ADJUST_SCIENCE_VICTORY_POINTS",
                            "MODIFIER_PLAYER_ADJUST_SCIENCE_VICTORY_POINTS_PER_TURN",
                            "MODIFIER_PLAYER_ADJUST_SEND_INFLUENCE_TOKEN_FAVOR_BY_BONUS",
                            "MODIFIER_PLAYER_ADJUST_SEND_TRADE_ROUTE_FAVOR_BY_BONUS",
                            "MODIFIER_PLAYER_ADJUST_SETTLE_FOREIGN_CONTINENT_UNIT_CLASS",
                            "MODIFIER_PLAYER_ADJUST_SKIP_FREE_CITY_STEP",
                            "MODIFIER_PLAYER_ADJUST_SPY_BONUS",
                            "MODIFIER_PLAYER_ADJUST_STEAL_TECH_BOOSTS",
                            "MODIFIER_PLAYER_ADJUST_SUZERAIN_BONUS_DISABLED",
                            "MODIFIER_PLAYER_ADJUST_SUZERAIN_FAVOR_MULTIPLIER",
                            "MODIFIER_PLAYER_ADJUST_TARGET_CITY_SPY_YIELD_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_TECHNOLOGY_BOOST",
                            "MODIFIER_PLAYER_ADJUST_TERRAIN_WORKABLE",
                            "MODIFIER_PLAYER_ADJUST_THEMED_ALL_YIELDS",
                            "MODIFIER_PLAYER_ADJUST_THEMED_TOURISM",
                            "MODIFIER_PLAYER_ADJUST_TOKEN_ON_TRADE_ROUTE_STARTED",
                            "MODIFIER_PLAYER_ADJUST_TOURISM",
                            "MODIFIER_PLAYER_ADJUST_TOURISM_FROM_NATIONAL_PARKS",
                            "MODIFIER_PLAYER_ADJUST_TOURISM_INTO_FAVOR",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTES_CITY_STATE_YIELD",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_CAPACITY",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_CAPACITY_FOUND_FOREIGN_CITY",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_CAPACITY_GOLDEN_AGE",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_DESTINATION_YIELD_FOR_ALLY_ROUTE",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_DESTINATION_YIELD_FOR_SUZERAIN_ROUTE",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_ORIGIN_YIELD_FOR_ALLY_ROUTE",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_ORIGIN_YIELD_FOR_SUZERAIN_ROUTE",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_RELIGIOUS_PRESSURE",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_TOURISM_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_WATER_RANGE",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_FOR_DOMESTIC",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_FOR_INTERNATIONAL",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_PER_IMPROVEMENT_IN_TARGET",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_PER_POST_IN_FOREIGN_CITY",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_PER_POST_IN_OWN_CITY",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_PER_SPECIALTY_DISTRICT_FOR_DOMESTIC",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_PER_SPECIALTY_DISTRICT_FOR_INTERNATIONAL",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_PER_TERRAIN_DOMESTIC",
                            "MODIFIER_PLAYER_ADJUST_TRADE_ROUTE_YIELD_PER_TERRAIN_INTERNATIONAL",
                            "MODIFIER_PLAYER_ADJUST_UNIT_DISTRICT_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_UNIT_MAINTENANCE_DISCOUNT",
                            "MODIFIER_PLAYER_ADJUST_UNIT_PROJECT_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_UNIT_UPGRADE_DISCOUNT_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_UNIT_UPGRADE_RESOURCE_COST_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_UNIT_WONDER_PERCENT",
                            "MODIFIER_PLAYER_ADJUST_VALID_BUILDING",
                            "MODIFIER_PLAYER_ADJUST_VALID_IMPROVEMENT",
                            "MODIFIER_PLAYER_ADJUST_VALID_UNIT_BUILD",
                            "MODIFIER_PLAYER_ADJUST_WARMONGER_MULTIPLIER",
                            "MODIFIER_PLAYER_ADJUST_WAR_WEARINESS",
                            "MODIFIER_PLAYER_ADJUST_WMD_MAINTENANCE_MODIFIER",
                            "MODIFIER_PLAYER_ADJUST_YIELD_CHANGE",
                            "MODIFIER_PLAYER_ADJUST_YIELD_CHANGE_PER_TRIBUTARY",
                            "MODIFIER_PLAYER_ADJUST_YIELD_CHANGE_PER_USED_INFLUENCE_TOKEN",
                            "MODIFIER_PLAYER_ADJUST_YIELD_MODIFIER_PER_EARNED_GREAT_PERSON",
                            "MODIFIER_PLAYER_ADJUST_YIELD_MODIFIER_PER_TRIBUTARY",
                            "MODIFIER_PLAYER_ADOPT_ALLY_FOUNDED_RELIGIONS",
                            "MODIFIER_PLAYER_ALLIANCES_ATTACH_MODIFIER",
                            "MODIFIER_PLAYER_BUILT_CITIES_GRANT_FREE_POPULATION",
                            "MODIFIER_PLAYER_BUILT_CITIES_GRANT_FREE_UNIT",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_BUILDING_HOUSING",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_BUILDING_PRODUCTION",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_CITY_ENTERTAINMENT",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_CITY_GROWTH",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_CITY_YIELD_CHANGE",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_CITY_YIELD_MODIFIER",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_DISTRICT_PRODUCTION",
                            "MODIFIER_PLAYER_CAPITAL_CITY_ADJUST_UNIT_PRODUCTION",
                            "MODIFIER_PLAYER_CAPTURED_CITY_ATTACH_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_ADD_EXPENDED_GREAT_PERSON_TILES",
                            "MODIFIER_PLAYER_CITIES_ADD_POPULATION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_ADJACENT_RIVER_BUILDING_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_ADJACENT_RIVER_DISTRICT_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_ADJUST_LOYALTY_FROM_GREAT_WORKS_CITIZENS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_ALL_BUILDINGS_PURCHASE_COST",
                            "MODIFIER_PLAYER_CITIES_ADJUST_ALL_DISTRICTS_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_ALL_PROJECTS_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_ALWAYS_LOYAL",
                            "MODIFIER_PLAYER_CITIES_ADJUST_AMENITIES_FROM_GOVERNORS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_HOUSING",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_PRODUCTION_CHANGE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_PRODUCTION_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_PURCHASE_COST",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_YIELD_CHANGE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_YIELD_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_ADJUST_BUILDING_YIELD_MODIFIERS_FOR_DISTRICT",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_ALL_YIELDS_CHANGE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_AMENITIES_FROM_CITY_STATES",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_APPEAL",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_GROWTH",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_HIT_POINTS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_STATE_TRADE_ROUTE_DISTRICT_YIELD",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_YIELD_CHANGE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_YIELD_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_YIELD_MODIFIER_PER_GOVERNOR_TITLE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_YIELD_PER_DISTRICT",
                            "MODIFIER_PLAYER_CITIES_ADJUST_CITY_YIELD_PER_POPULATION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_DISTRICT_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_DISTRICT_PRODUCTION_CHANGE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_DISTRICT_PRODUCTION_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_ADJUST_EXTRA_ACCUMALATION_TERRAIN",
                            "MODIFIER_PLAYER_CITIES_ADJUST_EXTRA_ACCUMULATION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_EXTRA_ACCUMULATION_SPECIFIC_RESOURCE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_EXTRA_FAVOR_PER_TURN",
                            "MODIFIER_PLAYER_CITIES_ADJUST_EXTRA_GREAT_WORK_SLOTS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_EXTRA_UNIT_COPY",
                            "MODIFIER_PLAYER_CITIES_ADJUST_EXTRA_UNIT_COPY_TAG",
                            "MODIFIER_PLAYER_CITIES_ADJUST_FEATURE_APPEAL_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_ADJUST_FREE_POWER",
                            "MODIFIER_PLAYER_CITIES_ADJUST_GREATWORK_YIELD",
                            "MODIFIER_PLAYER_CITIES_ADJUST_GREAT_PERSON_POINT",
                            "MODIFIER_PLAYER_CITIES_ADJUST_GREAT_PERSON_POINT_BASE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_GREAT_PERSON_POINT_BONUS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_HAPPINESS_GREAT_PERSON",
                            "MODIFIER_PLAYER_CITIES_ADJUST_HAPPINESS_YIELD",
                            "MODIFIER_PLAYER_CITIES_ADJUST_HOUSING_PER_DISTRICT",
                            "MODIFIER_PLAYER_CITIES_ADJUST_IDENTITY_PER_CITIZEN",
                            "MODIFIER_PLAYER_CITIES_ADJUST_IDENTITY_PER_TURN",
                            "MODIFIER_PLAYER_CITIES_ADJUST_IDENTITY_PRESSURE_FROM_EMERGENCIES",
                            "MODIFIER_PLAYER_CITIES_ADJUST_IMPROVEMENT_AMENITY",
                            "MODIFIER_PLAYER_CITIES_ADJUST_IMPROVEMENT_VALID_TERRAIN",
                            "MODIFIER_PLAYER_CITIES_ADJUST_INNER_DEFENSE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_MILITARY_UNITS_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_NUM_UNITS_SUPPORTED",
                            "MODIFIER_PLAYER_CITIES_ADJUST_OUTER_DEFENSE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_PLOT_PURCHASE_COST",
                            "MODIFIER_PLAYER_CITIES_ADJUST_PLOT_PURCHASE_COST_TERRAIN",
                            "MODIFIER_PLAYER_CITIES_ADJUST_POLICY_AMENITY",
                            "MODIFIER_PLAYER_CITIES_ADJUST_POLICY_HOUSING",
                            "MODIFIER_PLAYER_CITIES_ADJUST_PROJECT_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_RANGED_STRIKE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_RELIGION_AMENITIES_FOR_MINIMUM_FOLLOWERS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_RESOURCE_STOCKPILE_CAP",
                            "MODIFIER_PLAYER_CITIES_ADJUST_RIVER_DISTRICT_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_RIVER_WONDER_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_SPACE_RACE_PROJECTS_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TERRAIN_YIELD_FROM_ADJACENT_IMPROVEMENTS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TOURISM",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TRADE_ROUTE_CAPACITY",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TRADE_ROUTE_YIELD_FROM_OTHERS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TRADE_ROUTE_YIELD_PER_DESTINATION_LUXURY_FOR_INTERNATIONAL",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TRADE_ROUTE_YIELD_PER_DESTINATION_STRATEGIC_FOR_DOMESTIC",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TRADE_ROUTE_YIELD_PER_DESTINATION_STRATEGIC_FOR_INTERNATIONAL",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TRADE_ROUTE_YIELD_TO_OTHERS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_TRAIT_AMENITY",
                            "MODIFIER_PLAYER_CITIES_ADJUST_UNITS_PURCHASE_COST",
                            "MODIFIER_PLAYER_CITIES_ADJUST_UNIT_MAX_LEVEL",
                            "MODIFIER_PLAYER_CITIES_ADJUST_UNIT_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_UNIT_PRODUCTION_CHANGE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_UNIT_PRODUCTION_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_ADJUST_UNIT_PURCHASE_COST",
                            "MODIFIER_PLAYER_CITIES_ADJUST_UNIT_TAG_ERA_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_VALID_FEATURES_DISTRICTS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_VALID_FEATURES_WONDERS",
                            "MODIFIER_PLAYER_CITIES_ADJUST_WATER_HOUSING",
                            "MODIFIER_PLAYER_CITIES_ADJUST_WONDER_ERA_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_WONDER_PRODUCTION",
                            "MODIFIER_PLAYER_CITIES_ADJUST_WONDER_YIELD_CHANGE",
                            "MODIFIER_PLAYER_CITIES_ADJUST_YIELD_FROM_FOREIGN_TRADE_ROUTES_PASSING_THROUGH",
                            "MODIFIER_PLAYER_CITIES_ADJUST_YIELD_FROM_POWERED_BUILDINGS",
                            "MODIFIER_PLAYER_CITIES_ATTACH_MODIFIER",
                            "MODIFIER_PLAYER_CITIES_CHANGE_POPULATION_CREATE_UNIT",
                            "MODIFIER_PLAYER_CITIES_DISTRICT_ADJACENCY",
                            "MODIFIER_PLAYER_CITIES_ENABLE_BUILDING_FAITH_PURCHASE",
                            "MODIFIER_PLAYER_CITIES_ENABLE_UNIT_FAITH_PURCHASE",
                            "MODIFIER_PLAYER_CITIES_EXTRA_DISTRICT",
                            "MODIFIER_PLAYER_CITIES_FEATURE_ADJACENCY",
                            "MODIFIER_PLAYER_CITIES_GRANT_CHEAPEST_BUILDING_IN_CITY",
                            "MODIFIER_PLAYER_CITIES_GRANT_ROAD_TO_CAPITAL",
                            "MODIFIER_PLAYER_CITIES_GRANT_TRADING_POST",
                            "MODIFIER_PLAYER_CITIES_GRANT_UNIT_BY_CLASS",
                            "MODIFIER_PLAYER_CITIES_GRANT_UNIT_IN_CITY",
                            "MODIFIER_PLAYER_CITIES_NO_CULTURE_BORDER_EXPANSION",
                            "MODIFIER_PLAYER_CITIES_RIVER_ADJACENCY",
                            "MODIFIER_PLAYER_CITIES_TERRAIN_ADJACENCY",
                            "MODIFIER_PLAYER_CITYSTATEUNITS_ATTACH_MODIFIER",
                            "MODIFIER_PLAYER_CITY_REMOVE_OTHER_RELIGIONS",
                            "MODIFIER_PLAYER_CITY_TRADE_ROUTE_YIELD_PER_LOCAL_BONUS_RESOURCE_FOR_DOMESTIC",
                            "MODIFIER_PLAYER_CITY_TRADE_ROUTE_YIELD_PER_LOCAL_BONUS_RESOURCE_FOR_INTERNATIONAL",
                            "MODIFIER_PLAYER_CORPS_ARMY_MODIFIED_STRENGTH",
                            "MODIFIER_PLAYER_CORPS_ARMY_PREREQ",
                            "MODIFIER_PLAYER_CREATE_WMD",
                            "MODIFIER_PLAYER_CULTURE_ADJUST_GOVERNMENT_SLOTS_MODIFIER",
                            "MODIFIER_PLAYER_CULTURE_REPLACE_GOVERNMENT_SLOTS",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_ANGEVIN_EMPIRE",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_ARCHIPELAGIC_STATE",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_AYYUBID_DYNASTY",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_BLACK_QUEEN",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_BULL_MOOSE",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_BUSHIDO",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_CANADIAN_EXPEDITIONARY",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_END_TO_SUFFERING",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_ENVIRONMENT",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_EXPLOITATIVE",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_FLAT_EARTHER",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_HORN_CHEST_LOINS",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_HORSE_LORD",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_KAITIAKITANGA",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_LAST_VIKING_KING",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_LAWGIVER",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_LORD_OF_MINES",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_MAGNIFICENCES",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_OPPORTUNIST",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_OPTIMUS_PRINCEPS",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_PARANOID",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_PATRON_OF_ARTS",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_PERPETUALLY_ON_GUARD",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_QUEEN_OF_NILE",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_RAVEN_BANNER",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_SHORT_LIFE_GLORY",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_SPIRIT_OF_TUCAPEL",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_TURTLER",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_WITH_SHIELD_OR_ON_IT",
                            "MODIFIER_PLAYER_DIPLOMACY_AGENDA_ZEALOT",
                            "MODIFIER_PLAYER_DIPLOMACY_ARCHAEOLOGY",
                            "MODIFIER_PLAYER_DIPLOMACY_BROKEN_PLEDGE",
                            "MODIFIER_PLAYER_DIPLOMACY_BROKEN_PROMISE",
                            "MODIFIER_PLAYER_DIPLOMACY_ESPIONAGE",
                            "MODIFIER_PLAYER_DIPLOMACY_GOVERNMENTS",
                            "MODIFIER_PLAYER_DIPLOMACY_INCURSION",
                            "MODIFIER_PLAYER_DIPLOMACY_KEPT_PLEDGE",
                            "MODIFIER_PLAYER_DIPLOMACY_KEPT_PROMISE",
                            "MODIFIER_PLAYER_DIPLOMACY_NEW_WARMONGER",
                            "MODIFIER_PLAYER_DIPLOMACY_NO_PLEDGE",
                            "MODIFIER_PLAYER_DIPLOMACY_NO_PROMISE",
                            "MODIFIER_PLAYER_DIPLOMACY_ONE_SIDED_TRADES",
                            "MODIFIER_PLAYER_DIPLOMACY_PEACEFUL",
                            "MODIFIER_PLAYER_DIPLOMACY_RANDOM",
                            "MODIFIER_PLAYER_DIPLOMACY_SETTLED_CITIES",
                            "MODIFIER_PLAYER_DIPLOMACY_SIMPLE_MODIFIER",
                            "MODIFIER_PLAYER_DIPLOMACY_THIRD_PARTY_EFFECTS",
                            "MODIFIER_PLAYER_DIPLOMACY_THIRD_PARTY_WARMONGER",
                            "MODIFIER_PLAYER_DIPLOMACY_TRADE_RELATIONS",
                            "MODIFIER_PLAYER_DISABLE_GRIEVANCE_DECAY",
                            "MODIFIER_PLAYER_DISABLE_HEALING",
                            "MODIFIER_PLAYER_DISABLE_INFLUENCE",
                            "MODIFIER_PLAYER_DISABLE_PATRONAGE",
                            "MODIFIER_PLAYER_DISABLE_SETTLING",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_BUILDING_PRODUCTION",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_DISTRICT_PRODUCTION",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_EXTRA_ENTERTAINMENT",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_EXTRA_REGIONAL_RANGE",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_GREAT_PERSON_POINTS",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_HOUSING",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_TOURISM_CHANGE",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_TRADE_ROUTE_CAPACITY",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_UNIT_PRODUCTION",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_YIELD_BASED_ON_ADJACENCY_BONUS",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_YIELD_BASED_ON_APPEAL",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_YIELD_CHANGE",
                            "MODIFIER_PLAYER_DISTRICTS_ADJUST_YIELD_MODIFIER",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_BASE_YIELD_CHANGE",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_DISTRICT_AMENITY",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_EXTRA_REGIONAL_ENTERTAINMENT",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_EXTRA_REGIONAL_RANGE",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_EXTRA_REGIONAL_YIELD",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_GREAT_PERSON_POINTS",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_TOURISM_CHANGE",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_YIELD_BASED_ON_ADJACENCY_BONUS",
                            "MODIFIER_PLAYER_DISTRICT_ADJUST_YIELD_CHANGE",
                            "MODIFIER_PLAYER_DISTRICT_CREATE_UNIT",
                            "MODIFIER_PLAYER_DISTRICT_CREATE_YIELD",
                            "MODIFIER_PLAYER_DISTRICT_GRANT_AIR_SLOTS",
                            "MODIFIER_PLAYER_EXPLORE_ENTIRE_MAP",
                            "MODIFIER_PLAYER_GAINS_ALL_FOLLOWER_BELIEFS",
                            "MODIFIER_PLAYER_GAINS_FOUNDER_BELIEF_MAJORITY_RELIGION",
                            "MODIFIER_PLAYER_GOVERNMENT_ACCUMULATING_BONUS",
                            "MODIFIER_PLAYER_GOVERNMENT_ADJUST_BONUS_RATE",
                            "MODIFIER_PLAYER_GOVERNMENT_ADJUST_OTHER_GOVERNMENT_INTOLERANCE",
                            "MODIFIER_PLAYER_GOVERNMENT_FLAT_BONUS",
                            "MODIFIER_PLAYER_GOVERNORS_ADJUST_GOVERNOR_IDENTITY_PRESSURE",
                            "MODIFIER_PLAYER_GOVERNORS_ADJUST_IDENTITY_PER_TITLE",
                            "MODIFIER_PLAYER_GRANT_ADVANCED_UNIT_OF_CLASS_IN_NEAREST_OWNER_CITY_AND_APPLY_ABILITY",
                            "MODIFIER_PLAYER_GRANT_ALL_TECHNOLOGY_BOOST_BY_ERA",
                            "MODIFIER_PLAYER_GRANT_BOOST_WITH_GREAT_PERSON",
                            "MODIFIER_PLAYER_GRANT_CITIES_FRESHWATER_HOUSING_BONUS",
                            "MODIFIER_PLAYER_GRANT_CITIES_URBAN_DEFENSES",
                            "MODIFIER_PLAYER_GRANT_COMBAT_ADJACENCY",
                            "MODIFIER_PLAYER_GRANT_FAITH_FROM_HARVEST",
                            "MODIFIER_PLAYER_GRANT_FAITH_FROM_REMOVE_FEATURE",
                            "MODIFIER_PLAYER_GRANT_FREE_RESOURCE_FROM_UNIT_PLOT",
                            "MODIFIER_PLAYER_GRANT_FREE_RESOURCE_VISIBILITY",
                            "MODIFIER_PLAYER_GRANT_INFLUENCE_TOKEN",
                            "MODIFIER_PLAYER_GRANT_INFLUENCE_TOKEN_FROM_CITY_WONDER",
                            "MODIFIER_PLAYER_GRANT_RANDOM_CIVIC",
                            "MODIFIER_PLAYER_GRANT_RANDOM_CIVIC_BOOST_BY_ERA",
                            "MODIFIER_PLAYER_GRANT_RANDOM_CIVIC_BOOST_GOODY_HUT",
                            "MODIFIER_PLAYER_GRANT_RANDOM_CIVIC_BOOST_ON_NEW_ERA",
                            "MODIFIER_PLAYER_GRANT_RANDOM_RESOURCE_PRODUCT",
                            "MODIFIER_PLAYER_GRANT_RANDOM_TECHNOLOGY",
                            "MODIFIER_PLAYER_GRANT_RANDOM_TECHNOLOGY_BOOST_BY_ERA",
                            "MODIFIER_PLAYER_GRANT_RANDOM_TECHNOLOGY_BOOST_GOODY_HUT",
                            "MODIFIER_PLAYER_GRANT_RANDOM_TECHNOLOGY_BOOST_ON_NEW_ERA",
                            "MODIFIER_PLAYER_GRANT_RELIC",
                            "MODIFIER_PLAYER_GRANT_SPECIFIC_TECHNOLOGY",
                            "MODIFIER_PLAYER_GRANT_SPECIFIC_TECH_BOOST",
                            "MODIFIER_PLAYER_GRANT_SPY",
                            "MODIFIER_PLAYER_GRANT_UNIT_IN_CAPITAL",
                            "MODIFIER_PLAYER_GRANT_YIELD",
                            "MODIFIER_PLAYER_GRANT_YIELD_BASED_ON_CURRENT_YIELD_RATE",
                            "MODIFIER_PLAYER_GRANT_YIELD_PERCENT_UNIT_COST",
                            "MODIFIER_PLAYER_LOYALTY_ADJUST_MARTIAL_LAW_MODIFIER",
                            "MODIFIER_PLAYER_MULTIPLY_TREASURY",
                            "MODIFIER_PLAYER_NEAREST_CITY_ADD_POPULATION",
                            "MODIFIER_PLAYER_OWNED_BONUS_RESOURCE_EXTRA_AMENITIES",
                            "MODIFIER_PLAYER_OWNED_LUXURY_EXTRA_AMENITIES",
                            "MODIFIER_PLAYER_RELIGION_ADD_PLAYER_BELIEF_YIELD",
                            "MODIFIER_PLAYER_RELIGION_ADD_RELIGIOUS_BELIEF_YIELD",
                            "MODIFIER_PLAYER_RELIGION_ADD_RELIGIOUS_BUILDING",
                            "MODIFIER_PLAYER_RELIGION_ADD_RELIGIOUS_UNIT",
                            "MODIFIER_PLAYER_RELIGION_ADJUST_COMBAT_LOSS",
                            "MODIFIER_PLAYER_RELIGION_ADJUST_RELIGIOUS_SPREAD_DISTANCE",
                            "MODIFIER_PLAYER_RELIGION_ADJUST_RELIGIOUS_SPREAD_STRENGTH",
                            "MODIFIER_PLAYER_RELIGION_ENABLE_AUTO_SPREAD",
                            "MODIFIER_PLAYER_RELIGION_ENABLE_AWARDS_ENVOY",
                            "MODIFIER_PLAYER_RELIGION_ENABLE_AWARDS_ENVOY_RELIGIOUS_PRESSURE",
                            "MODIFIER_PLAYER_SEND_GOLD_TO_EMERGENCIES_OF_TYPE",
                            "MODIFIER_PLAYER_TRADE_GAIN_TILES_EN_ROUTE",
                            "MODIFIER_PLAYER_TRADE_ROUTES_CANCEL",
                            "MODIFIER_PLAYER_TRADE_ROUTES_DISABLE",
                            "MODIFIER_PLAYER_TRAINED_UNITS_ADJUST_BUILDER_CHARGES",
                            "MODIFIER_PLAYER_TRAINED_UNITS_GRANT_ABILITY",
                            "MODIFIER_PLAYER_TREAT_CAPITAL_AS_HOLY_CITY",
                            "MODIFIER_PLAYER_TREAT_HOLY_SITES_AS_HOLY_CITIES",
                            "MODIFIER_PLAYER_UNITS_ADJUST_ATTACK_RANGE",
                            "MODIFIER_PLAYER_UNITS_ADJUST_BARBARIAN_COMBAT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_BUILDER_CHARGES",
                            "MODIFIER_PLAYER_UNITS_ADJUST_COMBAT_DIFFICULTY",
                            "MODIFIER_PLAYER_UNITS_ADJUST_COMBAT_STRENGTH",
                            "MODIFIER_PLAYER_UNITS_ADJUST_DAMAGE",
                            "MODIFIER_PLAYER_UNITS_ADJUST_DIPLO_VISIBILITY_COMBAT_MODIFIER",
                            "MODIFIER_PLAYER_UNITS_ADJUST_ENABLE_WALL_ATTACK_WHOLE_GAME_PROMOTION_CLASS",
                            "MODIFIER_PLAYER_UNITS_ADJUST_ENEMY_TERRITORY_START_MOVEMENT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_EVICT_PERCENT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_EXTRA_UNIT_COPY",
                            "MODIFIER_PLAYER_UNITS_ADJUST_EXTRA_UNIT_COPY_TAG",
                            "MODIFIER_PLAYER_UNITS_ADJUST_FAITH_ON_DISTRICT_PILLAGE",
                            "MODIFIER_PLAYER_UNITS_ADJUST_FAITH_ON_IMPROVEMENT_PILLAGE",
                            "MODIFIER_PLAYER_UNITS_ADJUST_FLANKING_BONUS_MODIFIER",
                            "MODIFIER_PLAYER_UNITS_ADJUST_FRIENDLY_TERRITORY_COMBAT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_FRIENDLY_TERRITORY_START_MOVEMENT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_GRANT_EXPERIENCE",
                            "MODIFIER_PLAYER_UNITS_ADJUST_GREAT_PERSON_CHARGES",
                            "MODIFIER_PLAYER_UNITS_ADJUST_HEAL_FROM_COMBAT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_HEAL_PER_TURN",
                            "MODIFIER_PLAYER_UNITS_ADJUST_HEAL_RELIGION_PER_TURN",
                            "MODIFIER_PLAYER_UNITS_ADJUST_IGNORE_RIVERS",
                            "MODIFIER_PLAYER_UNITS_ADJUST_IGNORE_SHORES",
                            "MODIFIER_PLAYER_UNITS_ADJUST_INITIATION_YIELD_POPULATION",
                            "MODIFIER_PLAYER_UNITS_ADJUST_MOVEMENT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_OWNER",
                            "MODIFIER_PLAYER_UNITS_ADJUST_PER_LUXURY_ATTACK_MODIFIER",
                            "MODIFIER_PLAYER_UNITS_ADJUST_PLUNDER_YIELDS",
                            "MODIFIER_PLAYER_UNITS_ADJUST_POST_COMBAT_YIELD",
                            "MODIFIER_PLAYER_UNITS_ADJUST_ROCK_BAND_TOURISM_BOMB_VALUE_PEACE",
                            "MODIFIER_PLAYER_UNITS_ADJUST_SEA_MOVEMENT",
                            "MODIFIER_PLAYER_UNITS_ADJUST_SPREAD_CHARGES",
                            "MODIFIER_PLAYER_UNITS_ADJUST_SPY_ESTABLISH_TIME",
                            "MODIFIER_PLAYER_UNITS_ADJUST_SPY_OFFENSIVE_OPERATION_TIME",
                            "MODIFIER_PLAYER_UNITS_ADJUST_SPY_OPERATION_TIME",
                            "MODIFIER_PLAYER_UNITS_ADJUST_STRENGTH_REDUCTION_FOR_DAMAGE_MODIFIER",
                            "MODIFIER_PLAYER_UNITS_ADJUST_STRENGTH_WHEN_DEFENDING",
                            "MODIFIER_PLAYER_UNITS_ADJUST_UNIT_ATTACK_EXPERIENCE_MODIFIER",
                            "MODIFIER_PLAYER_UNITS_ADJUST_UNIT_EXPERIENCE_MODIFIER",
                            "MODIFIER_PLAYER_UNITS_ADJUST_UNIT_PRODUCTION",
                            "MODIFIER_PLAYER_UNITS_ADJUST_VALID_TERRAIN",
                            "MODIFIER_PLAYER_UNITS_ATTACH_MODIFIER",
                            "MODIFIER_PLAYER_UNITS_GRANT_ABILITY",
                            "MODIFIER_PLAYER_UNITS_GRANT_HEAL_AFTER_ACTION",
                            "MODIFIER_PLAYER_UNITS_GRANT_PROMOTION",
                            "MODIFIER_PLAYER_UNITS_GRANT_RANDOM_BASE_PROMOTION",
                            "MODIFIER_PLAYER_UNITS_IGNORE_RANGED_VS_DISTRICT_PENALTY",
                            "MODIFIER_PLAYER_UNITS_RELIGIOUS_SPREADS",
                            "MODIFIER_PLAYER_UNITS_RESET_MOVES",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ADVANCED_COASTAL_RAID",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ADVANCED_PILLAGING",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ATTACK_AND_MOVE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_BYPASS_COMBAT_UNIT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_BYPASS_WALLS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_BYPASS_WALLS_PROMOTION_CLASS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_CANNOT_ATTACK",
                            "MODIFIER_PLAYER_UNIT_ADJUST_CITY_ON_CAPTURE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_CLEAR_TERRAIN_START_MOVEMENT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_CONVERTS_BARBARIANS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_DAMAGE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ENABLE_WALL_ATTACK",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ENABLE_WALL_ATTACK_PROMOTION_CLASS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ENTER_FOREIGN_LANDS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ERA_STRENGTH_MODIFIER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_EVICT_PERCENT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_EXERT_ZOC",
                            "MODIFIER_PLAYER_UNIT_ADJUST_EXPERIENCE_LEVEL",
                            "MODIFIER_PLAYER_UNIT_ADJUST_EXTRACT_SEA_ARTIFACTS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_FLANKING_BONUS_MODIFIER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_FOREIGN_SPREAD_MODIFIER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_FRIENDLY_TERRITORY_COMBAT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_GRANT_EXPERIENCE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_GREAT_PEOPLE_POINTS_PER_KILL",
                            "MODIFIER_PLAYER_UNIT_ADJUST_HEAL",
                            "MODIFIER_PLAYER_UNIT_ADJUST_HEAL_CHARGES",
                            "MODIFIER_PLAYER_UNIT_ADJUST_HEAL_FROM_COMBAT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_HEAL_PER_TURN",
                            "MODIFIER_PLAYER_UNIT_ADJUST_HEAL_RELIGION_PER_TURN",
                            "MODIFIER_PLAYER_UNIT_ADJUST_HIDDEN_VISIBILITY",
                            "MODIFIER_PLAYER_UNIT_ADJUST_IGNORE_CLIFF_WALLS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_IGNORE_RESOURCE_MAINTENANCE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_IGNORE_RIVERS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_IGNORE_SHORES",
                            "MODIFIER_PLAYER_UNIT_ADJUST_IGNORE_TERRAIN_COST",
                            "MODIFIER_PLAYER_UNIT_ADJUST_IGNORE_ZOC",
                            "MODIFIER_PLAYER_UNIT_ADJUST_INITIATION_GOLD",
                            "MODIFIER_PLAYER_UNIT_ADJUST_LAND_VICTORY_SPREAD",
                            "MODIFIER_PLAYER_UNIT_ADJUST_MILITARY_FORMATION",
                            "MODIFIER_PLAYER_UNIT_ADJUST_MOVEMENT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_MOVE_AND_ATTACK",
                            "MODIFIER_PLAYER_UNIT_ADJUST_NATURAL_WONDER_DEFERRED_CHARGES",
                            "MODIFIER_PLAYER_UNIT_ADJUST_NO_FOREIGN_SPREAD",
                            "MODIFIER_PLAYER_UNIT_ADJUST_NO_REDUCTION_DAMAGE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_PARADROP_ABILITY",
                            "MODIFIER_PLAYER_UNIT_ADJUST_PER_LUXURY_ATTACK_MODIFIER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_PER_MILITARY_POLICIES_COMBAT_MODIFIER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_PLUNDER_YIELDS",
                            "MODIFIER_PLAYER_UNIT_ADJUST_RELIC_UPON_DEATH",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ROCK_BAND_LEVEL_DISTRICT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ROCK_BAND_LEVEL_IMPROVEMENT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ROCK_BAND_LEVEL_NATIONAL_PARK",
                            "MODIFIER_PLAYER_UNIT_ADJUST_ROCK_BAND_LEVEL_NATURAL_WONDER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SEA_MOVEMENT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SEE_HIDDEN",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SEE_THROUGH_FEATURES",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SEE_THROUGH_TERRAIN",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SIGHT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SPREAD_CHARGES",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SPY_ESTABLISH_TIME",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SPY_OPERATION_CHANCE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SPY_OPERATION_TIME",
                            "MODIFIER_PLAYER_UNIT_ADJUST_SUPPORT_BONUS_MODIFIER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TOURISM_BOMB_ADDITIONAL_YIELD",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TOURISM_BOMB_CONVERT_CITY",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TOURISM_BOMB_DISTRICT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TOURISM_BOMB_IMPROVEMENT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TOURISM_BOMB_NATIONAL_PARK",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TOURISM_BOMB_NATURAL_WONDER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TOURISM_BOMB_RANGE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_TRADE_ROUTE_PLUNDER_IMMUNITY",
                            "MODIFIER_PLAYER_UNIT_ADJUST_UNIT_EXPERIENCE_MODIFIER",
                            "MODIFIER_PLAYER_UNIT_ADJUST_UPGRADE_GOODY_HUT",
                            "MODIFIER_PLAYER_UNIT_ADJUST_VALID_TERRAIN",
                            "MODIFIER_PLAYER_UNIT_ADJUST_WATER_DAMAGE_RESISTANCE",
                            "MODIFIER_PLAYER_UNIT_ADJUST_WMD_RESISTANCE",
                            "MODIFIER_PLAYER_UNIT_BOOST_ALL_SPIES",
                            "MODIFIER_PLAYER_UNIT_BUILD_DISABLED",
                            "MODIFIER_PLAYER_UNIT_ESCAPE_BOOST",
                            "MODIFIER_PLAYER_UNIT_GRANT_ABILITY",
                            "MODIFIER_PLAYER_UNIT_GRANT_ADJACENT_FEATURE_YIELD",
                            "MODIFIER_PLAYER_UNIT_GRANT_ADJACENT_NATURAL_WONDER_YIELD",
                            "MODIFIER_PLAYER_UNIT_GRANT_ADJACENT_TERRAIN_YIELD",
                            "MODIFIER_PLAYER_UNIT_GRANT_AIR_SLOTS",
                            "MODIFIER_PLAYER_UNIT_GRANT_HEAL_AFTER_ACTION",
                            "MODIFIER_PLAYER_UNIT_GRANT_UNIT_BY_DOMAIN",
                            "MODIFIER_PLAYER_UNIT_GRANT_UNIT_WITH_EXPERIENCE",
                            "MODIFIER_PLAYER_UNIT_GRANT_UNLIMITED_PROMOTION_CHOICES",
                            "MODIFIER_PLAYER_UNIT_IGNORE_RANGED_VS_DISTRICT_PENALTY",
                            "MODIFIER_RELIGION_ADJUST_ANYONE_CONDEMNS_FAVOR",
                            "MODIFIER_RELIGION_ADJUST_CONDEMN_PROHIBITED",
                            "MODIFIER_SINGLE_CITY_ADJUST_ACTIVE_BUILDING_PRODUCTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_ALL_BUILDINGS_PURCHASE_COST",
                            "MODIFIER_SINGLE_CITY_ADJUST_ALL_DISTRICTS_PURCHASE_COST",
                            "MODIFIER_SINGLE_CITY_ADJUST_ALL_UNITS_PURCHASE_COST",
                            "MODIFIER_SINGLE_CITY_ADJUST_AMENITIES_FROM_GOVERNORS",
                            "MODIFIER_SINGLE_CITY_ADJUST_BUILDING_HOUSING",
                            "MODIFIER_SINGLE_CITY_ADJUST_BUILDING_PRODUCTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_BUILDING_PRODUCTION_MODIFIER",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_AMENITIES_FROM_GREAT_PEOPLE",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_AMENITIES_FROM_RELIGION",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_APPEAL",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_GROWTH",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_HOUSING_FROM_GREAT_PEOPLE",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_HOUSING_FROM_GREAT_WORKS",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_UNIT_MAX_LEVEL",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_YIELD_MODIFIER",
                            "MODIFIER_SINGLE_CITY_ADJUST_CITY_YIELD_PER_POPULATION",
                            "MODIFIER_SINGLE_CITY_ADJUST_DISTRICT_PRODUCTION_MODIFIER",
                            "MODIFIER_SINGLE_CITY_ADJUST_ENTERTAINMENT",
                            "MODIFIER_SINGLE_CITY_ADJUST_EXTRA_ACCUMULATION",
                            "MODIFIER_SINGLE_CITY_ADJUST_EXTRA_ACCUMULATION_FOR_STRATEGIC_DIVERSITY",
                            "MODIFIER_SINGLE_CITY_ADJUST_EXTRA_AMENITY_FOR_LUXURY_DIVERSITY",
                            "MODIFIER_SINGLE_CITY_ADJUST_EXTRA_GREAT_WORK_SLOTS",
                            "MODIFIER_SINGLE_CITY_ADJUST_FREE_POWER",
                            "MODIFIER_SINGLE_CITY_ADJUST_FREE_RESOURCE_EXTRACTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_GREATWORK_YIELD",
                            "MODIFIER_SINGLE_CITY_ADJUST_GREAT_PERSON_POINT",
                            "MODIFIER_SINGLE_CITY_ADJUST_IDENTITY_PER_TURN",
                            "MODIFIER_SINGLE_CITY_ADJUST_IDENTITY_PRESSURE",
                            "MODIFIER_SINGLE_CITY_ADJUST_IMPROVEMENT_AMENITY",
                            "MODIFIER_SINGLE_CITY_ADJUST_IMPROVEMENT_HOUSING",
                            "MODIFIER_SINGLE_CITY_ADJUST_IMPROVEMENT_TOURISM",
                            "MODIFIER_SINGLE_CITY_ADJUST_LAKE_ENTERTAINMENT",
                            "MODIFIER_SINGLE_CITY_ADJUST_MILITARY_UNITS_PRODUCTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_NATIONAL_PARK_TOURISM",
                            "MODIFIER_SINGLE_CITY_ADJUST_PREVENT_BYPASS_OUTER_DEFENSE",
                            "MODIFIER_SINGLE_CITY_ADJUST_PREVENT_MELEE_ATTACK_OUTER_DEFENSES",
                            "MODIFIER_SINGLE_CITY_ADJUST_PROJECT_PRODUCTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_PROPERTY",
                            "MODIFIER_SINGLE_CITY_ADJUST_REQUIRED_POWER",
                            "MODIFIER_SINGLE_CITY_ADJUST_SPACE_RACE_PROJECTS_PRODUCTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_TOURISM",
                            "MODIFIER_SINGLE_CITY_ADJUST_TOURISM_LATE_ERAS",
                            "MODIFIER_SINGLE_CITY_ADJUST_TOURISM_PER_FEATURE",
                            "MODIFIER_SINGLE_CITY_ADJUST_TRADE_ROUTE_YIELD_FOR_DOMESTIC",
                            "MODIFIER_SINGLE_CITY_ADJUST_TRADE_ROUTE_YIELD_FOR_INTERNATIONAL",
                            "MODIFIER_SINGLE_CITY_ADJUST_TRADE_ROUTE_YIELD_FROM_OTHERS",
                            "MODIFIER_SINGLE_CITY_ADJUST_TRADE_ROUTE_YIELD_TO_OTHERS",
                            "MODIFIER_SINGLE_CITY_ADJUST_UNIT_PRODUCTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_UNIT_PRODUCTION_MODIFIER",
                            "MODIFIER_SINGLE_CITY_ADJUST_UNIT_PURCHASE_COST",
                            "MODIFIER_SINGLE_CITY_ADJUST_WONDER_PRODUCTION",
                            "MODIFIER_SINGLE_CITY_ADJUST_WONDER_YIELD_CHANGE",
                            "MODIFIER_SINGLE_CITY_ADJUST_YIELD_CHANGE",
                            "MODIFIER_SINGLE_CITY_ADJUST_YIELD_FOR_FLOOD",
                            "MODIFIER_SINGLE_CITY_ADJUST_YIELD_FOR_TERRAIN_CLASS_CITIES_IMPROVEMENT",
                            "MODIFIER_SINGLE_CITY_ATTACH_MODIFIER",
                            "MODIFIER_SINGLE_CITY_BUILDER_CHARGES",
                            "MODIFIER_SINGLE_CITY_CULTURE_BORDER_EXPANSION",
                            "MODIFIER_SINGLE_CITY_DISTRICTS_ADJUST_GREAT_PERSON_POINTS",
                            "MODIFIER_SINGLE_CITY_EXTRA_DISTRICT",
                            "MODIFIER_SINGLE_CITY_FEATURE_ADJACENCY",
                            "MODIFIER_SINGLE_CITY_GRANT_ABILITY_FOR_TRAINED_UNITS",
                            "MODIFIER_SINGLE_CITY_GRANT_BUILDING_IN_CITY",
                            "MODIFIER_SINGLE_CITY_GRANT_BUILDING_IN_CITY_IGNORE",
                            "MODIFIER_SINGLE_CITY_GRANT_GREAT_PERSON_CLASS_IN_CITY",
                            "MODIFIER_SINGLE_CITY_GRANT_LOYALTY",
                            "MODIFIER_SINGLE_CITY_GRANT_PRODUCTION_IN_CITY",
                            "MODIFIER_SINGLE_CITY_GRANT_RESOURCE_IN_CITY",
                            "MODIFIER_SINGLE_CITY_GRANT_UNIT_BY_CLASS_IN_NEAREST_CITY",
                            "MODIFIER_SINGLE_CITY_GRANT_UNIT_IN_CITY",
                            "MODIFIER_SINGLE_CITY_GRANT_UNIT_IN_NEAREST_CITY",
                            "MODIFIER_SINGLE_CITY_GRANT_YIELD_PER_BUILDING_COST",
                            "MODIFIER_SINGLE_CITY_GRANT_YIELD_PER_GREAT_WORK",
                            "MODIFIER_SINGLE_CITY_GRANT_YIELD_PER_UNIT_COST",
                            "MODIFIER_SINGLE_CITY_HEAL_SPREADS",
                            "MODIFIER_SINGLE_CITY_RECOMMISSION_REACTOR",
                            "MODIFIER_SINGLE_CITY_RELIGION_EXTRA_PROMOTIONS",
                            "MODIFIER_SINGLE_CITY_RELIGION_EXTRA_PROMOTIONS_SCENARIO",
                            "MODIFIER_SINGLE_CITY_RELIGION_IGNORE_COMBAT",
                            "MODIFIER_SINGLE_CITY_RELIGION_IGNORE_PRESSURE",
                            "MODIFIER_SINGLE_CITY_RELIGION_PRESSURE",
                            "MODIFIER_SINGLE_CITY_RELIGIOUS_COMBAT_BONUS",
                            "MODIFIER_SINGLE_CITY_RELIGIOUS_HEAL",
                            "MODIFIER_SINGLE_CITY_RELIGIOUS_SPREADS",
                            "MODIFIER_SINGLE_PLOT_ADJUST_PLOT_YIELDS",
                            "MODIFIER_SINGLE_UNIT_ADJUST_ANTI_AIR_STRENGTH_MODIFIER",
                            "MODIFIER_SINGLE_UNIT_ADJUST_COMBAT_FOR_ADJACENT_LEVIED_UNITS",
                            "MODIFIER_SINGLE_UNIT_ADJUST_COMBAT_FOR_NUMBER_ALLIES",
                            "MODIFIER_SINGLE_UNIT_ADJUST_COMBAT_FOR_UNUSED_MOVEMENT",
                            "MODIFIER_SINGLE_UNIT_ADJUST_FIGHT_WHILE_EMBARKED",
                            "MODIFIER_SINGLE_UNIT_ADJUST_JUMP_DISTANCE",
                            "MODIFIER_SINGLE_UNIT_ADJUST_POST_TOURISM_BOMB_LOYALTY",
                            "MODIFIER_SINGLE_UNIT_ADJUST_SPY_COUNTERSPY_ADJACENT_LEVEL_BOOST",
                            "MODIFIER_SINGLE_UNIT_ADJUST_SPY_COUNTERSPY_ENTIRE_CITY",
                            "MODIFIER_SINGLE_UNIT_ATTACH_MODIFIER",
                            "MODIFIER_UNITS_ADJUST_GRANT_EXPERIENCE",
                            "MODIFIER_UNITS_GRANT_PROMOTION",
                            "MODIFIER_UNIT_ADJUST_ATTACK_RANGE",
                            "MODIFIER_UNIT_ADJUST_BASE_COMBAT_STRENGTH",
                            "MODIFIER_UNIT_ADJUST_BUILDER_CHARGES",
                            "MODIFIER_UNIT_ADJUST_COMBAT_CAPTURE",
                            "MODIFIER_UNIT_ADJUST_COMBAT_STRENGTH",
                            "MODIFIER_UNIT_ADJUST_COMBAT_UNIT_CAPTURE",
                            "MODIFIER_UNIT_ADJUST_ESCORT_MOBILITY",
                            "MODIFIER_UNIT_ADJUST_FORCE_RETREAT",
                            "MODIFIER_UNIT_ADJUST_NUM_ATTACKS",
                            "MODIFIER_UNIT_ADJUST_POST_COMBAT_YIELD",
                            "MODIFIER_UNIT_ADJUST_PROPERTY",
                            "MODIFIER_UNIT_ADJUST_RAIDING",
                            "MODIFIER_UNIT_GRANT_PLOT",
                            "MODIFIER_UNIT_STRENGTH_FROM_CITY_CULTURAL_IDENTITY",
                            "MODIFIER_WORLD_UNITS_ADJUST_DAMAGE"
                        ],
                        "type": "string"
                    },
                    "RunOnce": {
                        "description": "Causes modifier to run the first time its conditions are met and never again.",
                        "type": "boolean"
                    },
                    "NewOnly": {
                        "type": "boolean"
                    },
                    "Permanent": {
                        "type": "boolean"
                    },
                    "OwnerStackLimit": {
                        "description": "The maximum amount of modifier instances that can be applied to the *owner* at a given time.",
                        "type": "number"
                    },
                    "SubjectStackLimit": {
                        "description": "The maximum amount of modifier instances that can be applied to the *subject* at a given time.",
                        "type": "number"
                    },
                    "OwnerRequirementSetId": {
                        "description": "Choose a RequirementSet to pair to the *owner* of your modifier.",
                        "type": "string"
                    },
                    "SubjectRequirementSetId": {
                        "description": "Choose a RequirementSet to pair to the *subject* of your modifier.",
                        "type": "string"
                    },
                    "CollectionType": {
                        "description": "Choose a CollectionType to pair with a chosen EffectType instead of using existing ModifierTypes.\n\nModifierType will take presendence over this if it is set.",
                        "enum": [
                            "COLLECTION_ALLIANCE_CITIES",
                            "COLLECTION_ALLIANCE_COMBATS",
                            "COLLECTION_ALLIANCE_DISTRICTS",
                            "COLLECTION_ALLIANCE_PLAYERS",
                            "COLLECTION_ALLIANCE_TRADEROUTES",
                            "COLLECTION_ALLIANCE_TRAINED_UNITS",
                            "COLLECTION_ALLIANCE_UNITS",
                            "COLLECTION_ALL_ARTIFACT_EXTRACTIONS",
                            "COLLECTION_ALL_CAPITAL_CITIES",
                            "COLLECTION_ALL_CAPITAL_DISTRICTS",
                            "COLLECTION_ALL_CAPTURED_CITIES",
                            "COLLECTION_ALL_CITIES",
                            "COLLECTION_ALL_DISTRICTS",
                            "COLLECTION_ALL_PLAYERS",
                            "COLLECTION_ALL_PLOT_YIELDS",
                            "COLLECTION_ALL_TEAMS",
                            "COLLECTION_ALL_UNITS",
                            "COLLECTION_ALL_UNIT_DEATHS",
                            "COLLECTION_CITY_DISTRICTS",
                            "COLLECTION_CITY_PLOT_YIELDS",
                            "COLLECTION_CITY_TRAINED_UNITS",
                            "COLLECTION_COMBAT_RESULTS",
                            "COLLECTION_EMERGENCY_CAPITAL_CITIES",
                            "COLLECTION_EMERGENCY_CITIES",
                            "COLLECTION_EMERGENCY_COMBATS",
                            "COLLECTION_EMERGENCY_DISTRICTS",
                            "COLLECTION_EMERGENCY_PLAYERS",
                            "COLLECTION_EMERGENCY_TRADE_ROUTES",
                            "COLLECTION_EMERGENCY_UNITS",
                            "COLLECTION_MAJOR_MINOR_PLAYERS",
                            "COLLECTION_MAJOR_OPPOSING_PLAYERS",
                            "COLLECTION_MAJOR_OPPOSING_TEAMS",
                            "COLLECTION_MAJOR_PLAYERS",
                            "COLLECTION_MAJOR_TEAMS",
                            "COLLECTION_MINOR_PLAYERS",
                            "COLLECTION_OWNER",
                            "COLLECTION_OWNER_CITY",
                            "COLLECTION_OWNER_PLAYER",
                            "COLLECTION_OWNER_UNIT",
                            "COLLECTION_PLAYER_ALLIANCES",
                            "COLLECTION_PLAYER_BUILT_CITIES",
                            "COLLECTION_PLAYER_CAPITAL_CITY",
                            "COLLECTION_PLAYER_CAPITAL_DISTRICTS",
                            "COLLECTION_PLAYER_CAPTURED_CITIES",
                            "COLLECTION_PLAYER_CITIES",
                            "COLLECTION_PLAYER_CITY_STATE_UNITS",
                            "COLLECTION_PLAYER_COMBAT",
                            "COLLECTION_PLAYER_COMBAT_RESULTS",
                            "COLLECTION_PLAYER_DISTRICTS",
                            "COLLECTION_PLAYER_GOVERNORS",
                            "COLLECTION_PLAYER_IMPROVEMENTS",
                            "COLLECTION_PLAYER_PLOT_YIELDS",
                            "COLLECTION_PLAYER_TRAINED_UNITS",
                            "COLLECTION_PLAYER_UNITS",
                            "COLLECTION_SINGLE_PLOT_YIELDS",
                            "COLLECTION_TEAM_CAPITAL_CITIES",
                            "COLLECTION_TEAM_CAPTURED_CITIES",
                            "COLLECTION_TEAM_CITIES",
                            "COLLECTION_TEAM_DISTRICTS",
                            "COLLECTION_TEAM_PLAYERS",
                            "COLLECTION_TEAM_UNITS",
                            "COLLECTION_UNIT_COMBAT",
                            "COLLECTION_UNIT_NEAREST_CITY",
                            "COLLECTION_UNIT_NEAREST_OWNER_CITY"
                        ],
                        "type": "string"
                    },
                    "EffectType": {
                        "description": "Choose an EffectType to pair with a chosen CollectionType instead of using existing ModifierTypes.\n\nModifierType will take presendence over this if it is set.",
                        "enum": [
                            "EFFECT_ACTIVATE_VOLCANOES",
                            "EFFECT_ADD_BELIEF",
                            "EFFECT_ADD_CULTURE_BOMB_TRIGGER",
                            "EFFECT_ADD_DIPLOMATIC_ACTION_OVERRIDE",
                            "EFFECT_ADD_DIPLOMATIC_COMBAT_MODIFIER",
                            "EFFECT_ADD_DIPLOMATIC_MOVEMENT_MODIFIER",
                            "EFFECT_ADD_DIPLOMATIC_YIELD_MODIFIER",
                            "EFFECT_ADD_DIPLO_VISIBILITY",
                            "EFFECT_ADD_EXPENDED_GREAT_PERSON_TILES",
                            "EFFECT_ADD_PLAYER_BELIEF_YIELD",
                            "EFFECT_ADD_PLAYER_FAVOR",
                            "EFFECT_ADD_PLAYER_PROJECT_AVAILABILITY",
                            "EFFECT_ADD_PLAYER_SEQUESTERED_CARBON",
                            "EFFECT_ADD_PLAYER_UPGRADE_MILITARY_FORMATION_ON_CITY_CONQUEST",
                            "EFFECT_ADD_RELIGIOUS_BELIEF_YIELD",
                            "EFFECT_ADD_RELIGIOUS_BUILDING",
                            "EFFECT_ADD_RELIGIOUS_BUILDING_MULTIPLIER",
                            "EFFECT_ADD_RELIGIOUS_UNIT",
                            "EFFECT_ADJUST_ACCUMULATING_BONUS",
                            "EFFECT_ADJUST_ACTIVE_BUILDING_PRODUCTION",
                            "EFFECT_ADJUST_ADDITIONAL_PILLAGING",
                            "EFFECT_ADJUST_ADD_AMENITY_PER_ADJACENT_LUXURY",
                            "EFFECT_ADJUST_ADJACENT_CITY_RIVER_BUILDING_PRODUCTION",
                            "EFFECT_ADJUST_ADJACENT_CITY_RIVER_DISTRICT_PRODUCTION",
                            "EFFECT_ADJUST_ADJACENT_LEVIED_UNIT_COMBAT_BONUS",
                            "EFFECT_ADJUST_ALLIANCE_PLAYER_STRENGTH_MODIFIER",
                            "EFFECT_ADJUST_ALLIANCE_POINTS_FOR_COMMON_ENEMY_MODIFIER",
                            "EFFECT_ADJUST_ALLIANCE_POINTS_FOR_MODIFIER",
                            "EFFECT_ADJUST_ALLIANCE_POINTS_FOR_TRADE_MODIFIER",
                            "EFFECT_ADJUST_ALL_BUILDINGS_PURCHASE_COST",
                            "EFFECT_ADJUST_ALL_BUILDING_PRODUCTION_MODIFIER",
                            "EFFECT_ADJUST_ALL_DISTRICTS_CULTURE_BOMB",
                            "EFFECT_ADJUST_ALL_DISTRICTS_PRODUCTION",
                            "EFFECT_ADJUST_ALL_DISTRICTS_PURCHASE_COST",
                            "EFFECT_ADJUST_ALL_DISTRICT_PRODUCTION_MODIFIER",
                            "EFFECT_ADJUST_ALL_GREAT_WORKS_TOURISM_MODIFIER",
                            "EFFECT_ADJUST_ALL_GREAT_WORKS_YIELDS_MODIFIER",
                            "EFFECT_ADJUST_ALL_PROJECTS_PRODUCTION",
                            "EFFECT_ADJUST_ALL_UNITS_PURCHASE_COST",
                            "EFFECT_ADJUST_ALL_UNIT_PRODUCTION_MODIFIER",
                            "EFFECT_ADJUST_ATTACKER_STRENGTH_MODIFIER",
                            "EFFECT_ADJUST_AUTO_THEMED_BUILDINGS_WITH_X_SLOTS",
                            "EFFECT_ADJUST_BANNED_DIPLOMATIC_ACTIONS",
                            "EFFECT_ADJUST_BANNED_DIPLOMATIC_ACTIONS_SPECIFIC_CIVILIZATION",
                            "EFFECT_ADJUST_BONUS_RATE",
                            "EFFECT_ADJUST_BUILDING_AMENITY",
                            "EFFECT_ADJUST_BUILDING_FEATURE_YIELD_CHANGE",
                            "EFFECT_ADJUST_BUILDING_HOUSING",
                            "EFFECT_ADJUST_BUILDING_PRODUCTION",
                            "EFFECT_ADJUST_BUILDING_PURCHASE_COST",
                            "EFFECT_ADJUST_BUILDING_SPREAD_CHARGES",
                            "EFFECT_ADJUST_BUILDING_YIELD_CHANGE",
                            "EFFECT_ADJUST_BUILDING_YIELD_MODIFIER",
                            "EFFECT_ADJUST_BUILDING_YIELD_MODIFIERS_FOR_DISTRICT",
                            "EFFECT_ADJUST_CAN_FAITH_PURCHASE_DISTRICTS",
                            "EFFECT_ADJUST_CITIES_FRESHWATER_HOUSING_BONUS",
                            "EFFECT_ADJUST_CITIES_HAS_URBAN_DEFENSES",
                            "EFFECT_ADJUST_CITY_AIR_DEFENSE_BONUS",
                            "EFFECT_ADJUST_CITY_ALLOWED_IMPROVEMENT",
                            "EFFECT_ADJUST_CITY_ALLOWED_INCOMING_REGIONAL_STACKING",
                            "EFFECT_ADJUST_CITY_ALL_MILITARY_UNITS_PRODUCTION",
                            "EFFECT_ADJUST_CITY_ALL_YIELDS_CHANGE",
                            "EFFECT_ADJUST_CITY_ALWAYS_LOYAL",
                            "EFFECT_ADJUST_CITY_AMENITIES_FROM_CITY_STATES",
                            "EFFECT_ADJUST_CITY_AMENITIES_FROM_GOVERNORS",
                            "EFFECT_ADJUST_CITY_AMENITIES_FROM_GREAT_PEOPLE",
                            "EFFECT_ADJUST_CITY_AMENITIES_FROM_RELIGION",
                            "EFFECT_ADJUST_CITY_APPEAL",
                            "EFFECT_ADJUST_CITY_ATTACKS_PER_TURN",
                            "EFFECT_ADJUST_CITY_CAN_PURCHASE_DISTRICTS",
                            "EFFECT_ADJUST_CITY_COMBAT_BONUS",
                            "EFFECT_ADJUST_CITY_CORPS_ARMY_PRODUCTION",
                            "EFFECT_ADJUST_CITY_CULTURE_BORDER_EXPANSION",
                            "EFFECT_ADJUST_CITY_ENTERTAINMENT",
                            "EFFECT_ADJUST_CITY_ENTERTAINMENT_FROM_WONDER_ADJACENT_TO_LAKE",
                            "EFFECT_ADJUST_CITY_EXTRA_ACCUMULATION",
                            "EFFECT_ADJUST_CITY_EXTRA_ACCUMULATION_FOR_STRATEGIC_DIVERSITY",
                            "EFFECT_ADJUST_CITY_EXTRA_ACCUMULATION_SPECIFIC_RESOURCE",
                            "EFFECT_ADJUST_CITY_EXTRA_AMENITY_FOR_LUXURY_DIVERSITY",
                            "EFFECT_ADJUST_CITY_EXTRA_DISTRICTS",
                            "EFFECT_ADJUST_CITY_FREE_POWER",
                            "EFFECT_ADJUST_CITY_FRIENDLY_COMBAT_BONUS",
                            "EFFECT_ADJUST_CITY_GOLD_FROM_CITIZENS",
                            "EFFECT_ADJUST_CITY_GREATWORK_YIELD",
                            "EFFECT_ADJUST_CITY_GREAT_PERSON_POINTS_MODIFIER",
                            "EFFECT_ADJUST_CITY_GREEN_ENERGY_TOURISM",
                            "EFFECT_ADJUST_CITY_GROWTH",
                            "EFFECT_ADJUST_CITY_HAPPINESS_GREAT_PERSON",
                            "EFFECT_ADJUST_CITY_HAPPINESS_YIELD",
                            "EFFECT_ADJUST_CITY_HIT_POINTS",
                            "EFFECT_ADJUST_CITY_HOUSING_FROM_GREAT_PEOPLE",
                            "EFFECT_ADJUST_CITY_HOUSING_FROM_GREAT_WORKS",
                            "EFFECT_ADJUST_CITY_HOUSING_PER_DISTRICT",
                            "EFFECT_ADJUST_CITY_IDENTITY_PER_CITIZEN",
                            "EFFECT_ADJUST_CITY_IDENTITY_PER_TURN",
                            "EFFECT_ADJUST_CITY_IDENTITY_PRESSURE",
                            "EFFECT_ADJUST_CITY_IDENTITY_PRESSURE_FROM_AGES",
                            "EFFECT_ADJUST_CITY_IGNORE_STRATEGIC_RESOURCE_REQUIREMENTS",
                            "EFFECT_ADJUST_CITY_IMPROVEMENT_TOURISM",
                            "EFFECT_ADJUST_CITY_INNER_DEFENSE",
                            "EFFECT_ADJUST_CITY_NATIONAL_PARK_TOURISM",
                            "EFFECT_ADJUST_CITY_NO_CULTURE_BORDER_EXPANSION",
                            "EFFECT_ADJUST_CITY_OUTER_DEFENSE",
                            "EFFECT_ADJUST_CITY_POPULATION",
                            "EFFECT_ADJUST_CITY_POPULATION_UNIT_CREATED",
                            "EFFECT_ADJUST_CITY_PREVENT_BYPASS_OUTER_DEFENSES",
                            "EFFECT_ADJUST_CITY_PREVENT_MELEE_ATTACK_OUTER_DEFENSES",
                            "EFFECT_ADJUST_CITY_PRODUCTION_BUILDING",
                            "EFFECT_ADJUST_CITY_PRODUCTION_DISTRICT",
                            "EFFECT_ADJUST_CITY_PRODUCTION_UNIT",
                            "EFFECT_ADJUST_CITY_PROPERTY",
                            "EFFECT_ADJUST_CITY_RANGED_STRIKE",
                            "EFFECT_ADJUST_CITY_RELIGION_EXTRA_PROMOTIONS",
                            "EFFECT_ADJUST_CITY_RELIGION_IGNORE_COMBAT",
                            "EFFECT_ADJUST_CITY_RELIGION_IGNORE_PRESSURE",
                            "EFFECT_ADJUST_CITY_RELIGION_ON_CAPTURE",
                            "EFFECT_ADJUST_CITY_RELIGION_PRESSURE",
                            "EFFECT_ADJUST_CITY_RELIGIOUS_COMBAT_BONUS",
                            "EFFECT_ADJUST_CITY_RELIGIOUS_HEAL",
                            "EFFECT_ADJUST_CITY_REQUIRED_POWER",
                            "EFFECT_ADJUST_CITY_RESOURCE_HARVEST_BONUS",
                            "EFFECT_ADJUST_CITY_SETTLER_CONSUME_POP",
                            "EFFECT_ADJUST_CITY_SIEGE_PROTECTION",
                            "EFFECT_ADJUST_CITY_SPY_BONUS",
                            "EFFECT_ADJUST_CITY_STATE_TRADE_ROUTE_DISTRICT_YIELD",
                            "EFFECT_ADJUST_CITY_STATE_TRADE_ROUTE_FLAT_YIELD",
                            "EFFECT_ADJUST_CITY_STRATEGIC_RESOURCE_REQUIREMENT_MODIFIER",
                            "EFFECT_ADJUST_CITY_TOURISM",
                            "EFFECT_ADJUST_CITY_TOURISM_LATE_ERAS",
                            "EFFECT_ADJUST_CITY_TOURISM_PER_FEATURE",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_FOR_DOMESTIC",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_PER_DESTINATION_LUXURY_RESOURCE_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_PER_DESTINATION_STRATEGIC_RESOURCE_FOR_DOMESTIC",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_PER_DESTINATION_STRATEGIC_RESOURCE_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_PER_LOCAL_BONUS_RESOURCE_FOR_DOMESTIC",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_PER_LOCAL_BONUS_RESOURCE_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_PER_LOCAL_LUXURY_RESOURCE_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_CITY_TRADE_ROUTE_YIELD_PER_LOCAL_STRATEGIC_RESOURCE_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_CITY_UNIT_MAX_LEVEL",
                            "EFFECT_ADJUST_CITY_YIELD_CHANGE",
                            "EFFECT_ADJUST_CITY_YIELD_FROM_FOREIGN_TRADE_ROUTES_PASSING_THROUGH",
                            "EFFECT_ADJUST_CITY_YIELD_FROM_POWERED_BUILDING",
                            "EFFECT_ADJUST_CITY_YIELD_MODIFIER",
                            "EFFECT_ADJUST_CITY_YIELD_MODIFIER_FROM_FAITH",
                            "EFFECT_ADJUST_CITY_YIELD_MODIFIER_PER_GOVERNOR_TITLE",
                            "EFFECT_ADJUST_CITY_YIELD_PER_DISTRICT",
                            "EFFECT_ADJUST_CITY_YIELD_PER_FLOOD",
                            "EFFECT_ADJUST_CITY_YIELD_PER_MAJOR_TRADE_PARTNER",
                            "EFFECT_ADJUST_CITY_YIELD_PER_POPULATION",
                            "EFFECT_ADJUST_CITY_YIELD_PER_TERRAIN_CLASS_CITIES",
                            "EFFECT_ADJUST_CITY_YIELD_PER_TERRAIN_CLASS_CITIES_IMPROVEMENT",
                            "EFFECT_ADJUST_CITY_YIELD_PER_TERRAIN_TYPE",
                            "EFFECT_ADJUST_CIVIC_BOOST",
                            "EFFECT_ADJUST_CO2_GENERATION_REDUCTION",
                            "EFFECT_ADJUST_CORPS_ARMY_MODIFIED_STRENGTH",
                            "EFFECT_ADJUST_CORPS_ARMY_PREREQ",
                            "EFFECT_ADJUST_CULTURE_BOMB_CONVERTS_CITY",
                            "EFFECT_ADJUST_DEFENDER_STRENGTH_MODIFIER",
                            "EFFECT_ADJUST_DIPLOMATIC_ACTION_PREFERENCE",
                            "EFFECT_ADJUST_DIPLOMATIC_SCORE",
                            "EFFECT_ADJUST_DISABLE_HEALING",
                            "EFFECT_ADJUST_DISABLE_INFLUENCE",
                            "EFFECT_ADJUST_DISABLE_PATRONAGE",
                            "EFFECT_ADJUST_DISABLE_SETTLING",
                            "EFFECT_ADJUST_DISTRICT_ADJACENT_NATURAL_WONDER_PRODUCTION",
                            "EFFECT_ADJUST_DISTRICT_AMENITY",
                            "EFFECT_ADJUST_DISTRICT_ATTACK_RANGE",
                            "EFFECT_ADJUST_DISTRICT_BASE_YIELD_CHANGE",
                            "EFFECT_ADJUST_DISTRICT_BUILDING_PRODUCTION",
                            "EFFECT_ADJUST_DISTRICT_EXTRA_ENTERTAINMENT",
                            "EFFECT_ADJUST_DISTRICT_EXTRA_REGIONAL_ENTERTAINMENT",
                            "EFFECT_ADJUST_DISTRICT_EXTRA_REGIONAL_RANGE",
                            "EFFECT_ADJUST_DISTRICT_EXTRA_REGIONAL_YIELD",
                            "EFFECT_ADJUST_DISTRICT_GREAT_PERSON_POINTS",
                            "EFFECT_ADJUST_DISTRICT_HOUSING",
                            "EFFECT_ADJUST_DISTRICT_PREREQ",
                            "EFFECT_ADJUST_DISTRICT_PRODUCTION",
                            "EFFECT_ADJUST_DISTRICT_PROPERTY",
                            "EFFECT_ADJUST_DISTRICT_TOURISM_ADJACENCY_YIELD_MOFIFIER",
                            "EFFECT_ADJUST_DISTRICT_TOURISM_CHANGE",
                            "EFFECT_ADJUST_DISTRICT_WITHIN_ONE_HEX_ESPIONAGE_DEFENSE_BONUS",
                            "EFFECT_ADJUST_DISTRICT_YIELD_BASED_ON_ADJACENCY_BONUS",
                            "EFFECT_ADJUST_DISTRICT_YIELD_BASED_ON_APPEAL",
                            "EFFECT_ADJUST_DISTRICT_YIELD_CHANGE",
                            "EFFECT_ADJUST_DISTRICT_YIELD_MODIFIER",
                            "EFFECT_ADJUST_DUPLICATE_FIRST_INFLUENCE_TOKEN",
                            "EFFECT_ADJUST_DUPLICATE_INFLUENCE_TOKEN_WHEN_RIVAL_GOVERNMENT",
                            "EFFECT_ADJUST_DUPLICATE_INFLUENCE_TOKEN_WHEN_SAME_RELIGION",
                            "EFFECT_ADJUST_DUPLICATE_INFLUENCE_TOKEN_WHEN_TRADE_ROUTE_TO",
                            "EFFECT_ADJUST_EXTRA_ACCUMALATION_TERRAIN",
                            "EFFECT_ADJUST_EXTRA_GREAT_WORK_SLOTS",
                            "EFFECT_ADJUST_EXTRA_HEAL_GOVERNOR",
                            "EFFECT_ADJUST_EXTRA_STARTING_POPULATION_OFF_HOME_CONTINENT",
                            "EFFECT_ADJUST_EXTRA_UNIT_COPY",
                            "EFFECT_ADJUST_EXTRA_UNIT_COPY_TAG",
                            "EFFECT_ADJUST_FEATURE_APPEAL_MODIFIER",
                            "EFFECT_ADJUST_FEATURE_NO_IMPROVEMENT_APPEAL_GOVERNOR",
                            "EFFECT_ADJUST_FEATURE_PREREQ",
                            "EFFECT_ADJUST_FLAT_BONUS",
                            "EFFECT_ADJUST_FOLLOWER_YIELD_MODIFIER",
                            "EFFECT_ADJUST_FORBID_LAND_ROUTE",
                            "EFFECT_ADJUST_FREE_CIVIC_BOOST_FIRST_TRADING_POST_EACH_CIV",
                            "EFFECT_ADJUST_FREE_CIVIC_BOOST_WONDER_ERA",
                            "EFFECT_ADJUST_FREE_TECH_BOOST_FIRST_TRADING_POST_EACH_CIV",
                            "EFFECT_ADJUST_FREE_TECH_BOOST_WONDER_ERA",
                            "EFFECT_ADJUST_FULL_ACCESS_ONE_STRATEGIC",
                            "EFFECT_ADJUST_GAINS_ALL_FOLLOWER_BELIEFS",
                            "EFFECT_ADJUST_GAINS_FOUNDER_BELIEF_MAJORITY_RELIGION",
                            "EFFECT_ADJUST_GAME_PROPERTY",
                            "EFFECT_ADJUST_GAME_REALISM_SETTING",
                            "EFFECT_ADJUST_GLOBAL_WMD_STOCKPILE",
                            "EFFECT_ADJUST_GOLD_DISPERSAL",
                            "EFFECT_ADJUST_GOVERNMENT_SLOTS",
                            "EFFECT_ADJUST_GOVERNOR_ALLIANCE_POINTS",
                            "EFFECT_ADJUST_GOVERNOR_GRIEVENCE_SCORE",
                            "EFFECT_ADJUST_GOVERNOR_IDENTITY_PRESSURE",
                            "EFFECT_ADJUST_GREAT_PEOPLE_POINTS_PER_KILL",
                            "EFFECT_ADJUST_GREAT_PEOPLE_POINTS_PER_KILL_BY_DEFEATED_STRENGTH",
                            "EFFECT_ADJUST_GREAT_PERSON_GUARANTEE",
                            "EFFECT_ADJUST_GREAT_PERSON_PATRONAGE_DISCOUNT_PERCENT",
                            "EFFECT_ADJUST_GREAT_PERSON_POINTS",
                            "EFFECT_ADJUST_GREAT_PERSON_POINTS_PERCENT",
                            "EFFECT_ADJUST_GREAT_PERSON_POINTS_REFUND_PERCENT",
                            "EFFECT_ADJUST_GREAT_WORK_OBJECT_NO_TOURISM",
                            "EFFECT_ADJUST_GREAT_WORK_OBJECT_TOURISM_MODIFIER",
                            "EFFECT_ADJUST_HEAL_CHARGES",
                            "EFFECT_ADJUST_IDENTITY_PER_TURN_FROM_NEARBY_GREAT_WORKS",
                            "EFFECT_ADJUST_IDENTITY_PER_TURN_FROM_NEARBY_WONDERS",
                            "EFFECT_ADJUST_IGNORE_IDENTITY_PRESSURE",
                            "EFFECT_ADJUST_IMPROVEMENT_AMENITY",
                            "EFFECT_ADJUST_IMPROVEMENT_GOODY_HUT",
                            "EFFECT_ADJUST_IMPROVEMENT_HOUSING",
                            "EFFECT_ADJUST_IMPROVEMENT_PROPERTY",
                            "EFFECT_ADJUST_IMPROVEMENT_VALID_TERRAIN",
                            "EFFECT_ADJUST_INFLUENCE_POINTS_PER_TURN",
                            "EFFECT_ADJUST_INQUISITION_START_CHARGES",
                            "EFFECT_ADJUST_LOYALTY_FROM_GREAT_WORKS_CITIZENS",
                            "EFFECT_ADJUST_MODIFIED_FREE_POWER_IN_CITY",
                            "EFFECT_ADJUST_MOST_ADVANCED_STRATEGIC_RESOURCE_COUNT",
                            "EFFECT_ADJUST_MULTIPLY_TREASURY",
                            "EFFECT_ADJUST_NATURAL_WONDER_AMENITY",
                            "EFFECT_ADJUST_NATURAL_WONDER_RELIC",
                            "EFFECT_ADJUST_NEUTRALIZE_INDEFINITELY",
                            "EFFECT_ADJUST_NO_FRESH_WATER_HOUSING",
                            "EFFECT_ADJUST_NO_GREAT_PERSON_POINTS",
                            "EFFECT_ADJUST_NUMBER_ALLIES_UNIT_COMBAT_BONUS",
                            "EFFECT_ADJUST_NUM_UNITS_SUPPORTED",
                            "EFFECT_ADJUST_OWNED_BONUS_RESOURCE_EXTRA_AMENITIES",
                            "EFFECT_ADJUST_OWNED_LUXURY_EXTRA_AMENITIES",
                            "EFFECT_ADJUST_PLAYER_ADD_CHOP_YIELD",
                            "EFFECT_ADJUST_PLAYER_ADJUST_ENVOYS_NON_SPECIALTY",
                            "EFFECT_ADJUST_PLAYER_ALLIANCE_FAVOR_MULTIPLIER",
                            "EFFECT_ADJUST_PLAYER_ALLIED_WAR_DISCOUNT",
                            "EFFECT_ADJUST_PLAYER_ALL_ALLIANCES_PROVIDE_SHARED_VIS",
                            "EFFECT_ADJUST_PLAYER_ALWAYS_ALLOW_COMMEMORATION_QUEST_COUNT",
                            "EFFECT_ADJUST_PLAYER_ALWAYS_FULL_RELIGIOUS_TOURISM",
                            "EFFECT_ADJUST_PLAYER_ALWAYS_LOYAL_COASTAL_HOME_CONTINENT",
                            "EFFECT_ADJUST_PLAYER_ANYONE_PLUNDER_FAVOR",
                            "EFFECT_ADJUST_PLAYER_ANYONE_PLUNDER_TO_FAVOR",
                            "EFFECT_ADJUST_PLAYER_ANYONE_TRADE_TO_FAVOR",
                            "EFFECT_ADJUST_PLAYER_AUTO_THEMED_BUILDING",
                            "EFFECT_ADJUST_PLAYER_BAN_CHOP",
                            "EFFECT_ADJUST_PLAYER_BAN_CITY_PRODUCTION",
                            "EFFECT_ADJUST_PLAYER_BAN_POLICY",
                            "EFFECT_ADJUST_PLAYER_BAN_RESOURCE",
                            "EFFECT_ADJUST_PLAYER_BAN_UNIT_PRODUCTION_YIELD",
                            "EFFECT_ADJUST_PLAYER_BID_COST_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_BLOCK_UNIT_ENTRY",
                            "EFFECT_ADJUST_PLAYER_BUFF_UNIT_PRODUCTION_YIELD",
                            "EFFECT_ADJUST_PLAYER_BUILDING_FAVOR",
                            "EFFECT_ADJUST_PLAYER_CAPITAL",
                            "EFFECT_ADJUST_PLAYER_CITY_TILES",
                            "EFFECT_ADJUST_PLAYER_COUNTER_SPY_YIELD_AWARD_PER_LEVEL",
                            "EFFECT_ADJUST_PLAYER_CULTURAL_IDENTITY_PRESSURE_RADIUS_FROM_CAPITAL",
                            "EFFECT_ADJUST_PLAYER_DIPLOMATIC_VICTORY_POINTS",
                            "EFFECT_ADJUST_PLAYER_DISTRICT_AIR_SLOTS",
                            "EFFECT_ADJUST_PLAYER_DISTRICT_AND_BUILDINGS_CREATE_UNIT_WITH_ABILITY_BY_CLASS",
                            "EFFECT_ADJUST_PLAYER_DISTRICT_CREATE_UNIT",
                            "EFFECT_ADJUST_PLAYER_DISTRICT_CREATE_YIELD",
                            "EFFECT_ADJUST_PLAYER_EMBARKED_UNIT_MOVEMENT",
                            "EFFECT_ADJUST_PLAYER_EMBARK_UNIT_PASS",
                            "EFFECT_ADJUST_PLAYER_EMERGENCY_FAVOR_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_ENFORCE_BORDERS",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_AERODROME_BUILDING_CONSTRUCTED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_ARMY_KILLED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_ARTIFACT_EXTRACTED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_CITY_RELIGION_CONVERSION",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_CIVIC_BOOST",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_CONTINENT_DISCOVERED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_CORPS_KILLED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_CULTURE_BUILDING_CONSTRUCTED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_CURRENT_CIVIC",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_CURRENT_TECH",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_DISTRICT_CONSTRUCTED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_GREAT_PERSON_EARNED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_INDUSTRIAL_BUILDING_CONSTRUCTED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_NATURAL_WONDER_DISCOVERED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_NON_BARBARIAN_UNIT_KILLED_BY_GDR",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_NON_BARBARIAN_UNIT_SEA_KILLED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_PRIDE_MOMENT",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_SCIENCE_BUILDING_CONSTRUCTED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_SPY_SUCCESSFUL_MISSION",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_TECH_BOOST",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_TRADE_ROUTE_COMPLETED",
                            "EFFECT_ADJUST_PLAYER_ERA_SCORE_PER_UNIT_PROMOTION_EARNED",
                            "EFFECT_ADJUST_PLAYER_EXTRA_FAVOR_PER_TURN",
                            "EFFECT_ADJUST_PLAYER_FAITH_FROM_DISPERSAL",
                            "EFFECT_ADJUST_PLAYER_FAITH_PEACEFUL_FOUNDERS",
                            "EFFECT_ADJUST_PLAYER_FAVOR_REFUND_FOR_SUCCESSFUL_RESOLUTION",
                            "EFFECT_ADJUST_PLAYER_FEAUTE_REQUIRED_FOR_SPECIALTY_DISTRICTS",
                            "EFFECT_ADJUST_PLAYER_FREE_BUILDING_WHEN_SPECIALTY_DISTRICT_CONSTRUCTED",
                            "EFFECT_ADJUST_PLAYER_FREE_BUILDING_WHEN_SPECIALTY_DISTRICT_CONSTRUCTED_EXCEPT",
                            "EFFECT_ADJUST_PLAYER_FREE_GREAT_PERSON_POINTS",
                            "EFFECT_ADJUST_PLAYER_FREE_RESOURCE_IMPORT",
                            "EFFECT_ADJUST_PLAYER_FREE_RESOURCE_IMPORT_EXTRACTION",
                            "EFFECT_ADJUST_PLAYER_GOLD_INTEREST_PERCENT",
                            "EFFECT_ADJUST_PLAYER_GOVERNMENT_SLOT_TYPE",
                            "EFFECT_ADJUST_PLAYER_GOVERNMENT_SLOT_TYPE_GRANT_FAVOR",
                            "EFFECT_ADJUST_PLAYER_GOVERNOR_FAVOR",
                            "EFFECT_ADJUST_PLAYER_GOVERNOR_POINTS",
                            "EFFECT_ADJUST_PLAYER_GREATPERSON_FAVOR_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_GRIEVANCE_DECAY",
                            "EFFECT_ADJUST_PLAYER_GRIEVANCE_GENERATION",
                            "EFFECT_ADJUST_PLAYER_HAPPINESS",
                            "EFFECT_ADJUST_PLAYER_HEALING_FROM_DISPERSAL",
                            "EFFECT_ADJUST_PLAYER_IDENTITY_PER_TURN_FOR_DOMESTIC_TRADE_ROUTE_ORIGIN",
                            "EFFECT_ADJUST_PLAYER_IMMEDIATE_TRADING_POST",
                            "EFFECT_ADJUST_PLAYER_IMPROVED_ROUTE_LEVEL",
                            "EFFECT_ADJUST_PLAYER_INTERNATIONAL_TRADE_ROUTE_YIELD_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_INTERNATIONAL_TRADE_ROUTE_YIELD_PER_IMPROVEMENT_IN_ORIGIN_CITY",
                            "EFFECT_ADJUST_PLAYER_JOINTWAR_EXPERIENCE",
                            "EFFECT_ADJUST_PLAYER_JOINTWAR_PLUNDER",
                            "EFFECT_ADJUST_PLAYER_LEVIED_UNIT_UPGRADE_DISCOUNT_PERCENT",
                            "EFFECT_ADJUST_PLAYER_LEVY_DISCOUNT_PERCENT",
                            "EFFECT_ADJUST_PLAYER_LOYALTY_MARTIAL_LAW_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_MAX_DISTRICTS",
                            "EFFECT_ADJUST_PLAYER_MAX_TRADE_ROUTES",
                            "EFFECT_ADJUST_PLAYER_MAX_WARMONGER_PERCENT",
                            "EFFECT_ADJUST_PLAYER_NO_CAP_RESOURCE",
                            "EFFECT_ADJUST_PLAYER_NO_OCCUPATION_PENALTIES",
                            "EFFECT_ADJUST_PLAYER_OPEN_BORDERS_FROM_INFLUENCE",
                            "EFFECT_ADJUST_PLAYER_OTHER_GOVERNMENT_INTOLERANCE",
                            "EFFECT_ADJUST_PLAYER_OVERALL_TOURISM_REDUCTION",
                            "EFFECT_ADJUST_PLAYER_POLICY_FAVOR",
                            "EFFECT_ADJUST_PLAYER_POST_COMBAT_LOYALTY",
                            "EFFECT_ADJUST_PLAYER_POST_PILLAGE_LOYALTY",
                            "EFFECT_ADJUST_PLAYER_PREVENT_HARVEST_RESOURCE",
                            "EFFECT_ADJUST_PLAYER_PROGRESS_DIFF_TRADE_BONUS",
                            "EFFECT_ADJUST_PLAYER_PROPERTY",
                            "EFFECT_ADJUST_PLAYER_RANDOM_CIVIC_BOOST_GOODY_HUT",
                            "EFFECT_ADJUST_PLAYER_RANDOM_EVENT_AVOID",
                            "EFFECT_ADJUST_PLAYER_RANDOM_TECHNOLOGY_BOOST_GOODY_HUT",
                            "EFFECT_ADJUST_PLAYER_RELIGIOUS_TOURISM_REDUCTION",
                            "EFFECT_ADJUST_PLAYER_RESOURCE_ACCUMULATION_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_RESOURCE_STOCKPILE_CAP",
                            "EFFECT_ADJUST_PLAYER_ROCK_BAND_UNIT_ALBUM_SALES",
                            "EFFECT_ADJUST_PLAYER_SCIENCE_VICTORY_POINTS",
                            "EFFECT_ADJUST_PLAYER_SCIENCE_VICTORY_POINTS_PER_TURN",
                            "EFFECT_ADJUST_PLAYER_SEND_INFLUENCE_TOKEN_FAVOR_BY_BONUS_TYPE",
                            "EFFECT_ADJUST_PLAYER_SEND_TRADE_ROUTE_FAVOR_BY_BONUS_TYPE",
                            "EFFECT_ADJUST_PLAYER_SKIP_FREE_CITY_STEP",
                            "EFFECT_ADJUST_PLAYER_SPECIALTY_DISTRICT_CANNOT_BE_BUILT_ADJACENT_TO_CITY",
                            "EFFECT_ADJUST_PLAYER_SPECIFIC_DISTRICT_GRANT_ENVOYS",
                            "EFFECT_ADJUST_PLAYER_SPY_BONUS",
                            "EFFECT_ADJUST_PLAYER_STEAL_TECH_BOOSTS",
                            "EFFECT_ADJUST_PLAYER_STRENGTH_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_SUZERAIN_BONUS_DISABLED",
                            "EFFECT_ADJUST_PLAYER_SUZERAIN_FAVOR_BY_BONUS_TYPE",
                            "EFFECT_ADJUST_PLAYER_SUZERAIN_FAVOR_MULTIPLIER",
                            "EFFECT_ADJUST_PLAYER_TARGET_CITY_SPY_YIELD_PERCENT",
                            "EFFECT_ADJUST_PLAYER_TERRAIN_WORK_IMPASSABLE_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_TOKEN_ON_FIRST_MEETING",
                            "EFFECT_ADJUST_PLAYER_TOKEN_ON_TRADE_ROUTE_STARTED",
                            "EFFECT_ADJUST_PLAYER_TOURISM",
                            "EFFECT_ADJUST_PLAYER_TOURISM_FAVOR",
                            "EFFECT_ADJUST_PLAYER_TOURISM_FROM_NATIONAL_PARKS",
                            "EFFECT_ADJUST_PLAYER_TRADE_GAIN_TILES_EN_ROUTE",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_BY_CITY_STATE_BONUS_TYPE_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_CAPACITY_ON_MEETING",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_DESTINATION_YIELD_FOR_ALLY_ROUTE",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_DESTINATION_YIELD_FOR_SUZERAIN_ROUTE",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_ORIGIN_YIELD_FOR_ALLY_ROUTE",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_ORIGIN_YIELD_FOR_SUZERAIN_ROUTE",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_RELIGIOUS_PRESSURE",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_TOURISM_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_PER_FOLLOWER",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_PER_IMPROVEMENT_IN_TARGET_CITY",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_PER_PATH_TILE",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_PER_POST_IN_FOREIGN_CITY",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_PER_POST_IN_OWN_CITY",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_PER_TERRAIN_FOR_DOMESTIC",
                            "EFFECT_ADJUST_PLAYER_TRADE_ROUTE_YIELD_PER_TERRAIN_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_PLAYER_UNIT_BUILD_DISABLED",
                            "EFFECT_ADJUST_PLAYER_UNIT_DISTRICT_PERCENT",
                            "EFFECT_ADJUST_PLAYER_UNIT_PROJECT_PERCENT",
                            "EFFECT_ADJUST_PLAYER_UNIT_UPGRADE_DISCOUNT_PERCENT",
                            "EFFECT_ADJUST_PLAYER_UNIT_UPGRADE_RESOURCE_COST_DISCOUNT",
                            "EFFECT_ADJUST_PLAYER_UNIT_WONDER_PERCENT",
                            "EFFECT_ADJUST_PLAYER_VALID_BUILDING",
                            "EFFECT_ADJUST_PLAYER_VALID_IMPROVEMENT",
                            "EFFECT_ADJUST_PLAYER_VALID_UNIT_BUILD",
                            "EFFECT_ADJUST_PLAYER_WARMONGER_MULTIPLIER",
                            "EFFECT_ADJUST_PLAYER_WMD_COUNT",
                            "EFFECT_ADJUST_PLAYER_WMD_MAINTENANCE_MODIFIER",
                            "EFFECT_ADJUST_PLAYER_YIELD_CHANGE",
                            "EFFECT_ADJUST_PLAYER_YIELD_CHANGE_PER_GREAT_PERSON_CLASS_ON_RESOURCE",
                            "EFFECT_ADJUST_PLAYER_YIELD_CHANGE_PER_TRIBUTARY",
                            "EFFECT_ADJUST_PLAYER_YIELD_CHANGE_PER_USED_INFLUENCE_TOKEN",
                            "EFFECT_ADJUST_PLAYER_YIELD_MODIFIER_PER_EARNED_GREAT_PERSON",
                            "EFFECT_ADJUST_PLAYER_YIELD_MODIFIER_PER_TRIBUTARY",
                            "EFFECT_ADJUST_PLOT_PURCHASE_COST",
                            "EFFECT_ADJUST_PLOT_PURCHASE_COST_TERRAIN",
                            "EFFECT_ADJUST_PLOT_YIELD",
                            "EFFECT_ADJUST_POLICY_AMENITY",
                            "EFFECT_ADJUST_POLICY_HOUSING",
                            "EFFECT_ADJUST_POPULATION_AFTER_CONQUEST",
                            "EFFECT_ADJUST_POPULATION_FROM_PLOT",
                            "EFFECT_ADJUST_PREVENT_STRUCTURAL_DAMAGE",
                            "EFFECT_ADJUST_PROJECT_PRODUCTION",
                            "EFFECT_ADJUST_RANDOM_EVENT_MODIFIED_DAMAGE_OPPOSING_PLAYER",
                            "EFFECT_ADJUST_RANDOM_EVENT_NO_UNIT_DAMAGE",
                            "EFFECT_ADJUST_RELIGION_AMENITIES_FOR_MINIMUM_FOLLOWERS",
                            "EFFECT_ADJUST_RELIGION_ANYONE_CONDEMNS_FAVOR",
                            "EFFECT_ADJUST_RELIGION_BUILDING_DISCOUNT",
                            "EFFECT_ADJUST_RELIGION_CONDEMN_PROHIBITED",
                            "EFFECT_ADJUST_RELIGIOUS_COMBAT_LOSS",
                            "EFFECT_ADJUST_RELIGIOUS_SPREAD_DISTANCE",
                            "EFFECT_ADJUST_RELIGIOUS_SPREAD_STRENGTH",
                            "EFFECT_ADJUST_RESOURCE_POWER_PROVIDED_GOVERNOR",
                            "EFFECT_ADJUST_RESOURCE_YIELD_BY_COUNT",
                            "EFFECT_ADJUST_RIVER_DISTRICT_PRODUCTION",
                            "EFFECT_ADJUST_RIVER_WONDER_PRODUCTION",
                            "EFFECT_ADJUST_SPACE_RACE_PROJECTS_PRODUCTION",
                            "EFFECT_ADJUST_TECHNOLOGY_BOOST",
                            "EFFECT_ADJUST_TERRAIN_YIELD_FROM_ADJACENT_IMPROVEMENTS",
                            "EFFECT_ADJUST_TRADE_ROUTE_CAPACITY",
                            "EFFECT_ADJUST_TRADE_ROUTE_WATER_RANGE",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_CHANGE",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_FOR_DOMESTIC",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_FOR_OTHERS",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_FROM_OTHERS",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_PER_SPECIALTY_DISTRICT_FOR_DOMESTIC",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_PER_SPECIALTY_DISTRICT_FOR_INTERNATIONAL",
                            "EFFECT_ADJUST_TRADE_ROUTE_YIELD_TO_OTHERS",
                            "EFFECT_ADJUST_TRAIT_AMENITY",
                            "EFFECT_ADJUST_UNITS_RELIGIOUS_STRENGTH_BY_RELIGION_TYPE",
                            "EFFECT_ADJUST_UNIT_ADVANCED_COASTAL_RAID",
                            "EFFECT_ADJUST_UNIT_ADVANCED_PILLAGING",
                            "EFFECT_ADJUST_UNIT_AGAINST_DISTRICT_COMBAT_BONUS",
                            "EFFECT_ADJUST_UNIT_ANTI_AIR_STRENGTH",
                            "EFFECT_ADJUST_UNIT_ATTACK_AND_MOVE",
                            "EFFECT_ADJUST_UNIT_ATTACK_EXPERIENCE_MODIFIER",
                            "EFFECT_ADJUST_UNIT_ATTACK_RANGE",
                            "EFFECT_ADJUST_UNIT_BARBARIAN_COMBAT",
                            "EFFECT_ADJUST_UNIT_BOOST_ALL_SPIES",
                            "EFFECT_ADJUST_UNIT_BUILD_CHARGES",
                            "EFFECT_ADJUST_UNIT_BYPASS_COMBAT_UNIT",
                            "EFFECT_ADJUST_UNIT_BYPASS_WALLS",
                            "EFFECT_ADJUST_UNIT_BYPASS_WALLS_PROMOTION_CLASS",
                            "EFFECT_ADJUST_UNIT_CANNOT_ATTACK",
                            "EFFECT_ADJUST_UNIT_CLEAR_TERRAIN_START_MOVEMENT",
                            "EFFECT_ADJUST_UNIT_COMBAT_CAPTURE",
                            "EFFECT_ADJUST_UNIT_COMBAT_STRENGTH",
                            "EFFECT_ADJUST_UNIT_COMBAT_STRENGTH_FOR_ERA",
                            "EFFECT_ADJUST_UNIT_COMBAT_UNIT_CAPTURE",
                            "EFFECT_ADJUST_UNIT_CONVERTS_BARBARIANS",
                            "EFFECT_ADJUST_UNIT_DAMAGE",
                            "EFFECT_ADJUST_UNIT_DEFENSE",
                            "EFFECT_ADJUST_UNIT_DIPLO_VISIBILITY_COMBAT_MODIFIER",
                            "EFFECT_ADJUST_UNIT_DIRECT_LOYALTY_DAMAGE",
                            "EFFECT_ADJUST_UNIT_DISASTER_CHARGES",
                            "EFFECT_ADJUST_UNIT_DOMAIN_PRODUCTION",
                            "EFFECT_ADJUST_UNIT_ENABLE_WALL_ATTACK",
                            "EFFECT_ADJUST_UNIT_ENABLE_WALL_ATTACK_PROMOTION_CLASS",
                            "EFFECT_ADJUST_UNIT_ENABLE_WALL_ATTACK_WHOLE_GAME",
                            "EFFECT_ADJUST_UNIT_ENABLE_WALL_ATTACK_WHOLE_GAME_PROMOTION_CLASS",
                            "EFFECT_ADJUST_UNIT_ENABLE_WALL_ATTACK_WHOLE_GAME_SAME_RELIGION",
                            "EFFECT_ADJUST_UNIT_ENABLE_WALL_ATTACK_WHOLE_GAME_SAME_RELIGION_PROMOTION_CLASS",
                            "EFFECT_ADJUST_UNIT_ENEMY_HEAL",
                            "EFFECT_ADJUST_UNIT_ENEMY_TERRITORY_START_MOVEMENT",
                            "EFFECT_ADJUST_UNIT_ENTER_FOREIGN_LANDS",
                            "EFFECT_ADJUST_UNIT_ERA_STRENGTH_MODIFIER",
                            "EFFECT_ADJUST_UNIT_ESCAPE_BOOST",
                            "EFFECT_ADJUST_UNIT_ESCORT_MOBILITY",
                            "EFFECT_ADJUST_UNIT_EVICT_PERCENT",
                            "EFFECT_ADJUST_UNIT_EXERT_ZOC",
                            "EFFECT_ADJUST_UNIT_EXPERIENCE_LEVEL",
                            "EFFECT_ADJUST_UNIT_EXPERIENCE_MODIFIER",
                            "EFFECT_ADJUST_UNIT_EXTRACT_SEA_ARTIFACTS",
                            "EFFECT_ADJUST_UNIT_FAITH_ON_DISTRICT_PLUNDER",
                            "EFFECT_ADJUST_UNIT_FAITH_ON_IMPROVEMENT_PLUNDER",
                            "EFFECT_ADJUST_UNIT_FIGHT_WHILE_EMBARKED",
                            "EFFECT_ADJUST_UNIT_FLANKING_BONUS_MODIFIER",
                            "EFFECT_ADJUST_UNIT_FORCE_RETREAT",
                            "EFFECT_ADJUST_UNIT_FOREIGN_SPREAD_MODIFIER",
                            "EFFECT_ADJUST_UNIT_FRIENDLY_HEAL",
                            "EFFECT_ADJUST_UNIT_FRIENDLY_TERRITORY_COMBAT",
                            "EFFECT_ADJUST_UNIT_FRIENDLY_TERRITORY_START_MOVEMENT",
                            "EFFECT_ADJUST_UNIT_GRANT_EXPERIENCE",
                            "EFFECT_ADJUST_UNIT_GREAT_PERSON_CHARGES",
                            "EFFECT_ADJUST_UNIT_HEAL",
                            "EFFECT_ADJUST_UNIT_HEALING_MODIFIERS",
                            "EFFECT_ADJUST_UNIT_HEALING_RELIGION_MODIFIERS",
                            "EFFECT_ADJUST_UNIT_HIDDEN_VISIBILITY",
                            "EFFECT_ADJUST_UNIT_HOLY_CITIES_COMBAT_MODIFIER",
                            "EFFECT_ADJUST_UNIT_IGNORE_CLIFF_WALLS",
                            "EFFECT_ADJUST_UNIT_IGNORE_RANGED_VS_DISTRICT_PENALTY",
                            "EFFECT_ADJUST_UNIT_IGNORE_RESOURCE_MAINTENANCE",
                            "EFFECT_ADJUST_UNIT_IGNORE_RIVERS",
                            "EFFECT_ADJUST_UNIT_IGNORE_SHORES",
                            "EFFECT_ADJUST_UNIT_IGNORE_SHORESFORESTHILLS",
                            "EFFECT_ADJUST_UNIT_IGNORE_STRATEGIC_RESOURCE_LEVIED",
                            "EFFECT_ADJUST_UNIT_IGNORE_TERRAIN_COST",
                            "EFFECT_ADJUST_UNIT_IGNORE_ZOC",
                            "EFFECT_ADJUST_UNIT_INITIATION_YIELD",
                            "EFFECT_ADJUST_UNIT_INITIATION_YIELD_POPULATION",
                            "EFFECT_ADJUST_UNIT_JUMP_ABILITY",
                            "EFFECT_ADJUST_UNIT_LAND_VICTORY_SPREAD",
                            "EFFECT_ADJUST_UNIT_MAINTENANCE_DISCOUNT",
                            "EFFECT_ADJUST_UNIT_MILITARY_FORMATION",
                            "EFFECT_ADJUST_UNIT_MILITARY_POLICIES_COMBAT_MODIFIER",
                            "EFFECT_ADJUST_UNIT_MOVEMENT",
                            "EFFECT_ADJUST_UNIT_MOVE_AND_ATTACK",
                            "EFFECT_ADJUST_UNIT_NATURAL_WONDER_DEFERRED_CHARGES",
                            "EFFECT_ADJUST_UNIT_NEIGHBOR_COMBAT_MODIFIER",
                            "EFFECT_ADJUST_UNIT_NEUTRAL_HEAL",
                            "EFFECT_ADJUST_UNIT_NO_FOREIGN_SPREAD",
                            "EFFECT_ADJUST_UNIT_NO_MOVE_TERRAIN",
                            "EFFECT_ADJUST_UNIT_NO_REDUCTION_DAMAGE",
                            "EFFECT_ADJUST_UNIT_NUM_ATTACKS",
                            "EFFECT_ADJUST_UNIT_OWNER",
                            "EFFECT_ADJUST_UNIT_PARADROP_ABILITY",
                            "EFFECT_ADJUST_UNIT_PER_LUXURY_ATTACK_MODIFIER",
                            "EFFECT_ADJUST_UNIT_PER_UNUSED_MOVEMENT_COMBAT_BONUS",
                            "EFFECT_ADJUST_UNIT_PILLAGE_DISTRICT_MODIFIER",
                            "EFFECT_ADJUST_UNIT_PILLAGE_IMPROVEMENT_MODIFIER",
                            "EFFECT_ADJUST_UNIT_PLUNDER_YIELDS",
                            "EFFECT_ADJUST_UNIT_POST_COMBAT_HEAL",
                            "EFFECT_ADJUST_UNIT_POST_COMBAT_YIELD",
                            "EFFECT_ADJUST_UNIT_POST_TOURISM_BOMB_LOYALTY",
                            "EFFECT_ADJUST_UNIT_PRODUCTION",
                            "EFFECT_ADJUST_UNIT_PROMOTE_NO_FINISH_MOVES",
                            "EFFECT_ADJUST_UNIT_PROPERTY",
                            "EFFECT_ADJUST_UNIT_PURCHASE_COST",
                            "EFFECT_ADJUST_UNIT_RAIDING",
                            "EFFECT_ADJUST_UNIT_RELIC_UPON_DEATH",
                            "EFFECT_ADJUST_UNIT_ROCK_BAND_LEVEL_DISTRICT",
                            "EFFECT_ADJUST_UNIT_ROCK_BAND_LEVEL_IMPROVEMENT",
                            "EFFECT_ADJUST_UNIT_ROCK_BAND_LEVEL_NATIONAL_PARK",
                            "EFFECT_ADJUST_UNIT_ROCK_BAND_LEVEL_NATURAL_WONDER",
                            "EFFECT_ADJUST_UNIT_ROCK_BAND_TOURISM_BOMB_VALUE_PEACE",
                            "EFFECT_ADJUST_UNIT_SEA_MOVEMENT",
                            "EFFECT_ADJUST_UNIT_SEE_HIDDEN",
                            "EFFECT_ADJUST_UNIT_SEE_THROUGH_FEATURES",
                            "EFFECT_ADJUST_UNIT_SEE_THROUGH_TERRAIN",
                            "EFFECT_ADJUST_UNIT_SIGHT",
                            "EFFECT_ADJUST_UNIT_SPREAD_CHARGES",
                            "EFFECT_ADJUST_UNIT_SPY_COUNTERSPY_ADJACENT_LEVEL_BOOST",
                            "EFFECT_ADJUST_UNIT_SPY_COUNTERSPY_ENTIRE_CITY",
                            "EFFECT_ADJUST_UNIT_SPY_ESTABLISH_TIME",
                            "EFFECT_ADJUST_UNIT_SPY_OFFENSIVE_OPERATION_TIME",
                            "EFFECT_ADJUST_UNIT_SPY_OPERATION_CHANCE",
                            "EFFECT_ADJUST_UNIT_SPY_OPERATION_TIME",
                            "EFFECT_ADJUST_UNIT_STRENGTH_FROM_CITY_CULTURAL_IDENTITY",
                            "EFFECT_ADJUST_UNIT_STRENGTH_REDUCTION_FOR_DAMAGE_MODIFIER",
                            "EFFECT_ADJUST_UNIT_SUPPORT_BONUS_MODIFIER",
                            "EFFECT_ADJUST_UNIT_TAG_ERA_PRODUCTION",
                            "EFFECT_ADJUST_UNIT_TOURISM_BOMB_CONVERT_CITY",
                            "EFFECT_ADJUST_UNIT_TOURISM_BOMB_DISTRICT",
                            "EFFECT_ADJUST_UNIT_TOURISM_BOMB_IMPROVEMENT",
                            "EFFECT_ADJUST_UNIT_TOURISM_BOMB_NATIONAL_PARK",
                            "EFFECT_ADJUST_UNIT_TOURISM_BOMB_NATURAL_WONDER",
                            "EFFECT_ADJUST_UNIT_TOURISM_BOMB_RANGE",
                            "EFFECT_ADJUST_UNIT_TRADE_ROUTE_PLUNDER_IMMUNITY",
                            "EFFECT_ADJUST_UNIT_UPGRADE_GOODY_HUT",
                            "EFFECT_ADJUST_UNIT_VALID_TERRAIN",
                            "EFFECT_ADJUST_UNIT_WATER_DAMAGE_PROTECTION",
                            "EFFECT_ADJUST_UNIT_WMD_PROTECTION",
                            "EFFECT_ADJUST_UNIT_YIELD_PER_TOURISM_BOMB",
                            "EFFECT_ADJUST_VALID_FEATURES_DISTRICTS",
                            "EFFECT_ADJUST_VALID_FEATURES_WONDERS",
                            "EFFECT_ADJUST_WAR_WEARINESS",
                            "EFFECT_ADJUST_WATER_HOUSING",
                            "EFFECT_ADJUST_WONDER_ADJACENT_NATURAL_WONDER_PRODUCTION",
                            "EFFECT_ADJUST_WONDER_ERA_PRODUCTION",
                            "EFFECT_ADJUST_WONDER_PRODUCTION",
                            "EFFECT_ADJUST_WONDER_YIELD_CHANGE",
                            "EFFECT_ADJUST_YIELD_BY_NUMBER_OF_RESOURCES",
                            "EFFECT_ADOPT_ALLY_FOUNDED_RELIGIONS",
                            "EFFECT_ALLIANCE_CULTURE_SHARING",
                            "EFFECT_ALLIANCE_ENVOY_POINTS_FROM_ALLY_TRIBUTARIES",
                            "EFFECT_ALLIANCE_GRANT_SHARED_VIS",
                            "EFFECT_ALLIANCE_PRESSURE_FROM_NO_ALLY_RELIGION",
                            "EFFECT_ALLIANCE_RESEARCH_AGREEMENT",
                            "EFFECT_ALLIANCE_SCIENCE_SHARING",
                            "EFFECT_ALLIANCE_SHARE_SUZERAIN",
                            "EFFECT_ALLIANCE_TOURISM_SHARING",
                            "EFFECT_ALLIANCE_YIELD_INCOME_FROM_ALLY_RELIGION",
                            "EFFECT_ASSIGN_CITY_PROPERTY",
                            "EFFECT_ASSIGN_DISTRICT_PROPERTY",
                            "EFFECT_ASSIGN_GAME_PROPERTY",
                            "EFFECT_ASSIGN_PLAYER_PROPERTY",
                            "EFFECT_ASSIGN_UNIT_PROPERTY",
                            "EFFECT_ATTACH_MODIFIER",
                            "EFFECT_ATTACH_MODIFIER_IF_PROMOTION_CLASS_MATCHES",
                            "EFFECT_ATTACH_MODIFIER_TO_MINORCIVBONUSTYPE",
                            "EFFECT_ATTACH_MODIFIER_TO_PLAYERTYPE",
                            "EFFECT_ATTACH_PERMANENT_MODIFIER_TO_ADJACENT_PLOT_UNITS",
                            "EFFECT_ATTACH_PERMANENT_MODIFIER_TO_PLOT_UNITS",
                            "EFFECT_ATTACH_UNIT_MODIFIER",
                            "EFFECT_BECOME_CITY_SUZERAIN",
                            "EFFECT_CHANGE_UNIT_OPERATION_AVAILABILITY",
                            "EFFECT_CITY_GRANT_HERO",
                            "EFFECT_CITY_GRANT_RANDOM_RESOURCE_PRODUCT",
                            "EFFECT_CITY_LEVY_UNITS_IN_TERRITORY",
                            "EFFECT_CITY_RECOMMISSION_REACTOR",
                            "EFFECT_CITY_REMOVE_OTHER_RELIGIONS",
                            "EFFECT_DIPLOMACY_AGENDA_ANGEVIN_EMPIRE",
                            "EFFECT_DIPLOMACY_AGENDA_ARCHIPELAGIC_STATE",
                            "EFFECT_DIPLOMACY_AGENDA_AYYUBID_DYNASTY",
                            "EFFECT_DIPLOMACY_AGENDA_BLACK_QUEEN",
                            "EFFECT_DIPLOMACY_AGENDA_BULL_MOOSE",
                            "EFFECT_DIPLOMACY_AGENDA_BUSHIDO",
                            "EFFECT_DIPLOMACY_AGENDA_CANADIAN_EXPEDITIONARY",
                            "EFFECT_DIPLOMACY_AGENDA_END_TO_SUFFERING",
                            "EFFECT_DIPLOMACY_AGENDA_ENVIRONMENT",
                            "EFFECT_DIPLOMACY_AGENDA_ETHIOPIAN_HIGHLANDS",
                            "EFFECT_DIPLOMACY_AGENDA_EXPLOITATIVE",
                            "EFFECT_DIPLOMACY_AGENDA_FLAT_EARTHER",
                            "EFFECT_DIPLOMACY_AGENDA_HORN_CHEST_LOINS",
                            "EFFECT_DIPLOMACY_AGENDA_HORSE_LORD",
                            "EFFECT_DIPLOMACY_AGENDA_KAITIAKITANGA",
                            "EFFECT_DIPLOMACY_AGENDA_KUBLAI_PAX",
                            "EFFECT_DIPLOMACY_AGENDA_LAST_VIKING_KING",
                            "EFFECT_DIPLOMACY_AGENDA_LAWGIVER",
                            "EFFECT_DIPLOMACY_AGENDA_LORD_OF_MINES",
                            "EFFECT_DIPLOMACY_AGENDA_MAGNIFICENCES",
                            "EFFECT_DIPLOMACY_AGENDA_OPPORTUNIST",
                            "EFFECT_DIPLOMACY_AGENDA_OPTIMUS_PRINCEPS",
                            "EFFECT_DIPLOMACY_AGENDA_PARANOID",
                            "EFFECT_DIPLOMACY_AGENDA_PATRON_OF_ARTS",
                            "EFFECT_DIPLOMACY_AGENDA_PERPETUALLY_ON_GUARD",
                            "EFFECT_DIPLOMACY_AGENDA_QUEEN_OF_NILE",
                            "EFFECT_DIPLOMACY_AGENDA_RAVEN_BANNER",
                            "EFFECT_DIPLOMACY_AGENDA_SHORT_LIFE_GLORY",
                            "EFFECT_DIPLOMACY_AGENDA_SIMON_BOLIVAR",
                            "EFFECT_DIPLOMACY_AGENDA_TRIEU_DEFENDER",
                            "EFFECT_DIPLOMACY_AGENDA_TURTLER",
                            "EFFECT_DIPLOMACY_AGENDA_WITH_SHIELD_OR_ON_IT",
                            "EFFECT_DIPLOMACY_AGENDA_ZEALOT",
                            "EFFECT_DIPLOMACY_ARCHAEOLOGY",
                            "EFFECT_DIPLOMACY_BROKEN_PLEDGE",
                            "EFFECT_DIPLOMACY_BROKEN_PROMISE",
                            "EFFECT_DIPLOMACY_CONVERT_CITY",
                            "EFFECT_DIPLOMACY_CULTURAL_ID",
                            "EFFECT_DIPLOMACY_ESPIONAGE",
                            "EFFECT_DIPLOMACY_FORCE_INCURSION",
                            "EFFECT_DIPLOMACY_GOVERNMENTS",
                            "EFFECT_DIPLOMACY_KEPT_PLEDGE",
                            "EFFECT_DIPLOMACY_KEPT_PROMISE",
                            "EFFECT_DIPLOMACY_NEW_WARMONGER",
                            "EFFECT_DIPLOMACY_NO_PLEDGE",
                            "EFFECT_DIPLOMACY_NO_PROMISE",
                            "EFFECT_DIPLOMACY_ONE_SIDED_TRADES",
                            "EFFECT_DIPLOMACY_RANDOM",
                            "EFFECT_DIPLOMACY_SETTLED_CITIES",
                            "EFFECT_DIPLOMACY_SIMPLE_EFFECT",
                            "EFFECT_DIPLOMACY_TENSION",
                            "EFFECT_DIPLOMACY_THIRD_PARTY_EFFECTS",
                            "EFFECT_DIPLOMACY_THIRD_PARTY_WARMONGER",
                            "EFFECT_DIPLOMACY_TRADE_RELATIONS",
                            "EFFECT_DIPLOMACY_WARMONGER",
                            "EFFECT_DISABLE_PLAYER_GRIEVANCE_DECAY",
                            "EFFECT_DISTRICT_ADD_NAVAL_UNIT",
                            "EFFECT_DISTRICT_ADJACENCY",
                            "EFFECT_DO_NOTHING",
                            "EFFECT_ENABLE_BUILDING_FAITH_PURCHASE",
                            "EFFECT_ENABLE_RELIGION_AUTO_SPREAD",
                            "EFFECT_ENABLE_RELIGION_AWARDS_ENVOY",
                            "EFFECT_ENABLE_RELIGION_AWARDS_ENVOY_RELIGIOUS_PRESSURE",
                            "EFFECT_ENABLE_SPECIFIC_BUILDING_FAITH_PURCHASE",
                            "EFFECT_ENABLE_UNIT_FAITH_PURCHASE",
                            "EFFECT_EXPLORE_ENTIRE_MAP",
                            "EFFECT_FEATURE_ADJACENCY",
                            "EFFECT_GOVERNOR_ADJUST_CITY_COPY_LUXURIES_FOR_IMPORT",
                            "EFFECT_GOVERNOR_ADJUST_CITY_COPY_STRATEGICS_FOR_IMPORT",
                            "EFFECT_GOVERNOR_ADJUST_CITY_TOKENS_GRANTED",
                            "EFFECT_GOVERNOR_ADJUST_CITY_TOKENS_GRANTED_MODIFIER",
                            "EFFECT_GOVERNOR_ADJUST_IDENITITY_PER_TITLE",
                            "EFFECT_GRANT_ABILITY",
                            "EFFECT_GRANT_AIR_SLOTS",
                            "EFFECT_GRANT_ALL_TECHNOLOGY_BOOST_BY_ERA",
                            "EFFECT_GRANT_BOOST_WITH_GREAT_PERSON",
                            "EFFECT_GRANT_BUILDING_IN_CAPITAL",
                            "EFFECT_GRANT_BUILDING_IN_CITY",
                            "EFFECT_GRANT_BUILDING_IN_CITY_IGNORE",
                            "EFFECT_GRANT_CHEAPEST_BUILDING_IN_CITY",
                            "EFFECT_GRANT_CITY_LOYALTY",
                            "EFFECT_GRANT_CITY_OWNER_INFLUENCE_TOKEN_WONDER",
                            "EFFECT_GRANT_CITY_ROAD_TO_CAPITAL",
                            "EFFECT_GRANT_CITY_TRADING_POST",
                            "EFFECT_GRANT_CITY_YIELD_PERCENT_BUILDING_CREATED_COST",
                            "EFFECT_GRANT_CITY_YIELD_PERCENT_UNIT_CREATED_COST",
                            "EFFECT_GRANT_COMBAT_ADJACENCY",
                            "EFFECT_GRANT_FOUND_FOREIGN_CITY_TRADE_ROUTE_CAPACITY",
                            "EFFECT_GRANT_FREE_ENVOYS_HERE",
                            "EFFECT_GRANT_FREE_RESOURCE_EXTRACTED",
                            "EFFECT_GRANT_FREE_RESOURCE_FROM_UNIT_PLOT",
                            "EFFECT_GRANT_FREE_RESOURCE_IN_CITY",
                            "EFFECT_GRANT_FREE_RESOURCE_VISIBILITY",
                            "EFFECT_GRANT_FREE_UNIT_ON_PLOT",
                            "EFFECT_GRANT_GOLDEN_AGE_TRADE_ROUTE_CAPACITY",
                            "EFFECT_GRANT_GREAT_PERSON_CLASS_IN_CITY",
                            "EFFECT_GRANT_HEAL_AFTER_ACTION",
                            "EFFECT_GRANT_IMPROVEMENT_ADJACENT_YIELDS",
                            "EFFECT_GRANT_INFLUENCE_TOKEN",
                            "EFFECT_GRANT_INFLUENCE_TOKEN_LEVY_MILITARY",
                            "EFFECT_GRANT_PLAYER_FAITH_FROM_HARVEST",
                            "EFFECT_GRANT_PLAYER_FAITH_FROM_REMOVE_FEATURE",
                            "EFFECT_GRANT_PLAYER_FREE_RESOURCE_EXTRACTED",
                            "EFFECT_GRANT_PLAYER_RANDOM_CIVIC",
                            "EFFECT_GRANT_PLAYER_RANDOM_TECHNOLOGY",
                            "EFFECT_GRANT_PLAYER_RELIGIOUS_PRESSURE_GREAT_PERSON_ACTIVATED",
                            "EFFECT_GRANT_PLAYER_SPECIFIC_TECHNOLOGY",
                            "EFFECT_GRANT_PLAYER_SPECIFIC_TECH_BOOST_GREAT_PERSON",
                            "EFFECT_GRANT_PLAYER_YIELD_PERCENT_UNIT_COST",
                            "EFFECT_GRANT_PLOT",
                            "EFFECT_GRANT_POLICY",
                            "EFFECT_GRANT_PRODUCTION_IN_CITY",
                            "EFFECT_GRANT_PROMOTION",
                            "EFFECT_GRANT_RANDOM_BASE_PROMOTION",
                            "EFFECT_GRANT_RANDOM_CIVIC_BOOST_BY_ERA",
                            "EFFECT_GRANT_RANDOM_CIVIC_BOOST_ON_NEW_ERA",
                            "EFFECT_GRANT_RANDOM_TECHNOLOGY_BOOST_BY_ERA",
                            "EFFECT_GRANT_RANDOM_TECHNOLOGY_BOOST_ON_NEW_ERA",
                            "EFFECT_GRANT_RELIC",
                            "EFFECT_GRANT_RELIGIOUS_PRESSURE_BURST",
                            "EFFECT_GRANT_ROUTE_IN_RADIUS",
                            "EFFECT_GRANT_SPY",
                            "EFFECT_GRANT_STRENGTH_PER_ADJACENT_UNIT_TYPE",
                            "EFFECT_GRANT_TECHNOLOGY",
                            "EFFECT_GRANT_TOURISM_PER_EXCESS_LUXURIES",
                            "EFFECT_GRANT_UNIT_BY_CLASS",
                            "EFFECT_GRANT_UNIT_BY_DOMAIN",
                            "EFFECT_GRANT_UNIT_IN_CITY",
                            "EFFECT_GRANT_UNIT_IN_EACH_DISTRICT",
                            "EFFECT_GRANT_UNIT_OF_CLASS_AND_APPLY_ABILITY",
                            "EFFECT_GRANT_UNIT_TYPE_UNLIMITED_PROMOTION_CHOICES",
                            "EFFECT_GRANT_UNIT_WITH_EXPERIENCE",
                            "EFFECT_GRANT_UNIT_YIELD_ADJACENT_FEATURES",
                            "EFFECT_GRANT_UNIT_YIELD_ADJACENT_NATURAL_WONDERS",
                            "EFFECT_GRANT_UNIT_YIELD_ADJACENT_TERRAINS",
                            "EFFECT_GRANT_YIELD",
                            "EFFECT_GRANT_YIELD_BASED_ON_CURRENT_YIELD_RATE",
                            "EFFECT_GRANT_YIELD_PER_EXCESS_LUXURIES",
                            "EFFECT_GRANT_YIELD_PER_FEATURE_IN_CITY",
                            "EFFECT_GRANT_YIELD_PER_GREAT_WORK_IN_CITY",
                            "EFFECT_GRANT_YIELD_PER_RESOURCE_IN_CITY",
                            "EFFECT_IMPROVEMENT_ADJACENCY",
                            "EFFECT_KILL_EMERGENCY_TARGET_SPIES_IN_CITY",
                            "EFFECT_MAP_REMOVE_CLIFFS_IN_DIRECTION",
                            "EFFECT_MOUNTAIN_PORTAL",
                            "EFFECT_PLAYER_ADJUST_FAVOR_FROM_DELEGATIONS",
                            "EFFECT_PLAYER_ADJUST_FAVOR_FROM_EMBASSIES",
                            "EFFECT_PLAYER_ADJUST_YIELD_FROM_DELEGATIONS",
                            "EFFECT_PLAYER_ADJUST_YIELD_FROM_EMBASSIES",
                            "EFFECT_PLAYER_DIPLOMACY_AGENDA_COMPARE_ARMY_SIZE",
                            "EFFECT_PLAYER_DIPLOMACY_AGENDA_DISTRICT_SPREAD",
                            "EFFECT_PLAYER_DISCOVER_HERO",
                            "EFFECT_PLAYER_SEND_GOLD_TO_EMERGENCIES_OF_TYPE",
                            "EFFECT_PURCHASE_PRODUCTION_IN_CITY",
                            "EFFECT_REPLACE_PLAYER_GOVERNMENT_SLOT_TYPE",
                            "EFFECT_RESTORE_UNIT_MOVEMENT",
                            "EFFECT_RIVER_ADJACENCY",
                            "EFFECT_SETTLED_FOREIGN_CONTINENT_UNIT_CLASS",
                            "EFFECT_STEAL_POP_ON_PLOT_TO_CREATE_UNIT",
                            "EFFECT_TERRAIN_ADJACENCY",
                            "EFFECT_TRADE_ROUTE_CANCEL",
                            "EFFECT_TRADE_ROUTE_DISABLE",
                            "EFFECT_TREAT_CAPITAL_AS_HOLY_CITY",
                            "EFFECT_TREAT_HOLY_SITE_AS_HOLY_CITY",
                            "EFFECT_TRIGGER_GAME_MECHANIC",
                            "EFFECT_UNIT_TELEPORT",
                            "EFFECT_UNIT_TRANSFER_CITY_AS_GIFT_AND_APPLY_MODIFIER"
                        ],
                        "type": "string"
                    },
                    "Arguments": {
                        "$ref": "#/definitions/Record<\"Member\"|\"NoSpread\"|\"VictoryResolution\"|\"HasBonus\"|\"CivicType\"|\"Score\"|\"ModifierId\"|\"BetterMilitaryBonus\"|\"CityGainLowerBound\"|\"PerXItems\"|\"Prohibited\"|\"Tag\"|\"UseAdvancedCoastalRaid\"|\"UnitType\"|\"Corps\"|\"FavorAmount\"|\"KeepOverflow\"|\"Accumulates\"|\"TopMilitaryBonus\"|\"Disable\"|\"SameEraIntoleranceFlatBonus\"|\"TargetOnly\"|\"CanMove\"|\"Fallout\"|\"DiplomaticYieldSource\"|\"NeverSurpriseWarPenalty\"|\"ReligiousOnly\"|\"CanFight\"|\"Foreign\"|\"YieldChange\"|\"Tourism\"|\"YieldToGrant\"|\"Intercontinental\"|\"MustReplaceImprovement\"|\"CanRaid\"|\"ApplyImmediately\"|\"Delta\"|\"Action\"|\"TargetLargeCityPercentage\"|\"DisappointingHolySitePercentage\"|\"PromotionClass2\"|\"HighThreshold\"|\"Favored\"|\"Disabled\"|\"IsWonder\"|\"Offense\"|\"TargetHolySitePercentage\"|\"Destination\"|\"Extract\"|\"UnitProductionPercent\"|\"Source\"|\"Discount\"|\"MaxPercent\"|\"ScorePerCity\"|\"YieldTypeToMirror\"|\"Type\"|\"RouteType\"|\"StartEra\"|\"IncrementTurns\"|\"RecentSurpriseWarBonus\"|\"ReductionValue\"|\"Banned\"|\"AmountPerIncident\"|\"Enabled\"|\"WhichEffect\"|\"Enter\"|\"Turns\"|\"EscortMobility\"|\"YieldTypeToGrant\"|\"TopRankingDiploMod\"|\"LandVictorySpread\"|\"EndEra\"|\"AbilityType\"|\"UniqueOverride\"|\"HighPopulationThreshold\"|\"ReligiousCombat\"|\"Experience\"|\"DiplomaticAction\"|\"Scale\"|\"LowThreshold\"|\"HighScoreThreshold\"|\"TurnsActive\"|\"InternationalMajors\"|\"UnitAbilityType\"|\"BeliefYieldType\"|\"EachSurpriseWarBonus\"|\"Increment\"|\"StackWithOtherDiploYieldModifiers\"|\"EntireCity\"|\"GreatPersonClass\"|\"Valid\"|\"CityStatesOnly\"|\"GreatWorkSlotType\"|\"DiploModPerSpaceport\"|\"YieldType\"|\"NoRemove\"|\"Exert\"|\"RealismSettingType\"|\"UnitPromotionClassType\"|\"DefenseValue\"|\"GreatPersonClassType\"|\"DiploModPerSpaceProject\"|\"TerrainType\"|\"InitialValue\"|\"AvoidedWarPenalty\"|\"MaxWarDeclaredBonus\"|\"ResourceType\"|\"TechCivicsPerYield\"|\"TilesRequired\"|\"MinRange\"|\"Access\"|\"SpreadMultiplier\"|\"NewOwner\"|\"ModifierPerKeptPledge\"|\"MaxPositiveModifier\"|\"UnitCostPercent\"|\"CityGainUpperBound\"|\"NoTradePenalty\"|\"Enemy\"|\"ConvertsCity\"|\"MaxDiploModifierMagnitude\"|\"TechEnabledSpreadMultiplier\"|\"DiploModForCircumnavigation\"|\"Founder\"|\"PolicyType\"|\"PenaltyPerOccupiedCity\"|\"AllowUniqueOverride\"|\"Value\"|\"ShareVis\"|\"TileImprovementPreferenceValue\"|\"ImprovementType\"|\"IncrementValue\"|\"ForestPlacedValue\"|\"ReplacesAll\"|\"NoHousing\"|\"PercentageActive\"|\"RequiredAppeal\"|\"Bonus\"|\"GoodyHutImprovementType\"|\"Tooltip\"|\"MinimumEra\"|\"PercentOfGrievances\"|\"CanAttack\"|\"PercentOfGrievancesDelta\"|\"BonusIfNotOriginalOwner\"|\"GovernorType\"|\"AlwaysLoyal\"|\"PlotFeatureRemovedValue\"|\"GovernmentSlotType\"|\"Amount\"|\"ScorePerStep\"|\"HiddenAgenda\"|\"StatementKey\"|\"CanCapture\"|\"CanPurchase\"|\"BonusType\"|\"YieldBasedOnAppeal\"|\"EmergencyType\"|\"BetterTerritoryBonus\"|\"PaidForPeacePenalty\"|\"AddedGovernmentSlotType\"|\"ForeignCities\"|\"Available\"|\"LowScoreThreshold\"|\"Multiplier\"|\"ProjectType\"|\"IncludeWonder\"|\"MechanicName\"|\"MaxTilesSmallIsland\"|\"UnitPromotionClass\"|\"DeltaWithOpponent\"|\"InternationalMinors\"|\"Neutralize\"|\"IncludeCivilian\"|\"SimpleModifierDescription\"|\"PlotFeatureRemovalValue\"|\"Domestic\"|\"PromotionClass\"|\"Skip\"|\"ModifierPerKeptPromise\"|\"NoReduction\"|\"Range\"|\"AddAmenity\"|\"Stack\"|\"Adopt\"|\"ResourceUsageType\"|\"CivilizationType\"|\"NoFinishMoves\"|\"Origin\"|\"DomainType\"|\"PlunderType\"|\"DistrictType\"|\"Improvement\"|\"TechType\"|\"ImmediateTradingPost\"|\"DisappointingLargeCityPercentage\"|\"MajorWarBonus\"|\"ScalingFactor\"|\"NoDamage\"|\"UnitDomain\"|\"PromotionClass1\"|\"Protected\"|\"Percent\"|\"NationalParkConstructionValue\"|\"ModifierPerTransgression\"|\"ThresholdPercent\"|\"YieldToBaseOn\"|\"BuildingType\"|\"DiplomacyKey\"|\"CanDrop\"|\"Multiplicative\"|\"PaidForPeacePenaltyTurnsToFadeOut\"|\"Amenities\"|\"MaxEffectMagnitude\"|\"NoPenalties\"|\"MaxTilesMediumIsland\"|\"UseAdvancedPillaging\"|\"TradeBonus\"|\"AffectDestination\"|\"GreatWorkObjectType\"|\"DifficultyOffset\"|\"Blast\"|\"MinScore\"|\"CorpsPrereqCivic\"|\"SourceType\"|\"SinceWarPenaltyTurns\"|\"Followers\"|\"ReductionTurns\"|\"MinimumCount\"|\"MinPromotedUnits\"|\"NumSteps\"|\"ReplacedGovernmentSlotType\"|\"BottomPercentage\"|\"MaxTilesLargeIsland\"|\"Converts\"|\"OnlyInboundTrade\"|\"MaxValue\"|\"GainTileRadius\"|\"IntoleranceMultiplier\"|\"AffectOrigin\"|\"DiplomaticActionType\"|\"Prevent\"|\"CanSee\"|\"PromotionType\"|\"ReductionPercent\"|\"AvoidedWarPenaltyTurnsToRampUp\"|\"DomesticCities\"|\"Bypass\"|\"SeeHidden\"|\"OtherPlayers\"|\"AffectLocal\"|\"Hidden\"|\"BonusRate\"|\"WaterDamage\"|\"Domain\"|\"OnlyWhenDefeatedEarlierEraUnit\"|\"BuildingProductionPercent\"|\"Favor\"|\"EachWarDeclaredBonus\"|\"RandomEventType\"|\"StartEraType\"|\"Radius\"|\"Convert\"|\"Interval\"|\"ImprovedRouteLevel\"|\"LowerLimit\"|\"TileImprovementHighThreshold\"|\"BottomRankingDiploMod\"|\"EraType\"|\"CantBuildDiploMod\"|\"NotAtWarPenalty\"|\"FeatureType\"|\"HappinessType\"|\"BanDistrictBuildings\"|\"MilitaryFormationType\"|\"EndEraType\"|\"ForceRetreat\"|\"PercentageDifferencePerStep\"|\"ScoreAllowancePerEra\"|\"ResolutionType\"|\"EnhancingTechType\"|\"EffectType\"|\"LowPopulationThreshold\"|\"Description\"|\"Offensive\"|\"Ignore\"|\"Enable\"|\"NoTourism\"|\"TileImprovementLowThreshold\"|\"AcceptableIslandPercentage\"|\"PercentDefeatedStrength\"|\"Overall\"|\"OperationType\"|\"SurpriseWarDegradeTurns\"|\"Religious\"|\"BonusPerRoute\"|\"Defense\"|\"MaxRange\"|\"OnlyOwnersCity\"|\"TopPercentage\"|\"BoostsWonders\"|\"MessageThrottle\"|\"TechBoost\"|\"MovementOnly\"|\"DistanceChange\"|\"Modifier\"|\"MaxNegativeModifier\"|\"RelicUponDeath\"|\"PropertyName\"|\"TopTerritoryBonus\"|\"TradeValuePerModifierPoint\",{Value?:string|number;Type?:\"ARGTYPE_IDENTITY\"|\"ScaleByGameSpeed\"|\"LinearScaleFromDefaultHandicap\";}>",
                        "description": "Parameters that affect the extent and scope of your modifier's influence."
                    },
                    "SubjectRequirementSet": {
                        "type": "object",
                        "properties": {
                            "RequirementSetType": {
                                "description": "The behaviour used when qualifying the requirements of this RequirementSet.\n- `REQUIREMENTSET_TEST_ALL`: All requirements must evaluate to true\n- `REQUIREMENTSET_TEST_ANY`: Any requirement(s) must evaluate to true",
                                "enum": [
                                    "REQUIREMENTSET_TEST_ALL",
                                    "REQUIREMENTSET_TEST_ANY"
                                ],
                                "type": "string"
                            },
                            "Requirements": {
                                "description": "List of requirements that will be apart of this set.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "RequirementType": {
                                            "description": "The type of check this requirement will perform.",
                                            "enum": [
                                                "REQUIREMENT_ALLIANCE_AT_WAR_WITH_COMBAT_TARGET",
                                                "REQUIREMENT_ALLIANCE_CITY_HAS_TRADE_ROUTE_WITH_ALLY",
                                                "REQUIREMENT_ALLIANCE_SHARES_SECRET_SOCIETY",
                                                "REQUIREMENT_ALLY",
                                                "REQUIREMENT_ALWAYS_MET",
                                                "REQUIREMENT_ATTACKER_PLOT_HAS_ANY_DISTRICT",
                                                "REQUIREMENT_ATTACKER_PLOT_IMPROVEMENT_DEFENSE_STRENGTH",
                                                "REQUIREMENT_ATTACKER_PLOT_IMPROVEMENT_TYPE_MATCHES",
                                                "REQUIREMENT_BUILDING_TAG_MATCHES",
                                                "REQUIREMENT_BUILDING_TYPE_MATCHES",
                                                "REQUIREMENT_CITY_CONVERTED",
                                                "REQUIREMENT_CITY_FOLLOWS_PANTHEON",
                                                "REQUIREMENT_CITY_FOLLOWS_RELIGION",
                                                "REQUIREMENT_CITY_HAS_ANY_WONDER",
                                                "REQUIREMENT_CITY_HAS_BUILDING",
                                                "REQUIREMENT_CITY_HAS_COUNTERSPY",
                                                "REQUIREMENT_CITY_HAS_DISTRICT",
                                                "REQUIREMENT_CITY_HAS_FEATURE",
                                                "REQUIREMENT_CITY_HAS_FULL_LOYALTY",
                                                "REQUIREMENT_CITY_HAS_GARRISON_UNIT",
                                                "REQUIREMENT_CITY_HAS_GOVERNMENT_BUILDING_TIER",
                                                "REQUIREMENT_CITY_HAS_GOVERNOR",
                                                "REQUIREMENT_CITY_HAS_GOVERNOR_WITH_X_TITLES",
                                                "REQUIREMENT_CITY_HAS_HIGH_ADJACENCY_DISTRICT",
                                                "REQUIREMENT_CITY_HAS_NATIONAL_PARK",
                                                "REQUIREMENT_CITY_HAS_RESOURCE_TYPE_IMPROVED",
                                                "REQUIREMENT_CITY_HAS_SPECIFIC_GOVERNOR_PROMOTION_TYPE",
                                                "REQUIREMENT_CITY_HAS_X_FEATURE_TYPE",
                                                "REQUIREMENT_CITY_HAS_X_POPULATION",
                                                "REQUIREMENT_CITY_HAS_X_SPECIALTY_DISTRICTS",
                                                "REQUIREMENT_CITY_HAS_X_TERRAIN_TYPE",
                                                "REQUIREMENT_CITY_IS_CAPITAL",
                                                "REQUIREMENT_CITY_IS_ORIGINAL_CAPITAL",
                                                "REQUIREMENT_CITY_IS_ORIGINAL_OWNER",
                                                "REQUIREMENT_CITY_IS_OWNER_CAPITAL_CONTINENT",
                                                "REQUIREMENT_CITY_IS_POWERED",
                                                "REQUIREMENT_CITY_IS_PRODUCING_PROJECT",
                                                "REQUIREMENT_CITY_LIBERATED",
                                                "REQUIREMENT_CITY_LOCATION_MATCHES",
                                                "REQUIREMENT_CITY_OCCUPIED",
                                                "REQUIREMENT_CITY_OCCUPIED_FRIEND",
                                                "REQUIREMENT_CITY_OWNER_ALLY_AT_WAR",
                                                "REQUIREMENT_CITY_RAZED",
                                                "REQUIREMENT_CITY_TRANSFER_TYPE_MATCHES",
                                                "REQUIREMENT_CIVILIZATION_LEVEL",
                                                "REQUIREMENT_CIV_TAG_MATCHES",
                                                "REQUIREMENT_CIV_TYPE_MATCHES",
                                                "REQUIREMENT_COLLECTION_ALL_MET",
                                                "REQUIREMENT_COLLECTION_ANY_MET",
                                                "REQUIREMENT_COLLECTION_COUNT_ATLEAST",
                                                "REQUIREMENT_COLLECTION_COUNT_EQUALS",
                                                "REQUIREMENT_COLLECTION_COUNT_GREATERTHAN",
                                                "REQUIREMENT_COMBAT_ATTACKER_IS_EMERGENCY_MEMBER",
                                                "REQUIREMENT_COMBAT_ATTACKER_IS_EMERGENCY_MEMBER_WITH_SCORE",
                                                "REQUIREMENT_COMBAT_ATTACKER_IS_PLAYER",
                                                "REQUIREMENT_COMBAT_DEFENDER_IS_EMERGENCY_MEMBER",
                                                "REQUIREMENT_COMBAT_DEFENDER_IS_EMERGENCY_MEMBER_WITH_SCORE",
                                                "REQUIREMENT_COMBAT_DEFENDER_IS_PLAYER",
                                                "REQUIREMENT_COMBAT_ENEMY_NOT_ALLIANCE_RELIGION",
                                                "REQUIREMENT_COMBAT_OTHER_PLAYER_IS_HUMAN",
                                                "REQUIREMENT_COMBAT_RESULTS_ATTACKING_UNIT_HAS_TAG",
                                                "REQUIREMENT_COMBAT_RESULTS_DEFENDER_IS_DISTRICT",
                                                "REQUIREMENT_COMBAT_RESULTS_UNIT_DIED",
                                                "REQUIREMENT_COMBAT_TYPE_MATCHES",
                                                "REQUIREMENT_COMBAT_VERSUS_TYPE_MATCHES",
                                                "REQUIREMENT_CULTURE_BOMBED",
                                                "REQUIREMENT_DECLARED_FRIEND",
                                                "REQUIREMENT_DEFENSIVE_PACT",
                                                "REQUIREMENT_DELEGATION",
                                                "REQUIREMENT_DEMAND_RECEIVED",
                                                "REQUIREMENT_DENOUNCED",
                                                "REQUIREMENT_DENOUNCED_FRIEND",
                                                "REQUIREMENT_DISTRICT_HAS_BUILDING",
                                                "REQUIREMENT_DISTRICT_TAG_MATCHES",
                                                "REQUIREMENT_DISTRICT_TYPE_MATCHES",
                                                "REQUIREMENT_ERA_IS",
                                                "REQUIREMENT_ESPIONAGE_DETECTED",
                                                "REQUIREMENT_FOUNDED_NO_RELIGION",
                                                "REQUIREMENT_GAME_CLIMATE_CHANGE_LEVEL_AT_LEAST",
                                                "REQUIREMENT_GAME_ERA_ATLEAST",
                                                "REQUIREMENT_GAME_ERA_ATLEAST_EXPANSION",
                                                "REQUIREMENT_GAME_ERA_ATMOST",
                                                "REQUIREMENT_GAME_ERA_ATMOST_EXPANSION",
                                                "REQUIREMENT_GAME_ERA_IS",
                                                "REQUIREMENT_GAME_HAS_CIVILIZATION_OR_LEADER_TRAIT",
                                                "REQUIREMENT_GAME_IS_MULTIPLAYER",
                                                "REQUIREMENT_GAME_TURN_ATLEAST",
                                                "REQUIREMENT_GAME_TURN_MAX_REACHED",
                                                "REQUIREMENT_GAME_VICTORY_ENABLED",
                                                "REQUIREMENT_GREAT_PERSON_TYPE_MATCHES",
                                                "REQUIREMENT_HAD_FRIENDLY_MEETING",
                                                "REQUIREMENT_LEADER_TAG_MATCHES",
                                                "REQUIREMENT_LEADER_TYPE_MATCHES",
                                                "REQUIREMENT_MAP_HAS_FEATURE",
                                                "REQUIREMENT_MET",
                                                "REQUIREMENT_NEAR_CULTURE_BORDER",
                                                "REQUIREMENT_NEAR_RELIGIOUS_CITY",
                                                "REQUIREMENT_NEVER_MET",
                                                "REQUIREMENT_NOT_MET",
                                                "REQUIREMENT_OPEN_BORDERS",
                                                "REQUIREMENT_OPPONENT_ERA_AGE_MATCHES",
                                                "REQUIREMENT_OPPONENT_ERA_AT_LEAST",
                                                "REQUIREMENT_OPPONENT_IS_BARBARIAN",
                                                "REQUIREMENT_OPPONENT_IS_DISTRICT",
                                                "REQUIREMENT_OPPONENT_IS_FORTIFIED",
                                                "REQUIREMENT_OPPONENT_IS_FREE_CITY",
                                                "REQUIREMENT_OPPONENT_IS_MINOR_CIV",
                                                "REQUIREMENT_OPPONENT_IS_OTHER_RELIGION",
                                                "REQUIREMENT_OPPONENT_IS_STRONGER",
                                                "REQUIREMENT_OPPONENT_IS_WOUNDED",
                                                "REQUIREMENT_OPPONENT_UNIT_DOMAIN_MATCHES",
                                                "REQUIREMENT_OPPONENT_UNIT_PROMOTION_CLASS_MATCHES",
                                                "REQUIREMENT_OPPONENT_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_OPPONENT_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_OPPONENT_WAS_KILLED",
                                                "REQUIREMENT_PLAYER_ALWAYS_ALLOWED_COMMEMORATION_QUEST",
                                                "REQUIREMENT_PLAYER_ATTACKED_CONTINENT",
                                                "REQUIREMENT_PLAYER_AT_WAR_AND_HAS_MET",
                                                "REQUIREMENT_PLAYER_AT_WAR_WITH_EMERGENCY_MEMBER",
                                                "REQUIREMENT_PLAYER_AT_WAR_WITH_NEIGHBOR",
                                                "REQUIREMENT_PLAYER_AVERAGE_WALL_LEVEL_THRESHOLD",
                                                "REQUIREMENT_PLAYER_BUILT_NEW_WONDER",
                                                "REQUIREMENT_PLAYER_BUILT_WONDER",
                                                "REQUIREMENT_PLAYER_CAN_EVER_EARN_GREAT_PERSON_CLASS",
                                                "REQUIREMENT_PLAYER_CITY_STATE_PROTECTOR",
                                                "REQUIREMENT_PLAYER_CIVILIZED",
                                                "REQUIREMENT_PLAYER_COASTAL_CITIES",
                                                "REQUIREMENT_PLAYER_COMPETING_MINORS",
                                                "REQUIREMENT_PLAYER_CONQUERED_X_CITY_STATES",
                                                "REQUIREMENT_PLAYER_CONQUERING_ALLYING_MINORS",
                                                "REQUIREMENT_PLAYER_DEAL_ENACTED",
                                                "REQUIREMENT_PLAYER_DECLARED_WAR",
                                                "REQUIREMENT_PLAYER_DEFAULT_DEFEAT",
                                                "REQUIREMENT_PLAYER_DIPLO_VP_LEAD",
                                                "REQUIREMENT_PLAYER_DISTRICT_THRESHOLD",
                                                "REQUIREMENT_PLAYER_DOMINATION_VICTORY",
                                                "REQUIREMENT_PLAYER_ENVIRONMENT",
                                                "REQUIREMENT_PLAYER_ERA_AT_LEAST",
                                                "REQUIREMENT_PLAYER_EXPLOITATION",
                                                "REQUIREMENT_PLAYER_EXPLORATION_LEAD",
                                                "REQUIREMENT_PLAYER_FAVOR_LEAD",
                                                "REQUIREMENT_PLAYER_FINISHED_RESEARCH",
                                                "REQUIREMENT_PLAYER_FOUNDED_NO_RELIGION",
                                                "REQUIREMENT_PLAYER_FOUNDED_OUR_RELIGION",
                                                "REQUIREMENT_PLAYER_FOUNDED_RELIGION_WITH_BELIEF",
                                                "REQUIREMENT_PLAYER_GOT_FIRST_PLACE_IN_EMERGENCY",
                                                "REQUIREMENT_PLAYER_GOT_GREAT_PERSON",
                                                "REQUIREMENT_PLAYER_GOT_HIGH_TIER_SCORE_IN_EMERGENCY",
                                                "REQUIREMENT_PLAYER_GOT_LOW_TIER_SCORE_IN_EMERGENCY",
                                                "REQUIREMENT_PLAYER_HANDICAP_AT_OR_ABOVE",
                                                "REQUIREMENT_PLAYER_HAPPINESS_LEAD",
                                                "REQUIREMENT_PLAYER_HAS_ACTIVE_ALLIANCE_OF_AT_LEAST_LEVEL",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_DIPLO_VIS_LEVEL",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_NUMBER_CITIES",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_NUM_BUILDINGS",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_NUM_MILITARY_UNITS",
                                                "REQUIREMENT_PLAYER_HAS_BUILDING",
                                                "REQUIREMENT_PLAYER_HAS_CITY_ON_EMERGENCY_PLOT_CONTINENT",
                                                "REQUIREMENT_PLAYER_HAS_CIVIC",
                                                "REQUIREMENT_PLAYER_HAS_CIVILIZATION_OR_LEADER_TRAIT",
                                                "REQUIREMENT_PLAYER_HAS_COMPLETED_PROJECT",
                                                "REQUIREMENT_PLAYER_HAS_COMP_STOMP_VICTORY",
                                                "REQUIREMENT_PLAYER_HAS_DARK_AGE",
                                                "REQUIREMENT_PLAYER_HAS_DESIRED_LUXURY",
                                                "REQUIREMENT_PLAYER_HAS_DISTRICT",
                                                "REQUIREMENT_PLAYER_HAS_ENVOY_WITH_EMERGENCY_DATA_PLAYER",
                                                "REQUIREMENT_PLAYER_HAS_FEATURE",
                                                "REQUIREMENT_PLAYER_HAS_GIVEN_INFLUENCE_TOKENS",
                                                "REQUIREMENT_PLAYER_HAS_GIVEN_MOST_INFLUENCE_TOKENS",
                                                "REQUIREMENT_PLAYER_HAS_GOLDEN_AGE",
                                                "REQUIREMENT_PLAYER_HAS_GOLDEN_HORDE_VICTORY",
                                                "REQUIREMENT_PLAYER_HAS_GREAT_PERSON",
                                                "REQUIREMENT_PLAYER_HAS_HIGHEST_SCORE",
                                                "REQUIREMENT_PLAYER_HAS_IMPROVEMENT",
                                                "REQUIREMENT_PLAYER_HAS_MANY_ALLIANCES",
                                                "REQUIREMENT_PLAYER_HAS_MET",
                                                "REQUIREMENT_PLAYER_HAS_MOST_PROMOTION_CLASS",
                                                "REQUIREMENT_PLAYER_HAS_MOST_RELIGION_FOLLOWERS",
                                                "REQUIREMENT_PLAYER_HAS_MOST_TERRITORY",
                                                "REQUIREMENT_PLAYER_HAS_MOST_WMD_CITY_HITS",
                                                "REQUIREMENT_PLAYER_HAS_PANTHEON",
                                                "REQUIREMENT_PLAYER_HAS_RESOURCE_IMPROVED",
                                                "REQUIREMENT_PLAYER_HAS_RESOURCE_OWNED",
                                                "REQUIREMENT_PLAYER_HAS_RESOURCE_VISIBILITY",
                                                "REQUIREMENT_PLAYER_HAS_SAME_GOVERNMENT",
                                                "REQUIREMENT_PLAYER_HAS_SCIENCE_VICTORY_POINTS",
                                                "REQUIREMENT_PLAYER_HAS_TECHNOLOGY",
                                                "REQUIREMENT_PLAYER_INCOME_LEAD",
                                                "REQUIREMENT_PLAYER_IN_JOINT_EMERGENCY",
                                                "REQUIREMENT_PLAYER_IS_ATTACKING",
                                                "REQUIREMENT_PLAYER_IS_AT_LEAST_ALLIANCE_LEVEL_WITH_EMERGENCY_PLAYER",
                                                "REQUIREMENT_PLAYER_IS_AT_PEACE",
                                                "REQUIREMENT_PLAYER_IS_AT_PEACE_WITH_ALL_MAJORS",
                                                "REQUIREMENT_PLAYER_IS_AT_WAR",
                                                "REQUIREMENT_PLAYER_IS_BARBARIAN",
                                                "REQUIREMENT_PLAYER_IS_CLOSE_TO_VICTORY",
                                                "REQUIREMENT_PLAYER_IS_DIFFERENT_SECRET_SOCIETY",
                                                "REQUIREMENT_PLAYER_IS_EMERGENCY_MEMBER_WITH_SCORE",
                                                "REQUIREMENT_PLAYER_IS_EMERGENCY_TARGET",
                                                "REQUIREMENT_PLAYER_IS_HUMAN",
                                                "REQUIREMENT_PLAYER_IS_MAJOR",
                                                "REQUIREMENT_PLAYER_IS_MINOR",
                                                "REQUIREMENT_PLAYER_IS_NEIGHBOR",
                                                "REQUIREMENT_PLAYER_IS_NOT_WARMONGER",
                                                "REQUIREMENT_PLAYER_IS_RELIGION_FOUNDER",
                                                "REQUIREMENT_PLAYER_IS_SAME_RELIGION",
                                                "REQUIREMENT_PLAYER_IS_SAME_SECRET_SOCIETY",
                                                "REQUIREMENT_PLAYER_IS_SAME_SEX",
                                                "REQUIREMENT_PLAYER_IS_SHARING_INFO",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN_BONUS_ENABLED",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN_OF_X",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN_X_TYPE",
                                                "REQUIREMENT_PLAYER_IS_TEAM_MEMBER",
                                                "REQUIREMENT_PLAYER_IS_WINNING_ANY_VICTORY",
                                                "REQUIREMENT_PLAYER_LEADER_TAG_MATCHES",
                                                "REQUIREMENT_PLAYER_LEADER_TYPE_MATCHES",
                                                "REQUIREMENT_PLAYER_MAJORITY_RELIGION_IS_OWNER",
                                                "REQUIREMENT_PLAYER_MEETS_SCORE_THRESHOLD",
                                                "REQUIREMENT_PLAYER_MET_X_TURNS_AGO",
                                                "REQUIREMENT_PLAYER_MILITARY_STRENGTH_LEAD",
                                                "REQUIREMENT_PLAYER_MOUNTAIN_CITIES",
                                                "REQUIREMENT_PLAYER_NOT_COMPETING_MINORS",
                                                "REQUIREMENT_PLAYER_NOT_INVOLVED_MINORS",
                                                "REQUIREMENT_PLAYER_NUKE_LOVER",
                                                "REQUIREMENT_PLAYER_ON_NON_HOME_CONTINENT",
                                                "REQUIREMENT_PLAYER_OWNS_OBJECT",
                                                "REQUIREMENT_PLAYER_PEACEFUL_ON_CONTINENT",
                                                "REQUIREMENT_PLAYER_PILLAGE_LEAD",
                                                "REQUIREMENT_PLAYER_POPULATION_LEAD",
                                                "REQUIREMENT_PLAYER_RELIGION_NOT_RECEIVED",
                                                "REQUIREMENT_PLAYER_RELIGION_RECEIVED",
                                                "REQUIREMENT_PLAYER_SHARES_HOME_CONTINENT",
                                                "REQUIREMENT_PLAYER_STANDING_ARMY_LEAD",
                                                "REQUIREMENT_PLAYER_TEAM_MEMBER",
                                                "REQUIREMENT_PLAYER_TOURISM_LEAD",
                                                "REQUIREMENT_PLAYER_TURN_STARTED",
                                                "REQUIREMENT_PLAYER_TYPE_MATCHES",
                                                "REQUIREMENT_PLAYER_WITH_SHIELD_OR_ON_IT",
                                                "REQUIREMENT_PLAYER_YIELD_LEAD",
                                                "REQUIREMENT_PLOT_ADJACENT_BUILDING_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_DISTRICT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_FEATURE_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_FRIENDLY_TERRITORY",
                                                "REQUIREMENT_PLOT_ADJACENT_FRIENDLY_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_FRIENDLY_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_IMPROVEMENT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_RESOURCE_CLASS_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_TERRAIN_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_COAST",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_LAKE",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_MOUNTAIN",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_NATURAL_WONDER",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_OWNER",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_OWNER_AT_WAR",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_RIVER",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_WONDER",
                                                "REQUIREMENT_PLOT_ADJACENT_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ANY_ADJACENT_RESOURCE",
                                                "REQUIREMENT_PLOT_DISTRICT_IS_DEFENDED",
                                                "REQUIREMENT_PLOT_DISTRICT_IS_FUNCTIONING",
                                                "REQUIREMENT_PLOT_DISTRICT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_DISTRICT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_FEATURE_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_FEATURE_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_HAS_ANY_DISTRICT",
                                                "REQUIREMENT_PLOT_HAS_ANY_FEATURE",
                                                "REQUIREMENT_PLOT_HAS_ANY_IMPROVEMENT",
                                                "REQUIREMENT_PLOT_HAS_ANY_RESOURCE",
                                                "REQUIREMENT_PLOT_HAS_FALLOUT",
                                                "REQUIREMENT_PLOT_IMPROVED_RESOURCE_CLASS_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_IMPROVEMENT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_IMPROVEMENT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_IS_APPEAL_BETWEEN",
                                                "REQUIREMENT_PLOT_IS_COAST",
                                                "REQUIREMENT_PLOT_IS_COASTAL_LAND",
                                                "REQUIREMENT_PLOT_IS_FRESH_WATER",
                                                "REQUIREMENT_PLOT_IS_HILLS",
                                                "REQUIREMENT_PLOT_IS_IMPASSABLE",
                                                "REQUIREMENT_PLOT_IS_LAKE",
                                                "REQUIREMENT_PLOT_IS_MOUNTAIN",
                                                "REQUIREMENT_PLOT_IS_OWNER_CAPITAL_CONTINENT",
                                                "REQUIREMENT_PLOT_NEARBY_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_NEAR_CAPITAL",
                                                "REQUIREMENT_PLOT_PROPERTY_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_CLASS_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_VISIBLE",
                                                "REQUIREMENT_PLOT_TERRAIN_CLASS_MATCHES",
                                                "REQUIREMENT_PLOT_TERRAIN_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_UNIT_CITY_HAS_ANY_DISTRICT",
                                                "REQUIREMENT_PLOT_UNIT_CITY_HAS_DISTRICT_SAME_OWNER",
                                                "REQUIREMENT_PLOT_UNIT_EMBARKED",
                                                "REQUIREMENT_PLOT_UNIT_FLANKED",
                                                "REQUIREMENT_PLOT_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_WONDER_IS_ERA",
                                                "REQUIREMENT_RANDOM_VALUE_LESS_THAN_OR_EQUAL_TO",
                                                "REQUIREMENT_REQUIREMENTSET_IS_MET",
                                                "REQUIREMENT_RESIDENT_EMBASSY",
                                                "REQUIREMENT_SPECIFIC_LEADER_ELIMINATED",
                                                "REQUIREMENT_TEAM_CONQUERED_X_CITY_STATES",
                                                "REQUIREMENT_TEAM_DIPLOMATIC_VICTORY",
                                                "REQUIREMENT_TEAM_DOMINATION_VICTORY",
                                                "REQUIREMENT_TEAM_HAS_ANCIENT_RIVALS_VICTORY",
                                                "REQUIREMENT_TEAM_HAS_HIGHEST_SCORE",
                                                "REQUIREMENT_TEAM_HAS_MOST_PROMOTION_CLASS",
                                                "REQUIREMENT_TEAM_HAS_MOST_RELIGION_FOLLOWERS",
                                                "REQUIREMENT_TEAM_HAS_MOST_TERRITORY",
                                                "REQUIREMENT_TEAM_HAS_MOST_WMD_CITY_HITS",
                                                "REQUIREMENT_TOURISTS_EXCEED_STAYCATIONERS",
                                                "REQUIREMENT_TRADE_ROUTE_BETWEEN_ALLIANCE_PARTNERS",
                                                "REQUIREMENT_TRADE_ROUTE_BETWEEN_EMERGENCY_MEMBERS",
                                                "REQUIREMENT_TRADE_ROUTE_BETWEEN_EMERGENCY_MEMBER_AND_TARGET",
                                                "REQUIREMENT_TRADE_ROUTE_DESTINATION_IS_CITY_STATE",
                                                "REQUIREMENT_UNITDEATH_KILLED_BY_SPECIFIC_UNIT_TYPE",
                                                "REQUIREMENT_UNITDEATH_KILLED_BY_UNIT",
                                                "REQUIREMENT_UNITDEATH_SPECIFIC_UNIT_TYPE",
                                                "REQUIREMENT_UNITDEATH_X_TURNS_AGO",
                                                "REQUIREMENT_UNIT_ADJACENT_TO_OWNER_TERRITORY",
                                                "REQUIREMENT_UNIT_DAMAGE_MINIMUM",
                                                "REQUIREMENT_UNIT_DOMAIN_MATCHES",
                                                "REQUIREMENT_UNIT_EMBARKED",
                                                "REQUIREMENT_UNIT_ERA_TYPE_MATCHES",
                                                "REQUIREMENT_UNIT_FORMATION_CLASS_MATCHES",
                                                "REQUIREMENT_UNIT_HAS_ABILITY",
                                                "REQUIREMENT_UNIT_HAS_PROMOTION",
                                                "REQUIREMENT_UNIT_IN_EMERGENCY_TARGET_TERRITORY",
                                                "REQUIREMENT_UNIT_IN_ENEMY_TERRITORY",
                                                "REQUIREMENT_UNIT_IN_FORMATION",
                                                "REQUIREMENT_UNIT_IN_OWNER_TERRITORY",
                                                "REQUIREMENT_UNIT_IS_BARBARIAN",
                                                "REQUIREMENT_UNIT_IS_COMBAT",
                                                "REQUIREMENT_UNIT_IS_LEVIED",
                                                "REQUIREMENT_UNIT_ON_COAST",
                                                "REQUIREMENT_UNIT_ON_HOME_CONTINENT",
                                                "REQUIREMENT_UNIT_PLOT_HAS_NATIONAL_PARK",
                                                "REQUIREMENT_UNIT_PROMOTION_CLASS_MATCHES",
                                                "REQUIREMENT_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_UNIT_TYPE_MATCHES"
                                            ],
                                            "type": "string"
                                        },
                                        "Likeliness": {
                                            "description": "The percent chance the requirement will resolve when conditions are met.",
                                            "type": "number"
                                        },
                                        "Impact": {
                                            "type": "boolean"
                                        },
                                        "Inverse": {
                                            "type": "boolean"
                                        },
                                        "Reverse": {
                                            "type": "boolean"
                                        },
                                        "Persistent": {
                                            "type": "boolean"
                                        },
                                        "ProgressWeight": {
                                            "type": "boolean"
                                        },
                                        "Triggered": {
                                            "type": "boolean"
                                        },
                                        "Arguments": {
                                            "$ref": "#/definitions/Record<\"CivicType\"|\"Tag\"|\"UnitType\"|\"Type\"|\"UnitAbilityType\"|\"GreatPersonClass\"|\"YieldType\"|\"GreatPersonClassType\"|\"TerrainType\"|\"ResourceType\"|\"MinRange\"|\"ImprovementType\"|\"Amount\"|\"ProjectType\"|\"UnitPromotionClass\"|\"PromotionClass\"|\"CivilizationType\"|\"DomainType\"|\"DistrictType\"|\"UnitDomain\"|\"BuildingType\"|\"MinimumCount\"|\"EraType\"|\"FeatureType\"|\"MaxRange\"|\"OnlyOwnersCity\"|\"PropertyName\"|\"ExplorationRatio\"|\"BeliefType\"|\"GreatPersonRatio\"|\"ExcludeEmergencies\"|\"PropertyMinimum\"|\"FoundingDelay\"|\"MinDistrictsNeeded\"|\"MaxGameTurn\"|\"GovernorPromotionType\"|\"Established\"|\"LowerBound\"|\"VictoryType\"|\"AgreementValue\"|\"DistrictPercentThreshold\"|\"PercentCompeting\"|\"PlayerIsVictorious\"|\"MinimumCompletions\"|\"NoUpperBound\"|\"WonderRatio\"|\"CollectionType\"|\"YieldRatio\"|\"MinimumAppeal\"|\"MinGameEra\"|\"GreatPersonIndividual\"|\"ExactMatch\"|\"ExtraIncrementHighestDifficulty\"|\"BuiltNukeValue\"|\"NoLowerBound\"|\"MinimumCities\"|\"Level\"|\"ARGUMENTS\"|\"StrengthRatio\"|\"OwnerCivLevel\"|\"AboveThreshold\"|\"TechCivicDifferential\"|\"Handicap\"|\"FormationClass\"|\"ChecKForFewer\"|\"OpponentCivLevel\"|\"MaximumAppeal\"|\"MinimumDelta\"|\"Water\"|\"TurnsAgo\"|\"BelowPercentage\"|\"Hills\"|\"MaxDistance\"|\"MinGameTurn\"|\"CombatType\"|\"TraitType\"|\"IgnoreCities\"|\"ClearedCampValue\"|\"TransferType\"|\"TurnsToIgnoreLiberatorTroops\"|\"WarType\"|\"ScoreLowestDifficulty\"|\"Ratio\"|\"Percentage\"|\"LayerIndex\"|\"UsedNukeValue\"|\"SharingInfoWell\"|\"TotalScoreThreshold\"|\"GracePeriod\"|\"MinTurns\"|\"PopulationRatio\"|\"Y\"|\"GovernmentBuildingTier\"|\"BelowThreshold\"|\"AdjustForGameSpeed\"|\"MinDistance\"|\"RequirementSetId\"|\"CampToCityDistance\"|\"HappinessRatio\"|\"MinimumEraType\"|\"CombatVersusType\"|\"MustBeFunctioning\"|\"IgnoreUnits\"|\"WhileMet\"|\"MilitaryFormation\"|\"ResourceClassType\"|\"IncludeCenter\"|\"Count\"|\"TechnologyType\"|\"IgnoredCampValue\"|\"HostileOnly\"|\"AverageWallLevelThreshold\"|\"IncrementPerDifficulty\"|\"X\"|\"MinimumTokens\"|\"LeaderType\"|\"UpperBound\"|\"DistanceToMountain\"|\"MinOwnerAlliances\"|\"MinimumAmount\"|\"FriendlyCity\"|\"SameOwner\"|\"TerrainClass\",{Value?:string|number;Range?:{Min:string|number;Max:string|number;};Type?:\"ARGTYPE_IDENTITY\"|\"ScaleByGameSpeed\"|\"LinearScaleFromDefaultHandicap\";}>",
                                            "description": "Parameters that can be set to specify the exact conditions of your requirement."
                                        }
                                    },
                                    "required": [
                                        "RequirementType"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "RequirementSetType",
                            "Requirements"
                        ]
                    },
                    "OwnerRequirementSet": {
                        "type": "object",
                        "properties": {
                            "RequirementSetType": {
                                "description": "The behaviour used when qualifying the requirements of this RequirementSet.\n- `REQUIREMENTSET_TEST_ALL`: All requirements must evaluate to true\n- `REQUIREMENTSET_TEST_ANY`: Any requirement(s) must evaluate to true",
                                "enum": [
                                    "REQUIREMENTSET_TEST_ALL",
                                    "REQUIREMENTSET_TEST_ANY"
                                ],
                                "type": "string"
                            },
                            "Requirements": {
                                "description": "List of requirements that will be apart of this set.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "RequirementType": {
                                            "description": "The type of check this requirement will perform.",
                                            "enum": [
                                                "REQUIREMENT_ALLIANCE_AT_WAR_WITH_COMBAT_TARGET",
                                                "REQUIREMENT_ALLIANCE_CITY_HAS_TRADE_ROUTE_WITH_ALLY",
                                                "REQUIREMENT_ALLIANCE_SHARES_SECRET_SOCIETY",
                                                "REQUIREMENT_ALLY",
                                                "REQUIREMENT_ALWAYS_MET",
                                                "REQUIREMENT_ATTACKER_PLOT_HAS_ANY_DISTRICT",
                                                "REQUIREMENT_ATTACKER_PLOT_IMPROVEMENT_DEFENSE_STRENGTH",
                                                "REQUIREMENT_ATTACKER_PLOT_IMPROVEMENT_TYPE_MATCHES",
                                                "REQUIREMENT_BUILDING_TAG_MATCHES",
                                                "REQUIREMENT_BUILDING_TYPE_MATCHES",
                                                "REQUIREMENT_CITY_CONVERTED",
                                                "REQUIREMENT_CITY_FOLLOWS_PANTHEON",
                                                "REQUIREMENT_CITY_FOLLOWS_RELIGION",
                                                "REQUIREMENT_CITY_HAS_ANY_WONDER",
                                                "REQUIREMENT_CITY_HAS_BUILDING",
                                                "REQUIREMENT_CITY_HAS_COUNTERSPY",
                                                "REQUIREMENT_CITY_HAS_DISTRICT",
                                                "REQUIREMENT_CITY_HAS_FEATURE",
                                                "REQUIREMENT_CITY_HAS_FULL_LOYALTY",
                                                "REQUIREMENT_CITY_HAS_GARRISON_UNIT",
                                                "REQUIREMENT_CITY_HAS_GOVERNMENT_BUILDING_TIER",
                                                "REQUIREMENT_CITY_HAS_GOVERNOR",
                                                "REQUIREMENT_CITY_HAS_GOVERNOR_WITH_X_TITLES",
                                                "REQUIREMENT_CITY_HAS_HIGH_ADJACENCY_DISTRICT",
                                                "REQUIREMENT_CITY_HAS_NATIONAL_PARK",
                                                "REQUIREMENT_CITY_HAS_RESOURCE_TYPE_IMPROVED",
                                                "REQUIREMENT_CITY_HAS_SPECIFIC_GOVERNOR_PROMOTION_TYPE",
                                                "REQUIREMENT_CITY_HAS_X_FEATURE_TYPE",
                                                "REQUIREMENT_CITY_HAS_X_POPULATION",
                                                "REQUIREMENT_CITY_HAS_X_SPECIALTY_DISTRICTS",
                                                "REQUIREMENT_CITY_HAS_X_TERRAIN_TYPE",
                                                "REQUIREMENT_CITY_IS_CAPITAL",
                                                "REQUIREMENT_CITY_IS_ORIGINAL_CAPITAL",
                                                "REQUIREMENT_CITY_IS_ORIGINAL_OWNER",
                                                "REQUIREMENT_CITY_IS_OWNER_CAPITAL_CONTINENT",
                                                "REQUIREMENT_CITY_IS_POWERED",
                                                "REQUIREMENT_CITY_IS_PRODUCING_PROJECT",
                                                "REQUIREMENT_CITY_LIBERATED",
                                                "REQUIREMENT_CITY_LOCATION_MATCHES",
                                                "REQUIREMENT_CITY_OCCUPIED",
                                                "REQUIREMENT_CITY_OCCUPIED_FRIEND",
                                                "REQUIREMENT_CITY_OWNER_ALLY_AT_WAR",
                                                "REQUIREMENT_CITY_RAZED",
                                                "REQUIREMENT_CITY_TRANSFER_TYPE_MATCHES",
                                                "REQUIREMENT_CIVILIZATION_LEVEL",
                                                "REQUIREMENT_CIV_TAG_MATCHES",
                                                "REQUIREMENT_CIV_TYPE_MATCHES",
                                                "REQUIREMENT_COLLECTION_ALL_MET",
                                                "REQUIREMENT_COLLECTION_ANY_MET",
                                                "REQUIREMENT_COLLECTION_COUNT_ATLEAST",
                                                "REQUIREMENT_COLLECTION_COUNT_EQUALS",
                                                "REQUIREMENT_COLLECTION_COUNT_GREATERTHAN",
                                                "REQUIREMENT_COMBAT_ATTACKER_IS_EMERGENCY_MEMBER",
                                                "REQUIREMENT_COMBAT_ATTACKER_IS_EMERGENCY_MEMBER_WITH_SCORE",
                                                "REQUIREMENT_COMBAT_ATTACKER_IS_PLAYER",
                                                "REQUIREMENT_COMBAT_DEFENDER_IS_EMERGENCY_MEMBER",
                                                "REQUIREMENT_COMBAT_DEFENDER_IS_EMERGENCY_MEMBER_WITH_SCORE",
                                                "REQUIREMENT_COMBAT_DEFENDER_IS_PLAYER",
                                                "REQUIREMENT_COMBAT_ENEMY_NOT_ALLIANCE_RELIGION",
                                                "REQUIREMENT_COMBAT_OTHER_PLAYER_IS_HUMAN",
                                                "REQUIREMENT_COMBAT_RESULTS_ATTACKING_UNIT_HAS_TAG",
                                                "REQUIREMENT_COMBAT_RESULTS_DEFENDER_IS_DISTRICT",
                                                "REQUIREMENT_COMBAT_RESULTS_UNIT_DIED",
                                                "REQUIREMENT_COMBAT_TYPE_MATCHES",
                                                "REQUIREMENT_COMBAT_VERSUS_TYPE_MATCHES",
                                                "REQUIREMENT_CULTURE_BOMBED",
                                                "REQUIREMENT_DECLARED_FRIEND",
                                                "REQUIREMENT_DEFENSIVE_PACT",
                                                "REQUIREMENT_DELEGATION",
                                                "REQUIREMENT_DEMAND_RECEIVED",
                                                "REQUIREMENT_DENOUNCED",
                                                "REQUIREMENT_DENOUNCED_FRIEND",
                                                "REQUIREMENT_DISTRICT_HAS_BUILDING",
                                                "REQUIREMENT_DISTRICT_TAG_MATCHES",
                                                "REQUIREMENT_DISTRICT_TYPE_MATCHES",
                                                "REQUIREMENT_ERA_IS",
                                                "REQUIREMENT_ESPIONAGE_DETECTED",
                                                "REQUIREMENT_FOUNDED_NO_RELIGION",
                                                "REQUIREMENT_GAME_CLIMATE_CHANGE_LEVEL_AT_LEAST",
                                                "REQUIREMENT_GAME_ERA_ATLEAST",
                                                "REQUIREMENT_GAME_ERA_ATLEAST_EXPANSION",
                                                "REQUIREMENT_GAME_ERA_ATMOST",
                                                "REQUIREMENT_GAME_ERA_ATMOST_EXPANSION",
                                                "REQUIREMENT_GAME_ERA_IS",
                                                "REQUIREMENT_GAME_HAS_CIVILIZATION_OR_LEADER_TRAIT",
                                                "REQUIREMENT_GAME_IS_MULTIPLAYER",
                                                "REQUIREMENT_GAME_TURN_ATLEAST",
                                                "REQUIREMENT_GAME_TURN_MAX_REACHED",
                                                "REQUIREMENT_GAME_VICTORY_ENABLED",
                                                "REQUIREMENT_GREAT_PERSON_TYPE_MATCHES",
                                                "REQUIREMENT_HAD_FRIENDLY_MEETING",
                                                "REQUIREMENT_LEADER_TAG_MATCHES",
                                                "REQUIREMENT_LEADER_TYPE_MATCHES",
                                                "REQUIREMENT_MAP_HAS_FEATURE",
                                                "REQUIREMENT_MET",
                                                "REQUIREMENT_NEAR_CULTURE_BORDER",
                                                "REQUIREMENT_NEAR_RELIGIOUS_CITY",
                                                "REQUIREMENT_NEVER_MET",
                                                "REQUIREMENT_NOT_MET",
                                                "REQUIREMENT_OPEN_BORDERS",
                                                "REQUIREMENT_OPPONENT_ERA_AGE_MATCHES",
                                                "REQUIREMENT_OPPONENT_ERA_AT_LEAST",
                                                "REQUIREMENT_OPPONENT_IS_BARBARIAN",
                                                "REQUIREMENT_OPPONENT_IS_DISTRICT",
                                                "REQUIREMENT_OPPONENT_IS_FORTIFIED",
                                                "REQUIREMENT_OPPONENT_IS_FREE_CITY",
                                                "REQUIREMENT_OPPONENT_IS_MINOR_CIV",
                                                "REQUIREMENT_OPPONENT_IS_OTHER_RELIGION",
                                                "REQUIREMENT_OPPONENT_IS_STRONGER",
                                                "REQUIREMENT_OPPONENT_IS_WOUNDED",
                                                "REQUIREMENT_OPPONENT_UNIT_DOMAIN_MATCHES",
                                                "REQUIREMENT_OPPONENT_UNIT_PROMOTION_CLASS_MATCHES",
                                                "REQUIREMENT_OPPONENT_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_OPPONENT_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_OPPONENT_WAS_KILLED",
                                                "REQUIREMENT_PLAYER_ALWAYS_ALLOWED_COMMEMORATION_QUEST",
                                                "REQUIREMENT_PLAYER_ATTACKED_CONTINENT",
                                                "REQUIREMENT_PLAYER_AT_WAR_AND_HAS_MET",
                                                "REQUIREMENT_PLAYER_AT_WAR_WITH_EMERGENCY_MEMBER",
                                                "REQUIREMENT_PLAYER_AT_WAR_WITH_NEIGHBOR",
                                                "REQUIREMENT_PLAYER_AVERAGE_WALL_LEVEL_THRESHOLD",
                                                "REQUIREMENT_PLAYER_BUILT_NEW_WONDER",
                                                "REQUIREMENT_PLAYER_BUILT_WONDER",
                                                "REQUIREMENT_PLAYER_CAN_EVER_EARN_GREAT_PERSON_CLASS",
                                                "REQUIREMENT_PLAYER_CITY_STATE_PROTECTOR",
                                                "REQUIREMENT_PLAYER_CIVILIZED",
                                                "REQUIREMENT_PLAYER_COASTAL_CITIES",
                                                "REQUIREMENT_PLAYER_COMPETING_MINORS",
                                                "REQUIREMENT_PLAYER_CONQUERED_X_CITY_STATES",
                                                "REQUIREMENT_PLAYER_CONQUERING_ALLYING_MINORS",
                                                "REQUIREMENT_PLAYER_DEAL_ENACTED",
                                                "REQUIREMENT_PLAYER_DECLARED_WAR",
                                                "REQUIREMENT_PLAYER_DEFAULT_DEFEAT",
                                                "REQUIREMENT_PLAYER_DIPLO_VP_LEAD",
                                                "REQUIREMENT_PLAYER_DISTRICT_THRESHOLD",
                                                "REQUIREMENT_PLAYER_DOMINATION_VICTORY",
                                                "REQUIREMENT_PLAYER_ENVIRONMENT",
                                                "REQUIREMENT_PLAYER_ERA_AT_LEAST",
                                                "REQUIREMENT_PLAYER_EXPLOITATION",
                                                "REQUIREMENT_PLAYER_EXPLORATION_LEAD",
                                                "REQUIREMENT_PLAYER_FAVOR_LEAD",
                                                "REQUIREMENT_PLAYER_FINISHED_RESEARCH",
                                                "REQUIREMENT_PLAYER_FOUNDED_NO_RELIGION",
                                                "REQUIREMENT_PLAYER_FOUNDED_OUR_RELIGION",
                                                "REQUIREMENT_PLAYER_FOUNDED_RELIGION_WITH_BELIEF",
                                                "REQUIREMENT_PLAYER_GOT_FIRST_PLACE_IN_EMERGENCY",
                                                "REQUIREMENT_PLAYER_GOT_GREAT_PERSON",
                                                "REQUIREMENT_PLAYER_GOT_HIGH_TIER_SCORE_IN_EMERGENCY",
                                                "REQUIREMENT_PLAYER_GOT_LOW_TIER_SCORE_IN_EMERGENCY",
                                                "REQUIREMENT_PLAYER_HANDICAP_AT_OR_ABOVE",
                                                "REQUIREMENT_PLAYER_HAPPINESS_LEAD",
                                                "REQUIREMENT_PLAYER_HAS_ACTIVE_ALLIANCE_OF_AT_LEAST_LEVEL",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_DIPLO_VIS_LEVEL",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_NUMBER_CITIES",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_NUM_BUILDINGS",
                                                "REQUIREMENT_PLAYER_HAS_AT_LEAST_NUM_MILITARY_UNITS",
                                                "REQUIREMENT_PLAYER_HAS_BUILDING",
                                                "REQUIREMENT_PLAYER_HAS_CITY_ON_EMERGENCY_PLOT_CONTINENT",
                                                "REQUIREMENT_PLAYER_HAS_CIVIC",
                                                "REQUIREMENT_PLAYER_HAS_CIVILIZATION_OR_LEADER_TRAIT",
                                                "REQUIREMENT_PLAYER_HAS_COMPLETED_PROJECT",
                                                "REQUIREMENT_PLAYER_HAS_COMP_STOMP_VICTORY",
                                                "REQUIREMENT_PLAYER_HAS_DARK_AGE",
                                                "REQUIREMENT_PLAYER_HAS_DESIRED_LUXURY",
                                                "REQUIREMENT_PLAYER_HAS_DISTRICT",
                                                "REQUIREMENT_PLAYER_HAS_ENVOY_WITH_EMERGENCY_DATA_PLAYER",
                                                "REQUIREMENT_PLAYER_HAS_FEATURE",
                                                "REQUIREMENT_PLAYER_HAS_GIVEN_INFLUENCE_TOKENS",
                                                "REQUIREMENT_PLAYER_HAS_GIVEN_MOST_INFLUENCE_TOKENS",
                                                "REQUIREMENT_PLAYER_HAS_GOLDEN_AGE",
                                                "REQUIREMENT_PLAYER_HAS_GOLDEN_HORDE_VICTORY",
                                                "REQUIREMENT_PLAYER_HAS_GREAT_PERSON",
                                                "REQUIREMENT_PLAYER_HAS_HIGHEST_SCORE",
                                                "REQUIREMENT_PLAYER_HAS_IMPROVEMENT",
                                                "REQUIREMENT_PLAYER_HAS_MANY_ALLIANCES",
                                                "REQUIREMENT_PLAYER_HAS_MET",
                                                "REQUIREMENT_PLAYER_HAS_MOST_PROMOTION_CLASS",
                                                "REQUIREMENT_PLAYER_HAS_MOST_RELIGION_FOLLOWERS",
                                                "REQUIREMENT_PLAYER_HAS_MOST_TERRITORY",
                                                "REQUIREMENT_PLAYER_HAS_MOST_WMD_CITY_HITS",
                                                "REQUIREMENT_PLAYER_HAS_PANTHEON",
                                                "REQUIREMENT_PLAYER_HAS_RESOURCE_IMPROVED",
                                                "REQUIREMENT_PLAYER_HAS_RESOURCE_OWNED",
                                                "REQUIREMENT_PLAYER_HAS_RESOURCE_VISIBILITY",
                                                "REQUIREMENT_PLAYER_HAS_SAME_GOVERNMENT",
                                                "REQUIREMENT_PLAYER_HAS_SCIENCE_VICTORY_POINTS",
                                                "REQUIREMENT_PLAYER_HAS_TECHNOLOGY",
                                                "REQUIREMENT_PLAYER_INCOME_LEAD",
                                                "REQUIREMENT_PLAYER_IN_JOINT_EMERGENCY",
                                                "REQUIREMENT_PLAYER_IS_ATTACKING",
                                                "REQUIREMENT_PLAYER_IS_AT_LEAST_ALLIANCE_LEVEL_WITH_EMERGENCY_PLAYER",
                                                "REQUIREMENT_PLAYER_IS_AT_PEACE",
                                                "REQUIREMENT_PLAYER_IS_AT_PEACE_WITH_ALL_MAJORS",
                                                "REQUIREMENT_PLAYER_IS_AT_WAR",
                                                "REQUIREMENT_PLAYER_IS_BARBARIAN",
                                                "REQUIREMENT_PLAYER_IS_CLOSE_TO_VICTORY",
                                                "REQUIREMENT_PLAYER_IS_DIFFERENT_SECRET_SOCIETY",
                                                "REQUIREMENT_PLAYER_IS_EMERGENCY_MEMBER_WITH_SCORE",
                                                "REQUIREMENT_PLAYER_IS_EMERGENCY_TARGET",
                                                "REQUIREMENT_PLAYER_IS_HUMAN",
                                                "REQUIREMENT_PLAYER_IS_MAJOR",
                                                "REQUIREMENT_PLAYER_IS_MINOR",
                                                "REQUIREMENT_PLAYER_IS_NEIGHBOR",
                                                "REQUIREMENT_PLAYER_IS_NOT_WARMONGER",
                                                "REQUIREMENT_PLAYER_IS_RELIGION_FOUNDER",
                                                "REQUIREMENT_PLAYER_IS_SAME_RELIGION",
                                                "REQUIREMENT_PLAYER_IS_SAME_SECRET_SOCIETY",
                                                "REQUIREMENT_PLAYER_IS_SAME_SEX",
                                                "REQUIREMENT_PLAYER_IS_SHARING_INFO",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN_BONUS_ENABLED",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN_OF_X",
                                                "REQUIREMENT_PLAYER_IS_SUZERAIN_X_TYPE",
                                                "REQUIREMENT_PLAYER_IS_TEAM_MEMBER",
                                                "REQUIREMENT_PLAYER_IS_WINNING_ANY_VICTORY",
                                                "REQUIREMENT_PLAYER_LEADER_TAG_MATCHES",
                                                "REQUIREMENT_PLAYER_LEADER_TYPE_MATCHES",
                                                "REQUIREMENT_PLAYER_MAJORITY_RELIGION_IS_OWNER",
                                                "REQUIREMENT_PLAYER_MEETS_SCORE_THRESHOLD",
                                                "REQUIREMENT_PLAYER_MET_X_TURNS_AGO",
                                                "REQUIREMENT_PLAYER_MILITARY_STRENGTH_LEAD",
                                                "REQUIREMENT_PLAYER_MOUNTAIN_CITIES",
                                                "REQUIREMENT_PLAYER_NOT_COMPETING_MINORS",
                                                "REQUIREMENT_PLAYER_NOT_INVOLVED_MINORS",
                                                "REQUIREMENT_PLAYER_NUKE_LOVER",
                                                "REQUIREMENT_PLAYER_ON_NON_HOME_CONTINENT",
                                                "REQUIREMENT_PLAYER_OWNS_OBJECT",
                                                "REQUIREMENT_PLAYER_PEACEFUL_ON_CONTINENT",
                                                "REQUIREMENT_PLAYER_PILLAGE_LEAD",
                                                "REQUIREMENT_PLAYER_POPULATION_LEAD",
                                                "REQUIREMENT_PLAYER_RELIGION_NOT_RECEIVED",
                                                "REQUIREMENT_PLAYER_RELIGION_RECEIVED",
                                                "REQUIREMENT_PLAYER_SHARES_HOME_CONTINENT",
                                                "REQUIREMENT_PLAYER_STANDING_ARMY_LEAD",
                                                "REQUIREMENT_PLAYER_TEAM_MEMBER",
                                                "REQUIREMENT_PLAYER_TOURISM_LEAD",
                                                "REQUIREMENT_PLAYER_TURN_STARTED",
                                                "REQUIREMENT_PLAYER_TYPE_MATCHES",
                                                "REQUIREMENT_PLAYER_WITH_SHIELD_OR_ON_IT",
                                                "REQUIREMENT_PLAYER_YIELD_LEAD",
                                                "REQUIREMENT_PLOT_ADJACENT_BUILDING_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_DISTRICT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_FEATURE_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_FRIENDLY_TERRITORY",
                                                "REQUIREMENT_PLOT_ADJACENT_FRIENDLY_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_FRIENDLY_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_IMPROVEMENT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_RESOURCE_CLASS_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_TERRAIN_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_COAST",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_LAKE",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_MOUNTAIN",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_NATURAL_WONDER",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_OWNER",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_OWNER_AT_WAR",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_RIVER",
                                                "REQUIREMENT_PLOT_ADJACENT_TO_WONDER",
                                                "REQUIREMENT_PLOT_ADJACENT_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_ANY_ADJACENT_RESOURCE",
                                                "REQUIREMENT_PLOT_DISTRICT_IS_DEFENDED",
                                                "REQUIREMENT_PLOT_DISTRICT_IS_FUNCTIONING",
                                                "REQUIREMENT_PLOT_DISTRICT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_DISTRICT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_FEATURE_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_FEATURE_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_HAS_ANY_DISTRICT",
                                                "REQUIREMENT_PLOT_HAS_ANY_FEATURE",
                                                "REQUIREMENT_PLOT_HAS_ANY_IMPROVEMENT",
                                                "REQUIREMENT_PLOT_HAS_ANY_RESOURCE",
                                                "REQUIREMENT_PLOT_HAS_FALLOUT",
                                                "REQUIREMENT_PLOT_IMPROVED_RESOURCE_CLASS_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_IMPROVEMENT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_IMPROVEMENT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_IS_APPEAL_BETWEEN",
                                                "REQUIREMENT_PLOT_IS_COAST",
                                                "REQUIREMENT_PLOT_IS_COASTAL_LAND",
                                                "REQUIREMENT_PLOT_IS_FRESH_WATER",
                                                "REQUIREMENT_PLOT_IS_HILLS",
                                                "REQUIREMENT_PLOT_IS_IMPASSABLE",
                                                "REQUIREMENT_PLOT_IS_LAKE",
                                                "REQUIREMENT_PLOT_IS_MOUNTAIN",
                                                "REQUIREMENT_PLOT_IS_OWNER_CAPITAL_CONTINENT",
                                                "REQUIREMENT_PLOT_NEARBY_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_NEAR_CAPITAL",
                                                "REQUIREMENT_PLOT_PROPERTY_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_CLASS_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_TAG_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_RESOURCE_VISIBLE",
                                                "REQUIREMENT_PLOT_TERRAIN_CLASS_MATCHES",
                                                "REQUIREMENT_PLOT_TERRAIN_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_UNIT_CITY_HAS_ANY_DISTRICT",
                                                "REQUIREMENT_PLOT_UNIT_CITY_HAS_DISTRICT_SAME_OWNER",
                                                "REQUIREMENT_PLOT_UNIT_EMBARKED",
                                                "REQUIREMENT_PLOT_UNIT_FLANKED",
                                                "REQUIREMENT_PLOT_UNIT_TYPE_MATCHES",
                                                "REQUIREMENT_PLOT_WONDER_IS_ERA",
                                                "REQUIREMENT_RANDOM_VALUE_LESS_THAN_OR_EQUAL_TO",
                                                "REQUIREMENT_REQUIREMENTSET_IS_MET",
                                                "REQUIREMENT_RESIDENT_EMBASSY",
                                                "REQUIREMENT_SPECIFIC_LEADER_ELIMINATED",
                                                "REQUIREMENT_TEAM_CONQUERED_X_CITY_STATES",
                                                "REQUIREMENT_TEAM_DIPLOMATIC_VICTORY",
                                                "REQUIREMENT_TEAM_DOMINATION_VICTORY",
                                                "REQUIREMENT_TEAM_HAS_ANCIENT_RIVALS_VICTORY",
                                                "REQUIREMENT_TEAM_HAS_HIGHEST_SCORE",
                                                "REQUIREMENT_TEAM_HAS_MOST_PROMOTION_CLASS",
                                                "REQUIREMENT_TEAM_HAS_MOST_RELIGION_FOLLOWERS",
                                                "REQUIREMENT_TEAM_HAS_MOST_TERRITORY",
                                                "REQUIREMENT_TEAM_HAS_MOST_WMD_CITY_HITS",
                                                "REQUIREMENT_TOURISTS_EXCEED_STAYCATIONERS",
                                                "REQUIREMENT_TRADE_ROUTE_BETWEEN_ALLIANCE_PARTNERS",
                                                "REQUIREMENT_TRADE_ROUTE_BETWEEN_EMERGENCY_MEMBERS",
                                                "REQUIREMENT_TRADE_ROUTE_BETWEEN_EMERGENCY_MEMBER_AND_TARGET",
                                                "REQUIREMENT_TRADE_ROUTE_DESTINATION_IS_CITY_STATE",
                                                "REQUIREMENT_UNITDEATH_KILLED_BY_SPECIFIC_UNIT_TYPE",
                                                "REQUIREMENT_UNITDEATH_KILLED_BY_UNIT",
                                                "REQUIREMENT_UNITDEATH_SPECIFIC_UNIT_TYPE",
                                                "REQUIREMENT_UNITDEATH_X_TURNS_AGO",
                                                "REQUIREMENT_UNIT_ADJACENT_TO_OWNER_TERRITORY",
                                                "REQUIREMENT_UNIT_DAMAGE_MINIMUM",
                                                "REQUIREMENT_UNIT_DOMAIN_MATCHES",
                                                "REQUIREMENT_UNIT_EMBARKED",
                                                "REQUIREMENT_UNIT_ERA_TYPE_MATCHES",
                                                "REQUIREMENT_UNIT_FORMATION_CLASS_MATCHES",
                                                "REQUIREMENT_UNIT_HAS_ABILITY",
                                                "REQUIREMENT_UNIT_HAS_PROMOTION",
                                                "REQUIREMENT_UNIT_IN_EMERGENCY_TARGET_TERRITORY",
                                                "REQUIREMENT_UNIT_IN_ENEMY_TERRITORY",
                                                "REQUIREMENT_UNIT_IN_FORMATION",
                                                "REQUIREMENT_UNIT_IN_OWNER_TERRITORY",
                                                "REQUIREMENT_UNIT_IS_BARBARIAN",
                                                "REQUIREMENT_UNIT_IS_COMBAT",
                                                "REQUIREMENT_UNIT_IS_LEVIED",
                                                "REQUIREMENT_UNIT_ON_COAST",
                                                "REQUIREMENT_UNIT_ON_HOME_CONTINENT",
                                                "REQUIREMENT_UNIT_PLOT_HAS_NATIONAL_PARK",
                                                "REQUIREMENT_UNIT_PROMOTION_CLASS_MATCHES",
                                                "REQUIREMENT_UNIT_TAG_MATCHES",
                                                "REQUIREMENT_UNIT_TYPE_MATCHES"
                                            ],
                                            "type": "string"
                                        },
                                        "Likeliness": {
                                            "description": "The percent chance the requirement will resolve when conditions are met.",
                                            "type": "number"
                                        },
                                        "Impact": {
                                            "type": "boolean"
                                        },
                                        "Inverse": {
                                            "type": "boolean"
                                        },
                                        "Reverse": {
                                            "type": "boolean"
                                        },
                                        "Persistent": {
                                            "type": "boolean"
                                        },
                                        "ProgressWeight": {
                                            "type": "boolean"
                                        },
                                        "Triggered": {
                                            "type": "boolean"
                                        },
                                        "Arguments": {
                                            "$ref": "#/definitions/Record<\"CivicType\"|\"Tag\"|\"UnitType\"|\"Type\"|\"UnitAbilityType\"|\"GreatPersonClass\"|\"YieldType\"|\"GreatPersonClassType\"|\"TerrainType\"|\"ResourceType\"|\"MinRange\"|\"ImprovementType\"|\"Amount\"|\"ProjectType\"|\"UnitPromotionClass\"|\"PromotionClass\"|\"CivilizationType\"|\"DomainType\"|\"DistrictType\"|\"UnitDomain\"|\"BuildingType\"|\"MinimumCount\"|\"EraType\"|\"FeatureType\"|\"MaxRange\"|\"OnlyOwnersCity\"|\"PropertyName\"|\"ExplorationRatio\"|\"BeliefType\"|\"GreatPersonRatio\"|\"ExcludeEmergencies\"|\"PropertyMinimum\"|\"FoundingDelay\"|\"MinDistrictsNeeded\"|\"MaxGameTurn\"|\"GovernorPromotionType\"|\"Established\"|\"LowerBound\"|\"VictoryType\"|\"AgreementValue\"|\"DistrictPercentThreshold\"|\"PercentCompeting\"|\"PlayerIsVictorious\"|\"MinimumCompletions\"|\"NoUpperBound\"|\"WonderRatio\"|\"CollectionType\"|\"YieldRatio\"|\"MinimumAppeal\"|\"MinGameEra\"|\"GreatPersonIndividual\"|\"ExactMatch\"|\"ExtraIncrementHighestDifficulty\"|\"BuiltNukeValue\"|\"NoLowerBound\"|\"MinimumCities\"|\"Level\"|\"ARGUMENTS\"|\"StrengthRatio\"|\"OwnerCivLevel\"|\"AboveThreshold\"|\"TechCivicDifferential\"|\"Handicap\"|\"FormationClass\"|\"ChecKForFewer\"|\"OpponentCivLevel\"|\"MaximumAppeal\"|\"MinimumDelta\"|\"Water\"|\"TurnsAgo\"|\"BelowPercentage\"|\"Hills\"|\"MaxDistance\"|\"MinGameTurn\"|\"CombatType\"|\"TraitType\"|\"IgnoreCities\"|\"ClearedCampValue\"|\"TransferType\"|\"TurnsToIgnoreLiberatorTroops\"|\"WarType\"|\"ScoreLowestDifficulty\"|\"Ratio\"|\"Percentage\"|\"LayerIndex\"|\"UsedNukeValue\"|\"SharingInfoWell\"|\"TotalScoreThreshold\"|\"GracePeriod\"|\"MinTurns\"|\"PopulationRatio\"|\"Y\"|\"GovernmentBuildingTier\"|\"BelowThreshold\"|\"AdjustForGameSpeed\"|\"MinDistance\"|\"RequirementSetId\"|\"CampToCityDistance\"|\"HappinessRatio\"|\"MinimumEraType\"|\"CombatVersusType\"|\"MustBeFunctioning\"|\"IgnoreUnits\"|\"WhileMet\"|\"MilitaryFormation\"|\"ResourceClassType\"|\"IncludeCenter\"|\"Count\"|\"TechnologyType\"|\"IgnoredCampValue\"|\"HostileOnly\"|\"AverageWallLevelThreshold\"|\"IncrementPerDifficulty\"|\"X\"|\"MinimumTokens\"|\"LeaderType\"|\"UpperBound\"|\"DistanceToMountain\"|\"MinOwnerAlliances\"|\"MinimumAmount\"|\"FriendlyCity\"|\"SameOwner\"|\"TerrainClass\",{Value?:string|number;Range?:{Min:string|number;Max:string|number;};Type?:\"ARGTYPE_IDENTITY\"|\"ScaleByGameSpeed\"|\"LinearScaleFromDefaultHandicap\";}>",
                                            "description": "Parameters that can be set to specify the exact conditions of your requirement."
                                        }
                                    },
                                    "required": [
                                        "RequirementType"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "RequirementSetType",
                            "Requirements"
                        ]
                    },
                    "Connections": {
                        "type": "object",
                        "properties": {
                            "BeliefModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "BuildingModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "CivicModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "DistrictModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GameModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GovernmentModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GreatPersonIndividualActionModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GreatPersonIndividualBirthModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GreatPersonIndividualIconModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GreatWorkModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "ImprovementModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "ModifierStrings": {
                                "type": "object",
                                "properties": {}
                            },
                            "PolicyModifiers": {
                                "type": "object",
                                "properties": {
                                    "PolicyType": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PolicyType"
                                ]
                            },
                            "ProjectCompletionModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "TechnologyModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "TraitModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "UnitAbilityModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "UnitPromotionModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "CommemorationModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "ComplimentModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GovernorModifiers": {
                                "type": "object",
                                "properties": {}
                            },
                            "GovernorPromotionModifiers": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "required": [
                    "ModifierId"
                ]
            }
        }
    },
    "definitions": {
        "Record<\"Member\"|\"NoSpread\"|\"VictoryResolution\"|\"HasBonus\"|\"CivicType\"|\"Score\"|\"ModifierId\"|\"BetterMilitaryBonus\"|\"CityGainLowerBound\"|\"PerXItems\"|\"Prohibited\"|\"Tag\"|\"UseAdvancedCoastalRaid\"|\"UnitType\"|\"Corps\"|\"FavorAmount\"|\"KeepOverflow\"|\"Accumulates\"|\"TopMilitaryBonus\"|\"Disable\"|\"SameEraIntoleranceFlatBonus\"|\"TargetOnly\"|\"CanMove\"|\"Fallout\"|\"DiplomaticYieldSource\"|\"NeverSurpriseWarPenalty\"|\"ReligiousOnly\"|\"CanFight\"|\"Foreign\"|\"YieldChange\"|\"Tourism\"|\"YieldToGrant\"|\"Intercontinental\"|\"MustReplaceImprovement\"|\"CanRaid\"|\"ApplyImmediately\"|\"Delta\"|\"Action\"|\"TargetLargeCityPercentage\"|\"DisappointingHolySitePercentage\"|\"PromotionClass2\"|\"HighThreshold\"|\"Favored\"|\"Disabled\"|\"IsWonder\"|\"Offense\"|\"TargetHolySitePercentage\"|\"Destination\"|\"Extract\"|\"UnitProductionPercent\"|\"Source\"|\"Discount\"|\"MaxPercent\"|\"ScorePerCity\"|\"YieldTypeToMirror\"|\"Type\"|\"RouteType\"|\"StartEra\"|\"IncrementTurns\"|\"RecentSurpriseWarBonus\"|\"ReductionValue\"|\"Banned\"|\"AmountPerIncident\"|\"Enabled\"|\"WhichEffect\"|\"Enter\"|\"Turns\"|\"EscortMobility\"|\"YieldTypeToGrant\"|\"TopRankingDiploMod\"|\"LandVictorySpread\"|\"EndEra\"|\"AbilityType\"|\"UniqueOverride\"|\"HighPopulationThreshold\"|\"ReligiousCombat\"|\"Experience\"|\"DiplomaticAction\"|\"Scale\"|\"LowThreshold\"|\"HighScoreThreshold\"|\"TurnsActive\"|\"InternationalMajors\"|\"UnitAbilityType\"|\"BeliefYieldType\"|\"EachSurpriseWarBonus\"|\"Increment\"|\"StackWithOtherDiploYieldModifiers\"|\"EntireCity\"|\"GreatPersonClass\"|\"Valid\"|\"CityStatesOnly\"|\"GreatWorkSlotType\"|\"DiploModPerSpaceport\"|\"YieldType\"|\"NoRemove\"|\"Exert\"|\"RealismSettingType\"|\"UnitPromotionClassType\"|\"DefenseValue\"|\"GreatPersonClassType\"|\"DiploModPerSpaceProject\"|\"TerrainType\"|\"InitialValue\"|\"AvoidedWarPenalty\"|\"MaxWarDeclaredBonus\"|\"ResourceType\"|\"TechCivicsPerYield\"|\"TilesRequired\"|\"MinRange\"|\"Access\"|\"SpreadMultiplier\"|\"NewOwner\"|\"ModifierPerKeptPledge\"|\"MaxPositiveModifier\"|\"UnitCostPercent\"|\"CityGainUpperBound\"|\"NoTradePenalty\"|\"Enemy\"|\"ConvertsCity\"|\"MaxDiploModifierMagnitude\"|\"TechEnabledSpreadMultiplier\"|\"DiploModForCircumnavigation\"|\"Founder\"|\"PolicyType\"|\"PenaltyPerOccupiedCity\"|\"AllowUniqueOverride\"|\"Value\"|\"ShareVis\"|\"TileImprovementPreferenceValue\"|\"ImprovementType\"|\"IncrementValue\"|\"ForestPlacedValue\"|\"ReplacesAll\"|\"NoHousing\"|\"PercentageActive\"|\"RequiredAppeal\"|\"Bonus\"|\"GoodyHutImprovementType\"|\"Tooltip\"|\"MinimumEra\"|\"PercentOfGrievances\"|\"CanAttack\"|\"PercentOfGrievancesDelta\"|\"BonusIfNotOriginalOwner\"|\"GovernorType\"|\"AlwaysLoyal\"|\"PlotFeatureRemovedValue\"|\"GovernmentSlotType\"|\"Amount\"|\"ScorePerStep\"|\"HiddenAgenda\"|\"StatementKey\"|\"CanCapture\"|\"CanPurchase\"|\"BonusType\"|\"YieldBasedOnAppeal\"|\"EmergencyType\"|\"BetterTerritoryBonus\"|\"PaidForPeacePenalty\"|\"AddedGovernmentSlotType\"|\"ForeignCities\"|\"Available\"|\"LowScoreThreshold\"|\"Multiplier\"|\"ProjectType\"|\"IncludeWonder\"|\"MechanicName\"|\"MaxTilesSmallIsland\"|\"UnitPromotionClass\"|\"DeltaWithOpponent\"|\"InternationalMinors\"|\"Neutralize\"|\"IncludeCivilian\"|\"SimpleModifierDescription\"|\"PlotFeatureRemovalValue\"|\"Domestic\"|\"PromotionClass\"|\"Skip\"|\"ModifierPerKeptPromise\"|\"NoReduction\"|\"Range\"|\"AddAmenity\"|\"Stack\"|\"Adopt\"|\"ResourceUsageType\"|\"CivilizationType\"|\"NoFinishMoves\"|\"Origin\"|\"DomainType\"|\"PlunderType\"|\"DistrictType\"|\"Improvement\"|\"TechType\"|\"ImmediateTradingPost\"|\"DisappointingLargeCityPercentage\"|\"MajorWarBonus\"|\"ScalingFactor\"|\"NoDamage\"|\"UnitDomain\"|\"PromotionClass1\"|\"Protected\"|\"Percent\"|\"NationalParkConstructionValue\"|\"ModifierPerTransgression\"|\"ThresholdPercent\"|\"YieldToBaseOn\"|\"BuildingType\"|\"DiplomacyKey\"|\"CanDrop\"|\"Multiplicative\"|\"PaidForPeacePenaltyTurnsToFadeOut\"|\"Amenities\"|\"MaxEffectMagnitude\"|\"NoPenalties\"|\"MaxTilesMediumIsland\"|\"UseAdvancedPillaging\"|\"TradeBonus\"|\"AffectDestination\"|\"GreatWorkObjectType\"|\"DifficultyOffset\"|\"Blast\"|\"MinScore\"|\"CorpsPrereqCivic\"|\"SourceType\"|\"SinceWarPenaltyTurns\"|\"Followers\"|\"ReductionTurns\"|\"MinimumCount\"|\"MinPromotedUnits\"|\"NumSteps\"|\"ReplacedGovernmentSlotType\"|\"BottomPercentage\"|\"MaxTilesLargeIsland\"|\"Converts\"|\"OnlyInboundTrade\"|\"MaxValue\"|\"GainTileRadius\"|\"IntoleranceMultiplier\"|\"AffectOrigin\"|\"DiplomaticActionType\"|\"Prevent\"|\"CanSee\"|\"PromotionType\"|\"ReductionPercent\"|\"AvoidedWarPenaltyTurnsToRampUp\"|\"DomesticCities\"|\"Bypass\"|\"SeeHidden\"|\"OtherPlayers\"|\"AffectLocal\"|\"Hidden\"|\"BonusRate\"|\"WaterDamage\"|\"Domain\"|\"OnlyWhenDefeatedEarlierEraUnit\"|\"BuildingProductionPercent\"|\"Favor\"|\"EachWarDeclaredBonus\"|\"RandomEventType\"|\"StartEraType\"|\"Radius\"|\"Convert\"|\"Interval\"|\"ImprovedRouteLevel\"|\"LowerLimit\"|\"TileImprovementHighThreshold\"|\"BottomRankingDiploMod\"|\"EraType\"|\"CantBuildDiploMod\"|\"NotAtWarPenalty\"|\"FeatureType\"|\"HappinessType\"|\"BanDistrictBuildings\"|\"MilitaryFormationType\"|\"EndEraType\"|\"ForceRetreat\"|\"PercentageDifferencePerStep\"|\"ScoreAllowancePerEra\"|\"ResolutionType\"|\"EnhancingTechType\"|\"EffectType\"|\"LowPopulationThreshold\"|\"Description\"|\"Offensive\"|\"Ignore\"|\"Enable\"|\"NoTourism\"|\"TileImprovementLowThreshold\"|\"AcceptableIslandPercentage\"|\"PercentDefeatedStrength\"|\"Overall\"|\"OperationType\"|\"SurpriseWarDegradeTurns\"|\"Religious\"|\"BonusPerRoute\"|\"Defense\"|\"MaxRange\"|\"OnlyOwnersCity\"|\"TopPercentage\"|\"BoostsWonders\"|\"MessageThrottle\"|\"TechBoost\"|\"MovementOnly\"|\"DistanceChange\"|\"Modifier\"|\"MaxNegativeModifier\"|\"RelicUponDeath\"|\"PropertyName\"|\"TopTerritoryBonus\"|\"TradeValuePerModifierPoint\",{Value?:string|number;Type?:\"ARGTYPE_IDENTITY\"|\"ScaleByGameSpeed\"|\"LinearScaleFromDefaultHandicap\";}>": {
            "type": "object",
            "properties": {
                "Member": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoSpread": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "VictoryResolution": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HasBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CivicType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Score": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ModifierId": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BetterMilitaryBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CityGainLowerBound": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PerXItems": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Prohibited": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Tag": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UseAdvancedCoastalRaid": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Corps": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "FavorAmount": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "KeepOverflow": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Accumulates": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TopMilitaryBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Disable": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SameEraIntoleranceFlatBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TargetOnly": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanMove": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Fallout": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DiplomaticYieldSource": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NeverSurpriseWarPenalty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ReligiousOnly": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanFight": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Foreign": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldChange": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Tourism": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldToGrant": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Intercontinental": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MustReplaceImprovement": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanRaid": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ApplyImmediately": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Delta": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Action": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TargetLargeCityPercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DisappointingHolySitePercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PromotionClass2": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HighThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Favored": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Disabled": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IsWonder": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Offense": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TargetHolySitePercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Destination": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Extract": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitProductionPercent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Source": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Discount": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxPercent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ScorePerCity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldTypeToMirror": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Type": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "RouteType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "StartEra": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IncrementTurns": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "RecentSurpriseWarBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ReductionValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Banned": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AmountPerIncident": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Enabled": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "WhichEffect": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Enter": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Turns": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EscortMobility": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldTypeToGrant": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TopRankingDiploMod": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LandVictorySpread": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EndEra": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AbilityType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UniqueOverride": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HighPopulationThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ReligiousCombat": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Experience": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DiplomaticAction": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Scale": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LowThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HighScoreThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TurnsActive": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "InternationalMajors": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitAbilityType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BeliefYieldType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EachSurpriseWarBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Increment": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "StackWithOtherDiploYieldModifiers": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EntireCity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatPersonClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Valid": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CityStatesOnly": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatWorkSlotType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DiploModPerSpaceport": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoRemove": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Exert": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "RealismSettingType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitPromotionClassType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DefenseValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatPersonClassType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DiploModPerSpaceProject": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TerrainType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "InitialValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AvoidedWarPenalty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxWarDeclaredBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ResourceType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TechCivicsPerYield": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TilesRequired": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinRange": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Access": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SpreadMultiplier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NewOwner": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ModifierPerKeptPledge": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxPositiveModifier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitCostPercent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CityGainUpperBound": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoTradePenalty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Enemy": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ConvertsCity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxDiploModifierMagnitude": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TechEnabledSpreadMultiplier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DiploModForCircumnavigation": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Founder": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PolicyType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PenaltyPerOccupiedCity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AllowUniqueOverride": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Value": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ShareVis": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TileImprovementPreferenceValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ImprovementType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IncrementValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ForestPlacedValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ReplacesAll": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoHousing": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PercentageActive": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "RequiredAppeal": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Bonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GoodyHutImprovementType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Tooltip": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumEra": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PercentOfGrievances": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanAttack": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PercentOfGrievancesDelta": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BonusIfNotOriginalOwner": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GovernorType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AlwaysLoyal": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PlotFeatureRemovedValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GovernmentSlotType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Amount": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ScorePerStep": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HiddenAgenda": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "StatementKey": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanCapture": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanPurchase": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BonusType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldBasedOnAppeal": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EmergencyType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BetterTerritoryBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PaidForPeacePenalty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AddedGovernmentSlotType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ForeignCities": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Available": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LowScoreThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Multiplier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ProjectType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IncludeWonder": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MechanicName": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxTilesSmallIsland": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitPromotionClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DeltaWithOpponent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "InternationalMinors": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Neutralize": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IncludeCivilian": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SimpleModifierDescription": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PlotFeatureRemovalValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Domestic": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PromotionClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Skip": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ModifierPerKeptPromise": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoReduction": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Range": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AddAmenity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Stack": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Adopt": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ResourceUsageType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CivilizationType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoFinishMoves": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Origin": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DomainType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PlunderType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DistrictType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Improvement": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TechType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ImmediateTradingPost": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DisappointingLargeCityPercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MajorWarBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ScalingFactor": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoDamage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitDomain": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PromotionClass1": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Protected": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Percent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NationalParkConstructionValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ModifierPerTransgression": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ThresholdPercent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldToBaseOn": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BuildingType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DiplomacyKey": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanDrop": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Multiplicative": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PaidForPeacePenaltyTurnsToFadeOut": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Amenities": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxEffectMagnitude": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoPenalties": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxTilesMediumIsland": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UseAdvancedPillaging": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TradeBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AffectDestination": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatWorkObjectType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DifficultyOffset": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Blast": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinScore": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CorpsPrereqCivic": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SourceType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SinceWarPenaltyTurns": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Followers": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ReductionTurns": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumCount": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinPromotedUnits": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NumSteps": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ReplacedGovernmentSlotType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BottomPercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxTilesLargeIsland": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Converts": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OnlyInboundTrade": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GainTileRadius": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IntoleranceMultiplier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AffectOrigin": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DiplomaticActionType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Prevent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CanSee": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PromotionType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ReductionPercent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AvoidedWarPenaltyTurnsToRampUp": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DomesticCities": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Bypass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SeeHidden": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OtherPlayers": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AffectLocal": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Hidden": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BonusRate": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "WaterDamage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Domain": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OnlyWhenDefeatedEarlierEraUnit": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BuildingProductionPercent": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Favor": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EachWarDeclaredBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "RandomEventType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "StartEraType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Radius": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Convert": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Interval": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ImprovedRouteLevel": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LowerLimit": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TileImprovementHighThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BottomRankingDiploMod": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EraType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CantBuildDiploMod": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NotAtWarPenalty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "FeatureType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HappinessType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BanDistrictBuildings": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MilitaryFormationType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EndEraType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ForceRetreat": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PercentageDifferencePerStep": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ScoreAllowancePerEra": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ResolutionType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EnhancingTechType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EffectType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LowPopulationThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Description": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Offensive": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Ignore": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Enable": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoTourism": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TileImprovementLowThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AcceptableIslandPercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PercentDefeatedStrength": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Overall": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OperationType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SurpriseWarDegradeTurns": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Religious": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BonusPerRoute": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Defense": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxRange": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OnlyOwnersCity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TopPercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BoostsWonders": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MessageThrottle": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TechBoost": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MovementOnly": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DistanceChange": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Modifier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxNegativeModifier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "RelicUponDeath": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PropertyName": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TopTerritoryBonus": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TradeValuePerModifierPoint": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Record<\"CivicType\"|\"Tag\"|\"UnitType\"|\"Type\"|\"UnitAbilityType\"|\"GreatPersonClass\"|\"YieldType\"|\"GreatPersonClassType\"|\"TerrainType\"|\"ResourceType\"|\"MinRange\"|\"ImprovementType\"|\"Amount\"|\"ProjectType\"|\"UnitPromotionClass\"|\"PromotionClass\"|\"CivilizationType\"|\"DomainType\"|\"DistrictType\"|\"UnitDomain\"|\"BuildingType\"|\"MinimumCount\"|\"EraType\"|\"FeatureType\"|\"MaxRange\"|\"OnlyOwnersCity\"|\"PropertyName\"|\"ExplorationRatio\"|\"BeliefType\"|\"GreatPersonRatio\"|\"ExcludeEmergencies\"|\"PropertyMinimum\"|\"FoundingDelay\"|\"MinDistrictsNeeded\"|\"MaxGameTurn\"|\"GovernorPromotionType\"|\"Established\"|\"LowerBound\"|\"VictoryType\"|\"AgreementValue\"|\"DistrictPercentThreshold\"|\"PercentCompeting\"|\"PlayerIsVictorious\"|\"MinimumCompletions\"|\"NoUpperBound\"|\"WonderRatio\"|\"CollectionType\"|\"YieldRatio\"|\"MinimumAppeal\"|\"MinGameEra\"|\"GreatPersonIndividual\"|\"ExactMatch\"|\"ExtraIncrementHighestDifficulty\"|\"BuiltNukeValue\"|\"NoLowerBound\"|\"MinimumCities\"|\"Level\"|\"ARGUMENTS\"|\"StrengthRatio\"|\"OwnerCivLevel\"|\"AboveThreshold\"|\"TechCivicDifferential\"|\"Handicap\"|\"FormationClass\"|\"ChecKForFewer\"|\"OpponentCivLevel\"|\"MaximumAppeal\"|\"MinimumDelta\"|\"Water\"|\"TurnsAgo\"|\"BelowPercentage\"|\"Hills\"|\"MaxDistance\"|\"MinGameTurn\"|\"CombatType\"|\"TraitType\"|\"IgnoreCities\"|\"ClearedCampValue\"|\"TransferType\"|\"TurnsToIgnoreLiberatorTroops\"|\"WarType\"|\"ScoreLowestDifficulty\"|\"Ratio\"|\"Percentage\"|\"LayerIndex\"|\"UsedNukeValue\"|\"SharingInfoWell\"|\"TotalScoreThreshold\"|\"GracePeriod\"|\"MinTurns\"|\"PopulationRatio\"|\"Y\"|\"GovernmentBuildingTier\"|\"BelowThreshold\"|\"AdjustForGameSpeed\"|\"MinDistance\"|\"RequirementSetId\"|\"CampToCityDistance\"|\"HappinessRatio\"|\"MinimumEraType\"|\"CombatVersusType\"|\"MustBeFunctioning\"|\"IgnoreUnits\"|\"WhileMet\"|\"MilitaryFormation\"|\"ResourceClassType\"|\"IncludeCenter\"|\"Count\"|\"TechnologyType\"|\"IgnoredCampValue\"|\"HostileOnly\"|\"AverageWallLevelThreshold\"|\"IncrementPerDifficulty\"|\"X\"|\"MinimumTokens\"|\"LeaderType\"|\"UpperBound\"|\"DistanceToMountain\"|\"MinOwnerAlliances\"|\"MinimumAmount\"|\"FriendlyCity\"|\"SameOwner\"|\"TerrainClass\",{Value?:string|number;Range?:{Min:string|number;Max:string|number;};Type?:\"ARGTYPE_IDENTITY\"|\"ScaleByGameSpeed\"|\"LinearScaleFromDefaultHandicap\";}>": {
            "type": "object",
            "properties": {
                "CivicType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Tag": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Type": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitAbilityType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatPersonClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatPersonClassType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TerrainType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ResourceType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinRange": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ImprovementType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Amount": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ProjectType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitPromotionClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PromotionClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CivilizationType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DomainType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DistrictType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UnitDomain": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BuildingType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumCount": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "EraType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "FeatureType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxRange": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OnlyOwnersCity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PropertyName": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ExplorationRatio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BeliefType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatPersonRatio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ExcludeEmergencies": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PropertyMinimum": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "FoundingDelay": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinDistrictsNeeded": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxGameTurn": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GovernorPromotionType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Established": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LowerBound": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "VictoryType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AgreementValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DistrictPercentThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PercentCompeting": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PlayerIsVictorious": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumCompletions": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoUpperBound": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "WonderRatio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CollectionType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "YieldRatio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumAppeal": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinGameEra": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GreatPersonIndividual": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ExactMatch": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ExtraIncrementHighestDifficulty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BuiltNukeValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "NoLowerBound": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumCities": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Level": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ARGUMENTS": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "StrengthRatio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OwnerCivLevel": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AboveThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TechCivicDifferential": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Handicap": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "FormationClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ChecKForFewer": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "OpponentCivLevel": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaximumAppeal": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumDelta": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Water": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TurnsAgo": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BelowPercentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Hills": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MaxDistance": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinGameTurn": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CombatType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TraitType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IgnoreCities": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ClearedCampValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TransferType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TurnsToIgnoreLiberatorTroops": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "WarType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ScoreLowestDifficulty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Ratio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Percentage": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LayerIndex": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UsedNukeValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SharingInfoWell": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TotalScoreThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GracePeriod": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Min Turns": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "PopulationRatio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Y": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "GovernmentBuildingTier": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "BelowThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AdjustForGameSpeed": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinDistance": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "RequirementSetId": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CampToCityDistance": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HappinessRatio": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumEraType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "CombatVersusType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MustBeFunctioning": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IgnoreUnits": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "WhileMet": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MilitaryFormation": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "ResourceClassType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IncludeCenter": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "Count": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TechnologyType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IgnoredCampValue": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "HostileOnly": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "AverageWallLevelThreshold": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "IncrementPerDifficulty": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "X": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumTokens": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "LeaderType": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "UpperBound": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "DistanceToMountain": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinOwnerAlliances": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "MinimumAmount": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "FriendlyCity": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "SameOwner": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                },
                "TerrainClass": {
                    "type": "object",
                    "properties": {
                        "Value": {
                            "description": "Value the argument is set to.",
                            "type": [
                                "string",
                                "number"
                            ]
                        },
                        "Range": {
                            "description": "A specified range of values for the argument.\n\nWill take presedence over `Value` if set.",
                            "type": "object",
                            "properties": {
                                "Min": {
                                    "description": "Lower bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                },
                                "Max": {
                                    "description": "Upper bound of the range.\n\nIf a string, it must be a valid SQL query that returns a numeric 1-cell result-set.\n\nEx: `SELECT count(*) FROM Technologies`",
                                    "type": [
                                        "string",
                                        "number"
                                    ]
                                }
                            },
                            "required": [
                                "Max",
                                "Min"
                            ]
                        },
                        "Type": {
                            "description": "Defaults to `ARGTYPE_IDENTITY`.\n\n- `ARGTYPE_IDENTITY`: Normal behaviour, value is exactly as stated\n- `ScaleByGameSpeed`: If value is numeric, will scale it linearly with game speed\n- `LinearScaleFromDefaultHandicap`: If value is numeric, will scale it linearly with difficulty level",
                            "enum": [
                                "ARGTYPE_IDENTITY",
                                "LinearScaleFromDefaultHandicap",
                                "ScaleByGameSpeed"
                            ],
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "$schema": "http://json-schema.org/draft-07/schema#"
}